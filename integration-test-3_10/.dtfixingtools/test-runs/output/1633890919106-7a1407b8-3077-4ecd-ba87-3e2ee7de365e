13:35:19,806 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml]
13:35:19,806 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback.groovy]
13:35:19,806 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [file:/home/ch61/Achilles/integration-test-3_7/target/classes/logback.xml]
13:35:19,807 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs multiple times on the classpath.
13:35:19,807 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs at [file:/home/ch61/Achilles/integration-test-3_2/target/classes/logback.xml]
13:35:19,807 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs at [file:/home/ch61/Achilles/integration-test-2_2/target/classes/logback.xml]
13:35:19,807 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs at [file:/home/ch61/Achilles/integration-test-2_1/target/classes/logback.xml]
13:35:19,807 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs at [file:/home/ch61/Achilles/achilles-schema-generator/target/classes/logback.xml]
13:35:19,807 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs at [file:/home/ch61/Achilles/integration-test-3_7/target/classes/logback.xml]
13:35:19,807 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs at [file:/home/ch61/Achilles/integration-test-3_6/target/classes/logback.xml]
13:35:19,807 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs at [file:/home/ch61/Achilles/integration-test-3_0/target/classes/logback.xml]
13:35:19,858 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - debug attribute not set
13:35:19,866 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - Will scan for changes in [file:/home/ch61/Achilles/integration-test-3_7/target/classes/logback.xml] 
13:35:19,866 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - Setting ReconfigureOnChangeTask scanning period to 30 seconds
13:35:19,867 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
13:35:19,871 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [STDOUT]
13:35:19,879 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
13:35:19,917 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [ACHILLES_DDL_SCRIPT] to DEBUG
13:35:19,917 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [ACHILLES_DDL_SCRIPT] to false
13:35:19,917 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ACHILLES_DDL_SCRIPT]
13:35:19,918 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [ACHILLES_DML_STATEMENT] to DEBUG
13:35:19,918 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [ACHILLES_DML_STATEMENT] to false
13:35:19,918 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ACHILLES_DML_STATEMENT]
13:35:19,918 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [info.archinnov.achilles.internals.entities.EntityWithNonFrozenUDT] to DEBUG
13:35:19,918 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [info.archinnov.achilles.internals.entities.EntityWithNonFrozenUDT] to false
13:35:19,918 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[info.archinnov.achilles.internals.entities.EntityWithNonFrozenUDT]
13:35:19,918 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [info.archinnov.achilles.embedded] to INFO
13:35:19,918 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [info.archinnov.achilles.embedded] to false
13:35:19,918 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[info.archinnov.achilles.embedded]
13:35:19,918 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [info.archinnov.achilles] to WARN
13:35:19,918 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [info.archinnov.achilles] to false
13:35:19,918 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[info.archinnov.achilles]
13:35:19,918 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.apache.cassandra.cql3.QueryProcessor] to OFF
13:35:19,918 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [org.apache.cassandra.cql3.QueryProcessor] to false
13:35:19,918 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[org.apache.cassandra.cql3.QueryProcessor]
13:35:19,918 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.apache.cassandra.db.Memtable] to OFF
13:35:19,918 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [org.apache.cassandra.db.Memtable] to false
13:35:19,918 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[org.apache.cassandra.db.Memtable]
13:35:19,918 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.apache.cassandra.utils.CLibrary] to OFF
13:35:19,918 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [org.apache.cassandra.utils.CLibrary] to false
13:35:19,918 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[org.apache.cassandra.utils.CLibrary]
13:35:19,918 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.apache.cassandra.utils.SigarLibrary] to OFF
13:35:19,918 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [org.apache.cassandra.utils.SigarLibrary] to false
13:35:19,918 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[org.apache.cassandra.utils.SigarLibrary]
13:35:19,919 |-INFO in ch.qos.logback.classic.joran.action.LevelAction - ROOT level set to WARN
13:35:19,919 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ROOT]
13:35:19,919 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration.
13:35:19,919 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@7692d9cc - Registering current configuration as safe fallback point

13:35:19.968 [main] INFO  i.a.achilles.embedded.ServerStarter - Using existing data folder for unit tests : /home/ch61/Achilles/target/cassandra_embedded/data
13:35:19.970 [main] INFO  i.a.achilles.embedded.ServerStarter - Using existing data folder for unit tests : /home/ch61/Achilles/target/cassandra_embedded/commitlog
13:35:19.970 [main] INFO  i.a.achilles.embedded.ServerStarter - Using existing data folder for unit tests : /home/ch61/Achilles/target/cassandra_embedded/saved_caches
13:35:19.970 [main] INFO  i.a.achilles.embedded.ServerStarter - Using existing data folder for unit tests : /home/ch61/Achilles/target/cassandra_embedded/hints
13:35:19.970 [main] INFO  i.a.achilles.embedded.ServerStarter - Using existing data folder for unit tests : /home/ch61/Achilles/target/cassandra_embedded/cdc_raw
13:35:19.981 [main] INFO  i.a.achilles.embedded.ServerStarter - Cleaning up embedded Cassandra data directory '/home/ch61/Achilles/target/cassandra_embedded/data'
13:35:19.994 [main] INFO  i.a.achilles.embedded.ServerStarter - Cleaning up embedded Cassandra data directory '/home/ch61/Achilles/target/cassandra_embedded/commitlog'
13:35:19.994 [main] INFO  i.a.achilles.embedded.ServerStarter - Cleaning up embedded Cassandra data directory '/home/ch61/Achilles/target/cassandra_embedded/saved_caches'
13:35:20.047 [main] INFO  i.a.achilles.embedded.ServerStarter -  Cassandra listen address = localhost
13:35:20.047 [main] INFO  i.a.achilles.embedded.ServerStarter -  Cassandra RPC address = localhost
13:35:20.047 [main] INFO  i.a.achilles.embedded.ServerStarter -  Cassandra broadcast address = 
13:35:20.047 [main] INFO  i.a.achilles.embedded.ServerStarter -  Cassandra RPC broadcast address = 
13:35:20.047 [main] INFO  i.a.achilles.embedded.ServerStarter -  Random embedded Cassandra RPC port/Thrift port = 9160
13:35:20.047 [main] INFO  i.a.achilles.embedded.ServerStarter -  Random embedded Cassandra Native port/CQL port = 9042
13:35:20.047 [main] INFO  i.a.achilles.embedded.ServerStarter -  Random embedded Cassandra Storage port = 7493
13:35:20.047 [main] INFO  i.a.achilles.embedded.ServerStarter -  Random embedded Cassandra Storage SSL port = 7848
13:35:20.047 [main] INFO  i.a.achilles.embedded.ServerStarter -  Random embedded Cassandra Remote JMX port = null
13:35:20.047 [main] INFO  i.a.achilles.embedded.ServerStarter -  Embedded Cassandra triggers directory = /home/ch61/Achilles/target/cassandra_embedded/cassandra_triggers
13:35:20.047 [main] INFO  i.a.achilles.embedded.ServerStarter - Starting Cassandra...
13:35:20.341 [pool-2-thread-1] WARN  o.a.c.config.DatabaseDescriptor - Only 40.199GiB free across all data volumes. Consider adding more capacity to your cluster or removing obsolete snapshots
13:35:20.551 [pool-2-thread-1] WARN  o.a.cassandra.utils.NativeLibrary - Unable to lock JVM memory (ENOMEM). This can result in part of the JVM being swapped out, especially with mmapped I/O enabled. Increase RLIMIT_MEMLOCK or run Cassandra as root.
13:35:20.551 [pool-2-thread-1] WARN  o.a.cassandra.service.StartupChecks - jemalloc shared library could not be preloaded to speed up memory allocations
13:35:20.551 [pool-2-thread-1] WARN  o.a.cassandra.service.StartupChecks - JMX is not enabled to receive remote connections. Please see cassandra-env.sh for more info.
13:35:20.552 [pool-2-thread-1] WARN  o.a.cassandra.service.StartupChecks - The JVM is not configured to stop on OutOfMemoryError which can cause data corruption. Use one of the following JVM options to configure the behavior on OutOfMemoryError:  -XX:+ExitOnOutOfMemoryError, -XX:+CrashOnOutOfMemoryError, or -XX:OnOutOfMemoryError="<cmd args>;<cmd args>"
no libsigar-amd64-linux.so in java.library.path
org.hyperic.sigar.SigarException: no libsigar-amd64-linux.so in java.library.path
	at org.hyperic.sigar.Sigar.loadLibrary(Sigar.java:172)
	at org.hyperic.sigar.Sigar.<clinit>(Sigar.java:100)
	at org.apache.cassandra.utils.SigarLibrary.<init>(SigarLibrary.java:47)
	at org.apache.cassandra.utils.SigarLibrary.<clinit>(SigarLibrary.java:28)
	at org.apache.cassandra.service.StartupChecks$7.execute(StartupChecks.java:266)
	at org.apache.cassandra.service.StartupChecks.verify(StartupChecks.java:125)
	at org.apache.cassandra.service.CassandraDaemon.setup(CassandraDaemon.java:216)
	at org.apache.cassandra.service.CassandraDaemon.activate(CassandraDaemon.java:633)
	at info.archinnov.achilles.embedded.ServerStarter.lambda$start$0(ServerStarter.java:163)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
13:35:20.582 [pool-2-thread-1] WARN  o.a.cassandra.service.StartupChecks - Maximum number of memory map areas per process (vm.max_map_count) 65530 is too low, recommended value: 1048575, you can change it with sysctl.
13:35:24.233 [pool-2-thread-1] WARN  o.apache.cassandra.db.SystemKeyspace - No host ID found, created a7bf2590-e9cd-4db3-adce-537df581b41b (Note: This should happen exactly once per node).
13:35:27.172 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS it_3_10 WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:35:27.605 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS it_3_10.entity_for_group_by(
		id bigint,
		"uuID" uuid,
		clust1 int,
		"clusteRing2" int,
		clust3 int,
		val int,
		PRIMARY KEY((id, "uuID"), clust1, "clusteRing2", clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, "clusteRing2" ASC, clust3 ASC);

13:35:28.135 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE it_3_10.entity_for_group_by
13:35:28.283 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT :  BEGIN UNLOGGED BATCH INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4249005056706833408, 00000000-0000-0001-0000-000000000000, 1, 1, 1, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4249005056706833408, 00000000-0000-0001-0000-000000000000, 1, 1, 2, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4249005056706833408, 00000000-0000-0001-0000-000000000000, 1, 1, 3, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4249005056706833408, 00000000-0000-0001-0000-000000000000, 1, 2, 1, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4249005056706833408, 00000000-0000-0001-0000-000000000000, 1, 2, 2, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4249005056706833408, 00000000-0000-0001-0000-000000000000, 1, 2, 3, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4249005056706833408, 00000000-0000-0001-0000-000000000000, 1, 3, 1, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4249005056706833408, 00000000-0000-0001-0000-000000000000, 1, 3, 2, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4249005056706833408, 00000000-0000-0001-0000-000000000000, 1, 3, 3, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4249005056706833408, 00000000-0000-0001-0000-000000000000, 2, 1, 1, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4249005056706833408, 00000000-0000-0001-0000-000000000000, 2, 1, 2, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4249005056706833408, 00000000-0000-0001-0000-000000000000, 2, 1, 3, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4249005056706833408, 00000000-0000-0001-0000-000000000000, 2, 2, 1, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4249005056706833408, 00000000-0000-0001-0000-000000000000, 2, 2, 2, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4249005056706833408, 00000000-0000-0001-0000-000000000000, 2, 2, 3, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4249005056706833408, 00000000-0000-0001-0000-000000000000, 3, 1, 1, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4249005056706833408, 00000000-0000-0001-0000-000000000000, 3, 1, 2, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4249005056706833408, 00000000-0000-0001-0000-000000000000, 3, 1, 3, 1); APPLY BATCH;

13:35:28.394 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 7aedd157-4dcf-45bd-a029-87d9d7f16a68 : [SELECT clust1,"clusteRing2",sum(val) AS sum_val FROM it_3_10.entity_for_group_by WHERE id=:id AND "uuID"=:"uuID" GROUP BY clust1,"clusteRing2" ORDER BY clust1 ASC;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [4249005056706833408, 00000000-0000-0001-0000-000000000000]
	 Encoded bound values : [4249005056706833408, 00000000-0000-0001-0000-000000000000]
13:35:28.426 [achilles-default-executor-1] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[clust1(int), clusteRing2(int), sum_val(int)]]
13:35:28.430 [achilles-default-executor-1] DEBUG ACHILLES_DML_STATEMENT - Query ID 7aedd157-4dcf-45bd-a029-87d9d7f16a68 results : 
	clust1: 1, clusteRing2: 1, sum_val: 3
	clust1: 1, clusteRing2: 2, sum_val: 3
	clust1: 1, clusteRing2: 3, sum_val: 3
	clust1: 2, clusteRing2: 1, sum_val: 3
	clust1: 2, clusteRing2: 2, sum_val: 3
	clust1: 3, clusteRing2: 1, sum_val: 3

13:35:28.513 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE it_3_10.entity_for_group_by
13:35:28.585 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS it_3_10 WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:35:28.598 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS it_3_10.entity_for_group_by(
		id bigint,
		"uuID" uuid,
		clust1 int,
		"clusteRing2" int,
		clust3 int,
		val int,
		PRIMARY KEY((id, "uuID"), clust1, "clusteRing2", clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, "clusteRing2" ASC, clust3 ASC);

13:35:28.601 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE it_3_10.entity_for_group_by
13:35:28.668 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(3901690436813888512, 00000000-0000-0001-0000-000000000000, 1, 1, 1, 1);

13:35:28.670 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(3901690436813888512, 00000000-0000-0001-0000-000000000000, 1, 1, 2, 1);

13:35:28.672 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(3901690436813888512, 00000000-0000-0001-0000-000000000000, 1, 1, 3, 1);

13:35:28.674 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(3901690436813888512, 00000000-0000-0001-0000-000000000000, 2, 1, 1, 1);

13:35:28.676 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(3901690436813888512, 00000000-0000-0001-0000-000000000000, 2, 2, 1, 1);

13:35:28.677 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(3901690436813888512, 00000000-0000-0001-0000-000000000000, 3, 2, 1, 1);

13:35:28.679 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(3901690436813888512, 00000000-0000-0002-0000-000000000000, 1, 1, 1, 1);

13:35:28.680 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(3901690436813888512, 00000000-0000-0002-0000-000000000000, 1, 1, 2, 1);

13:35:28.682 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(3901690436813888512, 00000000-0000-0002-0000-000000000000, 2, 2, 1, 1);

13:35:28.683 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(3901690436813888512, 00000000-0000-0002-0000-000000000000, 2, 2, 2, 1);

13:35:28.685 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(3901690436813888512, 00000000-0000-0002-0000-000000000000, 3, 2, 1, 1);

13:35:28.690 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID ca852c2a-547a-4395-b79d-8d040a7f72a2 : [SELECT id,token(id,"uuID") AS tokens FROM it_3_10.entity_for_group_by LIMIT :lim;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [1]
	 Encoded bound values : [1]
13:35:28.698 [achilles-default-executor-2] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), tokens(bigint)]]
13:35:28.699 [achilles-default-executor-2] DEBUG ACHILLES_DML_STATEMENT - Query ID ca852c2a-547a-4395-b79d-8d040a7f72a2 results : 
	id: 3901690436813888512, tokens: -8613887255078115703

13:35:28.702 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE it_3_10.entity_for_group_by
13:35:28.785 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS it_3_10 WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:35:28.796 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS it_3_10.entity_for_group_by(
		id bigint,
		"uuID" uuid,
		clust1 int,
		"clusteRing2" int,
		clust3 int,
		val int,
		PRIMARY KEY((id, "uuID"), clust1, "clusteRing2", clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, "clusteRing2" ASC, clust3 ASC);

13:35:28.799 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE it_3_10.entity_for_group_by
13:35:28.868 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(3437944934200933376, 00000000-0000-0001-0000-000000000000, 1, 1, 1, 1);

13:35:28.870 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(3437944934200933376, 00000000-0000-0001-0000-000000000000, 1, 1, 2, 1);

13:35:28.872 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(3437944934200933376, 00000000-0000-0001-0000-000000000000, 1, 1, 3, 1);

13:35:28.873 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(3437944934200933376, 00000000-0000-0001-0000-000000000000, 2, 1, 1, 1);

13:35:28.875 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(3437944934200933376, 00000000-0000-0001-0000-000000000000, 2, 2, 1, 1);

13:35:28.876 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(3437944934200933376, 00000000-0000-0001-0000-000000000000, 3, 2, 1, 1);

13:35:28.877 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(3437944934200933376, 00000000-0000-0002-0000-000000000000, 1, 1, 1, 1);

13:35:28.879 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(3437944934200933376, 00000000-0000-0002-0000-000000000000, 1, 1, 2, 1);

13:35:28.880 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(3437944934200933376, 00000000-0000-0002-0000-000000000000, 2, 2, 1, 1);

13:35:28.882 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(3437944934200933376, 00000000-0000-0002-0000-000000000000, 2, 2, 2, 1);

13:35:28.883 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(3437944934200933376, 00000000-0000-0002-0000-000000000000, 3, 2, 1, 1);

13:35:28.889 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 4309cc74-a823-41bd-9b48-2c4dbd5d10ef : [SELECT id,"uuID",clust1,sum(val) AS sum_val FROM it_3_10.entity_for_group_by GROUP BY id,"uuID",clust1;] with CONSISTENCY LEVEL [LOCAL_ONE]
13:35:28.891 [Native-Transport-Requests-2] WARN  o.a.c.c.statements.SelectStatement - Aggregation query used without partition key
13:35:28.895 [Achilles Embedded Cassandra Cluster-nio-worker-2] WARN  c.d.driver.core.RequestHandler - Query '[0 bound values] SELECT id,"uuID",clust1,sum(val) AS sum_val FROM it_3_10.entity_for_group_by GROUP BY id,"uuID",clust1;' generated server side warning(s): Aggregation query used without partition key
13:35:28.898 [achilles-default-executor-3] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), uuID(uuid), clust1(int), sum_val(int)]]
13:35:28.898 [achilles-default-executor-3] DEBUG ACHILLES_DML_STATEMENT - Query ID 4309cc74-a823-41bd-9b48-2c4dbd5d10ef results : 
	id: 3437944934200933376, uuID: 00000000-0000-0001-0000-000000000000, clust1: 1, sum_val: 3
	id: 3437944934200933376, uuID: 00000000-0000-0001-0000-000000000000, clust1: 2, sum_val: 2
	id: 3437944934200933376, uuID: 00000000-0000-0001-0000-000000000000, clust1: 3, sum_val: 1
	id: 3437944934200933376, uuID: 00000000-0000-0002-0000-000000000000, clust1: 1, sum_val: 2
	id: 3437944934200933376, uuID: 00000000-0000-0002-0000-000000000000, clust1: 2, sum_val: 2
	id: 3437944934200933376, uuID: 00000000-0000-0002-0000-000000000000, clust1: 3, sum_val: 1

13:35:28.904 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE it_3_10.entity_for_group_by
13:35:28.970 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS it_3_10 WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:35:28.979 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS it_3_10.entity_for_group_by(
		id bigint,
		"uuID" uuid,
		clust1 int,
		"clusteRing2" int,
		clust3 int,
		val int,
		PRIMARY KEY((id, "uuID"), clust1, "clusteRing2", clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, "clusteRing2" ASC, clust3 ASC);

13:35:28.981 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE it_3_10.entity_for_group_by
13:35:29.066 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT :  BEGIN UNLOGGED BATCH INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(272311739139489792, 00000000-0000-0001-0000-000000000000, 1, 1, 1, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(272311739139489792, 00000000-0000-0001-0000-000000000000, 1, 1, 2, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(272311739139489792, 00000000-0000-0001-0000-000000000000, 1, 1, 3, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(272311739139489792, 00000000-0000-0001-0000-000000000000, 1, 2, 1, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(272311739139489792, 00000000-0000-0001-0000-000000000000, 1, 2, 2, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(272311739139489792, 00000000-0000-0001-0000-000000000000, 1, 2, 3, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(272311739139489792, 00000000-0000-0001-0000-000000000000, 1, 3, 1, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(272311739139489792, 00000000-0000-0001-0000-000000000000, 1, 3, 2, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(272311739139489792, 00000000-0000-0001-0000-000000000000, 1, 3, 3, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(272311739139489792, 00000000-0000-0001-0000-000000000000, 2, 1, 1, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(272311739139489792, 00000000-0000-0001-0000-000000000000, 2, 1, 2, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(272311739139489792, 00000000-0000-0001-0000-000000000000, 2, 1, 3, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(272311739139489792, 00000000-0000-0001-0000-000000000000, 2, 2, 1, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(272311739139489792, 00000000-0000-0001-0000-000000000000, 2, 2, 2, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(272311739139489792, 00000000-0000-0001-0000-000000000000, 2, 2, 3, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(272311739139489792, 00000000-0000-0001-0000-000000000000, 3, 1, 1, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(272311739139489792, 00000000-0000-0001-0000-000000000000, 3, 1, 2, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(272311739139489792, 00000000-0000-0001-0000-000000000000, 3, 1, 3, 1); APPLY BATCH;

13:35:29.076 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 51451b24-d298-4ead-a61d-2d39cd3134f2 : [SELECT clust1,sum(val) AS sum_val FROM it_3_10.entity_for_group_by WHERE id=:id AND "uuID"=:"uuID" GROUP BY clust1 ORDER BY clust1 ASC;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [272311739139489792, 00000000-0000-0001-0000-000000000000]
	 Encoded bound values : [272311739139489792, 00000000-0000-0001-0000-000000000000]
13:35:29.078 [achilles-default-executor-4] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[clust1(int), sum_val(int)]]
13:35:29.079 [achilles-default-executor-4] DEBUG ACHILLES_DML_STATEMENT - Query ID 51451b24-d298-4ead-a61d-2d39cd3134f2 results : 
	clust1: 1, sum_val: 9
	clust1: 2, sum_val: 6
	clust1: 3, sum_val: 3

13:35:29.079 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE it_3_10.entity_for_group_by
13:35:29.154 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS it_3_10 WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:35:29.167 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS it_3_10.entity_for_group_by(
		id bigint,
		"uuID" uuid,
		clust1 int,
		"clusteRing2" int,
		clust3 int,
		val int,
		PRIMARY KEY((id, "uuID"), clust1, "clusteRing2", clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, "clusteRing2" ASC, clust3 ASC);

13:35:29.169 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE it_3_10.entity_for_group_by
13:35:29.236 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4123190512426588160, 00000000-0000-0001-0000-000000000000, 1, 1, 1, 1);

13:35:29.238 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4123190512426588160, 00000000-0000-0001-0000-000000000000, 1, 1, 2, 1);

13:35:29.239 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4123190512426588160, 00000000-0000-0001-0000-000000000000, 1, 1, 3, 1);

13:35:29.241 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4123190512426588160, 00000000-0000-0001-0000-000000000000, 2, 1, 1, 1);

13:35:29.243 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4123190512426588160, 00000000-0000-0001-0000-000000000000, 2, 2, 1, 1);

13:35:29.244 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4123190512426588160, 00000000-0000-0001-0000-000000000000, 3, 2, 1, 1);

13:35:29.246 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4123190512426588160, 00000000-0000-0002-0000-000000000000, 1, 1, 1, 1);

13:35:29.247 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4123190512426588160, 00000000-0000-0002-0000-000000000000, 1, 1, 2, 1);

13:35:29.248 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4123190512426588160, 00000000-0000-0002-0000-000000000000, 2, 2, 1, 1);

13:35:29.250 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4123190512426588160, 00000000-0000-0002-0000-000000000000, 2, 2, 2, 1);

13:35:29.251 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(4123190512426588160, 00000000-0000-0002-0000-000000000000, 3, 2, 1, 1);

13:35:29.255 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 1bd7c9eb-da68-422d-81c2-7c957afc34f1 : [SELECT id,"uuID",sum(val) AS sum_val FROM it_3_10.entity_for_group_by GROUP BY id,"uuID";] with CONSISTENCY LEVEL [LOCAL_ONE]
13:35:29.256 [Native-Transport-Requests-1] WARN  o.a.c.c.statements.SelectStatement - Aggregation query used without partition key
13:35:29.259 [Achilles Embedded Cassandra Cluster-nio-worker-2] WARN  c.d.driver.core.RequestHandler - Query '[0 bound values] SELECT id,"uuID",sum(val) AS sum_val FROM it_3_10.entity_for_group_by GROUP BY id,"uuID";' generated server side warning(s): Aggregation query used without partition key
13:35:29.266 [achilles-default-executor-5] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), uuID(uuid), sum_val(int)]]
13:35:29.267 [achilles-default-executor-5] DEBUG ACHILLES_DML_STATEMENT - Query ID 1bd7c9eb-da68-422d-81c2-7c957afc34f1 results : 
	id: 4123190512426588160, uuID: 00000000-0000-0001-0000-000000000000, sum_val: 6
	id: 4123190512426588160, uuID: 00000000-0000-0002-0000-000000000000, sum_val: 5

13:35:29.268 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE it_3_10.entity_for_group_by
13:35:29.366 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS it_3_10 WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:35:29.375 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS it_3_10.entity_for_group_by(
		id bigint,
		"uuID" uuid,
		clust1 int,
		"clusteRing2" int,
		clust3 int,
		val int,
		PRIMARY KEY((id, "uuID"), clust1, "clusteRing2", clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, "clusteRing2" ASC, clust3 ASC);

13:35:29.378 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE it_3_10.entity_for_group_by
13:35:29.442 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT :  BEGIN UNLOGGED BATCH INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(2033992765179104256, 00000000-0000-0001-0000-000000000000, 1, 1, 1, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(2033992765179104256, 00000000-0000-0001-0000-000000000000, 1, 1, 2, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(2033992765179104256, 00000000-0000-0001-0000-000000000000, 1, 1, 3, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(2033992765179104256, 00000000-0000-0001-0000-000000000000, 1, 2, 1, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(2033992765179104256, 00000000-0000-0001-0000-000000000000, 1, 2, 2, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(2033992765179104256, 00000000-0000-0001-0000-000000000000, 1, 2, 3, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(2033992765179104256, 00000000-0000-0001-0000-000000000000, 1, 3, 1, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(2033992765179104256, 00000000-0000-0001-0000-000000000000, 1, 3, 2, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(2033992765179104256, 00000000-0000-0001-0000-000000000000, 1, 3, 3, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(2033992765179104256, 00000000-0000-0001-0000-000000000000, 2, 1, 1, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(2033992765179104256, 00000000-0000-0001-0000-000000000000, 2, 1, 2, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(2033992765179104256, 00000000-0000-0001-0000-000000000000, 2, 1, 3, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(2033992765179104256, 00000000-0000-0001-0000-000000000000, 2, 2, 1, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(2033992765179104256, 00000000-0000-0001-0000-000000000000, 2, 2, 2, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(2033992765179104256, 00000000-0000-0001-0000-000000000000, 2, 2, 3, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(2033992765179104256, 00000000-0000-0001-0000-000000000000, 3, 1, 1, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(2033992765179104256, 00000000-0000-0001-0000-000000000000, 3, 1, 2, 1); INSERT INTO it_3_10.entity_for_group_by(id, "uuID", clust1, "clusteRing2", clust3, val) VALUES(2033992765179104256, 00000000-0000-0001-0000-000000000000, 3, 1, 3, 1); APPLY BATCH;

13:35:29.454 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID e3f13447-3600-4cb6-98e2-707793e3a9d4 : [SELECT clust1,"clusteRing2",sum(val) AS sum_val FROM it_3_10.entity_for_group_by WHERE id=:id AND "uuID"=:"uuID" AND clust1=:clust1 GROUP BY "clusteRing2";] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [2033992765179104256, 00000000-0000-0001-0000-000000000000, 2]
	 Encoded bound values : [2033992765179104256, 00000000-0000-0001-0000-000000000000, 2]
13:35:29.462 [achilles-default-executor-6] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[clust1(int), clusteRing2(int), sum_val(int)]]
13:35:29.462 [achilles-default-executor-6] DEBUG ACHILLES_DML_STATEMENT - Query ID e3f13447-3600-4cb6-98e2-707793e3a9d4 results : 
	clust1: 2, clusteRing2: 1, sum_val: 3
	clust1: 2, clusteRing2: 2, sum_val: 3

13:35:29.462 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE it_3_10.entity_for_group_by
13:35:29.528 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS it_3_10 WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:35:29.537 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS it_3_10.entity_with_duration_type(
		id bigint,
		duration duration,
		PRIMARY KEY(id));

13:35:29.805 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE it_3_10.entity_with_duration_type
13:35:29.887 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_with_duration_type(id, duration) VALUES(4374127449645775872, 10h30m10s);

13:35:29.894 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID b76ddfcc-a0f6-44f4-a38c-4845a30305aa : [SELECT id,duration FROM it_3_10.entity_with_duration_type WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [4374127449645775872]
	 Encoded bound values : [4374127449645775872]
13:35:29.897 [achilles-default-executor-7] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), duration(duration)]]
13:35:29.909 [achilles-default-executor-7] DEBUG ACHILLES_DML_STATEMENT - Query ID b76ddfcc-a0f6-44f4-a38c-4845a30305aa results : 
	id: 4374127449645775872, duration: 10h30m10s

13:35:29.917 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE it_3_10.entity_with_duration_type
13:35:29.981 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS it_3_10 WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:35:29.989 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS it_3_10.entity_with_duration_type(
		id bigint,
		duration duration,
		PRIMARY KEY(id));

13:35:29.991 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE it_3_10.entity_with_duration_type
13:35:30.072 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID fb03f97f-4d9c-4879-bd66-76d07e77cc51 : [INSERT INTO it_3_10.entity_with_duration_type (id,duration) VALUES (:id,:duration) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [5729369317428585472, 10h30m10s, 0]
	 Encoded bound values : [5729369317428585472, 10h30m10s, 0]
13:35:30.084 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE it_3_10.entity_with_duration_type
13:35:30.151 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS it_3_10 WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:35:30.161 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS it_3_10.entity_with_duration_type(
		id bigint,
		duration duration,
		PRIMARY KEY(id));

13:35:30.165 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE it_3_10.entity_with_duration_type
13:35:30.234 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO it_3_10.entity_with_duration_type(id, duration) VALUES(3638435146399015936, 10h30m10s);

13:35:30.242 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 0fef46f9-fd01-40e4-b63c-f99cfa9a6d7c : [SELECT duration FROM it_3_10.entity_with_duration_type WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [3638435146399015936]
	 Encoded bound values : [3638435146399015936]
13:35:30.248 [achilles-default-executor-9] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[duration(duration)]]
13:35:30.249 [achilles-default-executor-9] DEBUG ACHILLES_DML_STATEMENT - Query ID 0fef46f9-fd01-40e4-b63c-f99cfa9a6d7c results : 
	duration: 10h30m10s

13:35:30.252 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE it_3_10.entity_with_duration_type
13:35:31.321 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS it_3_10 WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:35:31.324 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE "MyKeyspace" with replication = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 };

13:35:31.417 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE "MyKeyspace"."CaseSensitiveUDT" ( "Quantity" int, value text, );

13:35:31.574 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE "MyKeyspace".entity_with_case_sensitive_udt ( id text, details frozen<"CaseSensitiveUDT">, PRIMARY KEY (id) );

13:35:31.840 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE "MyKeyspace".entity_with_case_sensitive_udt
13:35:31.927 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE "MyKeyspace".entity_with_case_sensitive_udt
13:35:32.130 [Thread-1] INFO  i.a.achilles.embedded.ServerStarter - Calling stop on Embedded Cassandra server
13:35:32.145 [Achilles Embedded Cassandra Cluster-reconnection-0] ERROR c.d.driver.core.ControlConnection - [Control connection] Cannot connect to any host, scheduling retry in 1000 milliseconds
13:35:33.145 [Achilles Embedded Cassandra Cluster-reconnection-1] ERROR c.d.driver.core.ControlConnection - [Control connection] Cannot connect to any host, scheduling retry in 2000 milliseconds
