13:08:25,240 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml]
13:08:25,240 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback.groovy]
13:08:25,240 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [file:/home/ch61/Achilles/integration-test-2_1/target/classes/logback.xml]
13:08:25,240 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs multiple times on the classpath.
13:08:25,240 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs at [file:/home/ch61/Achilles/integration-test-2_1/target/classes/logback.xml]
13:08:25,240 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs at [file:/home/ch61/Achilles/achilles-schema-generator/target/classes/logback.xml]
13:08:25,292 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - debug attribute not set
13:08:25,300 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - Will scan for changes in [file:/home/ch61/Achilles/integration-test-2_1/target/classes/logback.xml] 
13:08:25,300 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - Setting ReconfigureOnChangeTask scanning period to 30 seconds
13:08:25,301 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
13:08:25,304 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [STDOUT]
13:08:25,311 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
13:08:25,345 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [ACHILLES_DDL_SCRIPT] to DEBUG
13:08:25,345 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [ACHILLES_DDL_SCRIPT] to false
13:08:25,345 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ACHILLES_DDL_SCRIPT]
13:08:25,346 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [ACHILLES_DML_STATEMENT] to DEBUG
13:08:25,346 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [ACHILLES_DML_STATEMENT] to false
13:08:25,346 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ACHILLES_DML_STATEMENT]
13:08:25,346 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [info.archinnov.achilles.embedded] to INFO
13:08:25,346 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [info.archinnov.achilles.embedded] to false
13:08:25,346 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[info.archinnov.achilles.embedded]
13:08:25,346 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [info.archinnov.achilles] to WARN
13:08:25,346 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [info.archinnov.achilles] to false
13:08:25,346 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[info.archinnov.achilles]
13:08:25,346 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [info.archinnov.achilles.internals.cache.StatementsCache] to WARN
13:08:25,346 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [info.archinnov.achilles.internals.cache.StatementsCache] to false
13:08:25,346 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[info.archinnov.achilles.internals.cache.StatementsCache]
13:08:25,346 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [info.archinnov.achilles.internals.entities.SimpleEntity] to TRACE
13:08:25,346 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [info.archinnov.achilles.internals.entities.SimpleEntity] to false
13:08:25,346 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[info.archinnov.achilles.internals.entities.SimpleEntity]
13:08:25,346 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.apache.cassandra.cql3.QueryProcessor] to OFF
13:08:25,346 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [org.apache.cassandra.cql3.QueryProcessor] to false
13:08:25,346 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[org.apache.cassandra.cql3.QueryProcessor]
13:08:25,346 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.apache.cassandra.db.Memtable] to OFF
13:08:25,346 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [org.apache.cassandra.db.Memtable] to false
13:08:25,346 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[org.apache.cassandra.db.Memtable]
13:08:25,346 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.apache.cassandra.utils.CLibrary] to OFF
13:08:25,346 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [org.apache.cassandra.utils.CLibrary] to false
13:08:25,346 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[org.apache.cassandra.utils.CLibrary]
13:08:25,347 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.apache.cassandra.utils.SigarLibrary] to OFF
13:08:25,347 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [org.apache.cassandra.utils.SigarLibrary] to false
13:08:25,347 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[org.apache.cassandra.utils.SigarLibrary]
13:08:25,347 |-INFO in ch.qos.logback.classic.joran.action.LevelAction - ROOT level set to WARN
13:08:25,347 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ROOT]
13:08:25,347 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration.
13:08:25,347 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@709ba3fb - Registering current configuration as safe fallback point

13:08:25.397 [main] INFO  i.a.achilles.embedded.ServerStarter - Using existing data folder for unit tests : /home/ch61/Achilles/target/cassandra_embedded/data
13:08:25.399 [main] INFO  i.a.achilles.embedded.ServerStarter - Using existing data folder for unit tests : /home/ch61/Achilles/target/cassandra_embedded/commitlog
13:08:25.399 [main] INFO  i.a.achilles.embedded.ServerStarter - Using existing data folder for unit tests : /home/ch61/Achilles/target/cassandra_embedded/saved_caches
13:08:25.399 [main] INFO  i.a.achilles.embedded.ServerStarter - Using existing data folder for unit tests : /home/ch61/Achilles/target/cassandra_embedded/hints
13:08:25.399 [main] INFO  i.a.achilles.embedded.ServerStarter - Using existing data folder for unit tests : /home/ch61/Achilles/target/cassandra_embedded/cdc_raw
13:08:25.407 [main] INFO  i.a.achilles.embedded.ServerStarter - Cleaning up embedded Cassandra data directory '/home/ch61/Achilles/target/cassandra_embedded/data'
13:08:25.432 [main] INFO  i.a.achilles.embedded.ServerStarter - Cleaning up embedded Cassandra data directory '/home/ch61/Achilles/target/cassandra_embedded/commitlog'
13:08:25.432 [main] INFO  i.a.achilles.embedded.ServerStarter - Cleaning up embedded Cassandra data directory '/home/ch61/Achilles/target/cassandra_embedded/saved_caches'
13:08:25.490 [main] INFO  i.a.achilles.embedded.ServerStarter -  Cassandra listen address = localhost
13:08:25.490 [main] INFO  i.a.achilles.embedded.ServerStarter -  Cassandra RPC address = localhost
13:08:25.491 [main] INFO  i.a.achilles.embedded.ServerStarter -  Cassandra broadcast address = 
13:08:25.491 [main] INFO  i.a.achilles.embedded.ServerStarter -  Cassandra RPC broadcast address = 
13:08:25.491 [main] INFO  i.a.achilles.embedded.ServerStarter -  Random embedded Cassandra RPC port/Thrift port = 9160
13:08:25.491 [main] INFO  i.a.achilles.embedded.ServerStarter -  Random embedded Cassandra Native port/CQL port = 9042
13:08:25.491 [main] INFO  i.a.achilles.embedded.ServerStarter -  Random embedded Cassandra Storage port = 7371
13:08:25.491 [main] INFO  i.a.achilles.embedded.ServerStarter -  Random embedded Cassandra Storage SSL port = 7736
13:08:25.491 [main] INFO  i.a.achilles.embedded.ServerStarter -  Random embedded Cassandra Remote JMX port = null
13:08:25.491 [main] INFO  i.a.achilles.embedded.ServerStarter -  Embedded Cassandra triggers directory = /home/ch61/Achilles/target/cassandra_embedded/cassandra_triggers
13:08:25.491 [main] INFO  i.a.achilles.embedded.ServerStarter - Starting Cassandra...
13:08:25.812 [pool-2-thread-1] WARN  o.a.c.config.DatabaseDescriptor - Only 40.223GiB free across all data volumes. Consider adding more capacity to your cluster or removing obsolete snapshots
13:08:26.005 [pool-2-thread-1] WARN  o.a.cassandra.utils.NativeLibrary - Unable to lock JVM memory (ENOMEM). This can result in part of the JVM being swapped out, especially with mmapped I/O enabled. Increase RLIMIT_MEMLOCK or run Cassandra as root.
13:08:26.005 [pool-2-thread-1] WARN  o.a.cassandra.service.StartupChecks - jemalloc shared library could not be preloaded to speed up memory allocations
13:08:26.005 [pool-2-thread-1] WARN  o.a.cassandra.service.StartupChecks - JMX is not enabled to receive remote connections. Please see cassandra-env.sh for more info.
13:08:26.006 [pool-2-thread-1] WARN  o.a.cassandra.service.StartupChecks - The JVM is not configured to stop on OutOfMemoryError which can cause data corruption. Use one of the following JVM options to configure the behavior on OutOfMemoryError:  -XX:+ExitOnOutOfMemoryError, -XX:+CrashOnOutOfMemoryError, or -XX:OnOutOfMemoryError="<cmd args>;<cmd args>"
no libsigar-amd64-linux.so in java.library.path
org.hyperic.sigar.SigarException: no libsigar-amd64-linux.so in java.library.path
	at org.hyperic.sigar.Sigar.loadLibrary(Sigar.java:172)
	at org.hyperic.sigar.Sigar.<clinit>(Sigar.java:100)
	at org.apache.cassandra.utils.SigarLibrary.<init>(SigarLibrary.java:47)
	at org.apache.cassandra.utils.SigarLibrary.<clinit>(SigarLibrary.java:28)
	at org.apache.cassandra.service.StartupChecks$7.execute(StartupChecks.java:266)
	at org.apache.cassandra.service.StartupChecks.verify(StartupChecks.java:125)
	at org.apache.cassandra.service.CassandraDaemon.setup(CassandraDaemon.java:216)
	at org.apache.cassandra.service.CassandraDaemon.activate(CassandraDaemon.java:633)
	at info.archinnov.achilles.embedded.ServerStarter.lambda$start$0(ServerStarter.java:163)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
13:08:26.024 [pool-2-thread-1] WARN  o.a.cassandra.service.StartupChecks - Maximum number of memory map areas per process (vm.max_map_count) 65530 is too low, recommended value: 1048575, you can change it with sysctl.
13:08:29.034 [pool-2-thread-1] WARN  o.apache.cassandra.db.SystemKeyspace - No host ID found, created 1a687f09-4087-4cf2-8f25-74a0a0a53b0f (Note: This should happen exactly once per node).
13:08:31.580 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:32.101 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.complex_tuple(
		id bigint,
		tuple frozen<tuple<int, map<int, list<text>>>>,
		PRIMARY KEY(id));

13:08:32.685 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:32.704 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:08:32.878 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_case_sensitive_pk(
		"partitionKey" bigint,
		"clusteringColumn" bigint,
		priority int,
		"listString" list<text>,
		"mapIntString" map<int, text>,
		"setString" set<text>,
		"udtWithNoKeyspace" frozen<achilles_embedded.no_ks>,
		PRIMARY KEY("partitionKey", "clusteringColumn", priority))
	WITH CLUSTERING ORDER BY("clusteringColumn" ASC, priority ASC);

13:08:33.147 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:08:33.260 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_case_sensitive_pk("partitionKey", "clusteringColumn", priority, "listString", "setString", "mapIntString", "udtWithNoKeyspace") VALUES (2111152560610717696, 10, 1, ['1', '2'], {'1', '2'}, {1: '1', 2: '2'}, {id: 1, "VALUE": 'test'});

13:08:33.299 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID f96f854b-d684-48ca-af08-dbde87e678cb : [SELECT "listString","setString","mapIntString","udtWithNoKeyspace" FROM achilles_embedded.entity_with_case_sensitive_pk WHERE "partitionKey"=:"partitionKey" AND ("clusteringColumn",priority)>=(:"clusteringColumn",:priority) AND ("clusteringColumn",priority)<=(:"clusteringColumn",:priority);] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [2111152560610717696, 9, 1, 11, 1]
	 Encoded bound values : [2111152560610717696, 9, 1, 11, 1]
13:08:33.310 [achilles-default-executor-1] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[listString(list<varchar>), setString(set<varchar>), mapIntString(map<int, varchar>), udtWithNoKeyspace(achilles_embedded.no_ks)]]
13:08:33.314 [achilles-default-executor-1] DEBUG ACHILLES_DML_STATEMENT - Query ID f96f854b-d684-48ca-af08-dbde87e678cb results : 
	listString: [1, 2], setString: [1, 2], mapIntString: {1=1, 2=2}, udtWithNoKeyspace: {id:1,"VALUE":'test'}

13:08:33.379 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:08:33.450 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:33.461 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:08:33.464 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_case_sensitive_pk(
		"partitionKey" bigint,
		"clusteringColumn" bigint,
		priority int,
		"listString" list<text>,
		"mapIntString" map<int, text>,
		"setString" set<text>,
		"udtWithNoKeyspace" frozen<achilles_embedded.no_ks>,
		PRIMARY KEY("partitionKey", "clusteringColumn", priority))
	WITH CLUSTERING ORDER BY("clusteringColumn" ASC, priority ASC);

13:08:33.467 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:08:33.532 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_case_sensitive_pk("partitionKey", "clusteringColumn", priority, "listString", "setString", "mapIntString", "udtWithNoKeyspace") VALUES (7773129811689069568, 10, 1, ['1', '2'], {'1', '2'}, {1: '1', 2: '2'}, {id: 1, "VALUE": 'test'});

13:08:33.547 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 5473103e-ddef-4625-a2c3-bc93bc9e12cf : [DELETE "listString","mapIntString","setString","udtWithNoKeyspace" FROM achilles_embedded.entity_with_case_sensitive_pk WHERE "partitionKey"=:"partitionKey" AND "clusteringColumn"=:"clusteringColumn" AND priority=:priority;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [7773129811689069568, 10, 1]
	 Encoded bound values : [7773129811689069568, 10, 1]
13:08:33.559 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID bf8e9143-1255-4c1a-94aa-7c6071891470 : [SELECT "partitionKey","clusteringColumn",priority,"listString","mapIntString","setString","udtWithNoKeyspace" FROM achilles_embedded.entity_with_case_sensitive_pk WHERE "partitionKey"=:"partitionKey" AND "clusteringColumn"=:"clusteringColumn" AND priority=:priority;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [7773129811689069568, 10, 1]
	 Encoded bound values : [7773129811689069568, 10, 1]
13:08:33.565 [achilles-default-executor-3] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[partitionKey(bigint), clusteringColumn(bigint), priority(int), listString(list<varchar>), mapIntString(map<int, varchar>), setString(set<varchar>), udtWithNoKeyspace(achilles_embedded.no_ks)]]
13:08:33.566 [achilles-default-executor-3] DEBUG ACHILLES_DML_STATEMENT - Query ID bf8e9143-1255-4c1a-94aa-7c6071891470 results : 
	partitionKey: 7773129811689069568, clusteringColumn: 10, priority: 1, listString: [], mapIntString: {}, setString: [], udtWithNoKeyspace: null

13:08:33.567 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:08:33.649 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:33.664 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:08:33.666 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_case_sensitive_pk(
		"partitionKey" bigint,
		"clusteringColumn" bigint,
		priority int,
		"listString" list<text>,
		"mapIntString" map<int, text>,
		"setString" set<text>,
		"udtWithNoKeyspace" frozen<achilles_embedded.no_ks>,
		PRIMARY KEY("partitionKey", "clusteringColumn", priority))
	WITH CLUSTERING ORDER BY("clusteringColumn" ASC, priority ASC);

13:08:33.670 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:08:33.735 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_case_sensitive_pk("partitionKey", "clusteringColumn", priority, "listString", "setString", "mapIntString", "udtWithNoKeyspace") VALUES (2868788818828213248, 10, 1, ['1', '2'], {'1', '2'}, {1: '1', 2: '2'}, {id: 1, "VALUE": 'test'});

13:08:33.742 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 30e2bc65-1839-402a-9a1a-a9b24624b394 : [SELECT "listString","setString","mapIntString","udtWithNoKeyspace" FROM achilles_embedded.entity_with_case_sensitive_pk WHERE "partitionKey"=:"partitionKey";] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [2868788818828213248]
	 Encoded bound values : [2868788818828213248]
13:08:33.747 [achilles-default-executor-4] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[listString(list<varchar>), setString(set<varchar>), mapIntString(map<int, varchar>), udtWithNoKeyspace(achilles_embedded.no_ks)]]
13:08:33.748 [achilles-default-executor-4] DEBUG ACHILLES_DML_STATEMENT - Query ID 30e2bc65-1839-402a-9a1a-a9b24624b394 results : 
	listString: [1, 2], setString: [1, 2], mapIntString: {1=1, 2=2}, udtWithNoKeyspace: {id:1,"VALUE":'test'}

13:08:33.749 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:08:33.817 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:33.827 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:08:33.829 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_case_sensitive_pk(
		"partitionKey" bigint,
		"clusteringColumn" bigint,
		priority int,
		"listString" list<text>,
		"mapIntString" map<int, text>,
		"setString" set<text>,
		"udtWithNoKeyspace" frozen<achilles_embedded.no_ks>,
		PRIMARY KEY("partitionKey", "clusteringColumn", priority))
	WITH CLUSTERING ORDER BY("clusteringColumn" ASC, priority ASC);

13:08:33.831 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:08:33.920 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_case_sensitive_pk("partitionKey", "clusteringColumn", priority, "listString", "setString", "mapIntString", "udtWithNoKeyspace") VALUES (8724094389864667136, 10, 1, ['1', '2'], {'1', '2'}, {1: '1', 2: '2'}, {id: 1, "VALUE": 'test'});

13:08:33.937 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 3ff5d925-3d9b-4712-8139-028dd1c7ea4c : [UPDATE achilles_embedded.entity_with_case_sensitive_pk SET "listString"="listString"+:"listString","mapIntString"[:map_key]=:map_value WHERE "partitionKey"=:"partitionKey" AND "clusteringColumn"=:"clusteringColumn" AND priority=:priority;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [[3], 3, 3, 8724094389864667136, 10, 1]
	 Encoded bound values : [[3], 3, 3, 8724094389864667136, 10, 1]
13:08:33.943 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 8a0e05b7-8e6e-4219-9048-3458ae79fa52 : [SELECT "partitionKey","clusteringColumn",priority,"listString","mapIntString","setString","udtWithNoKeyspace" FROM achilles_embedded.entity_with_case_sensitive_pk WHERE "partitionKey"=:"partitionKey" AND "clusteringColumn"=:"clusteringColumn" AND priority=:priority;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [8724094389864667136, 10, 1]
	 Encoded bound values : [8724094389864667136, 10, 1]
13:08:33.953 [achilles-default-executor-6] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[partitionKey(bigint), clusteringColumn(bigint), priority(int), listString(list<varchar>), mapIntString(map<int, varchar>), setString(set<varchar>), udtWithNoKeyspace(achilles_embedded.no_ks)]]
13:08:33.956 [achilles-default-executor-6] DEBUG ACHILLES_DML_STATEMENT - Query ID 8a0e05b7-8e6e-4219-9048-3458ae79fa52 results : 
	partitionKey: 8724094389864667136, clusteringColumn: 10, priority: 1, listString: [1, 2, 3], mapIntString: {1=1, 2=2, 3=3}, setString: [1, 2], udtWithNoKeyspace: {id:1,"VALUE":'test'}

13:08:33.959 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:08:34.023 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:34.034 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:08:34.036 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_case_sensitive_pk(
		"partitionKey" bigint,
		"clusteringColumn" bigint,
		priority int,
		"listString" list<text>,
		"mapIntString" map<int, text>,
		"setString" set<text>,
		"udtWithNoKeyspace" frozen<achilles_embedded.no_ks>,
		PRIMARY KEY("partitionKey", "clusteringColumn", priority))
	WITH CLUSTERING ORDER BY("clusteringColumn" ASC, priority ASC);

13:08:34.038 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:08:34.122 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID da93bd6e-2cfb-41a5-b891-ad2cd8d4b297 : [INSERT INTO achilles_embedded.entity_with_case_sensitive_pk ("partitionKey","clusteringColumn",priority,"listString","mapIntString","setString","udtWithNoKeyspace") VALUES (:"partitionKey",:"clusteringColumn",:priority,:"listString",:"mapIntString",:"setString",:"udtWithNoKeyspace") USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [6338093070384461824, 5787363929694191616, 1, [1, 2], {1=1, 2=2}, [1, 2], info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@64f462, 0]
	 Encoded bound values : [6338093070384461824, 5787363929694191616, 1, [1, 2], {1=1, 2=2}, [1, 2], {id:6338093070384461824,"VALUE":'test'}, 0]
13:08:34.128 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 19f48017-ec82-4d0d-84c0-3f8fd7edf3ce : [SELECT "partitionKey","clusteringColumn",priority,"listString","mapIntString","setString","udtWithNoKeyspace" FROM achilles_embedded.entity_with_case_sensitive_pk WHERE "partitionKey"=:"partitionKey" AND "clusteringColumn"=:"clusteringColumn" AND priority=:priority;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [6338093070384461824, 5787363929694191616, 1]
	 Encoded bound values : [6338093070384461824, 5787363929694191616, 1]
13:08:34.136 [achilles-default-executor-8] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[partitionKey(bigint), clusteringColumn(bigint), priority(int), listString(list<varchar>), mapIntString(map<int, varchar>), setString(set<varchar>), udtWithNoKeyspace(achilles_embedded.no_ks)]]
13:08:34.136 [achilles-default-executor-8] DEBUG ACHILLES_DML_STATEMENT - Query ID 19f48017-ec82-4d0d-84c0-3f8fd7edf3ce results : 
	partitionKey: 6338093070384461824, clusteringColumn: 5787363929694191616, priority: 1, listString: [1, 2], mapIntString: {1=1, 2=2}, setString: [1, 2], udtWithNoKeyspace: {id:6338093070384461824,"VALUE":'test'}

13:08:34.137 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:08:34.219 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:34.229 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:08:34.231 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_case_sensitive_pk(
		"partitionKey" bigint,
		"clusteringColumn" bigint,
		priority int,
		"listString" list<text>,
		"mapIntString" map<int, text>,
		"setString" set<text>,
		"udtWithNoKeyspace" frozen<achilles_embedded.no_ks>,
		PRIMARY KEY("partitionKey", "clusteringColumn", priority))
	WITH CLUSTERING ORDER BY("clusteringColumn" ASC, priority ASC);

13:08:34.233 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:08:34.296 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID e61d460c-abfc-4703-99e7-3ebffa4f656c : [INSERT INTO achilles_embedded.entity_with_case_sensitive_pk ("partitionKey","clusteringColumn",priority,"listString","mapIntString","setString","udtWithNoKeyspace") VALUES (:"partitionKey",:"clusteringColumn",:priority,:"listString",:"mapIntString",:"setString",:"udtWithNoKeyspace") USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [8706397701765789696, 4504762141119874048, 1, null, null, null, null, 0]
	 Encoded bound values : [8706397701765789696, 4504762141119874048, 1, null, null, null, null, 0]
13:08:34.300 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID fcffddf9-3b26-48bc-ad4d-199b006867d9 : [DELETE FROM achilles_embedded.entity_with_case_sensitive_pk WHERE "partitionKey"=:"partitionKey" AND "clusteringColumn"=:"clusteringColumn" AND priority=:priority;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [8706397701765789696, 4504762141119874048, 1]
	 Encoded bound values : [8706397701765789696, 4504762141119874048, 1]
13:08:34.305 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID dd725ddc-b7dd-4cc1-b651-5b5f64ab3cda : [SELECT "partitionKey","clusteringColumn",priority,"listString","mapIntString","setString","udtWithNoKeyspace" FROM achilles_embedded.entity_with_case_sensitive_pk WHERE "partitionKey"=:"partitionKey" AND "clusteringColumn"=:"clusteringColumn" AND priority=:priority;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [8706397701765789696, 4504762141119874048, 1]
	 Encoded bound values : [8706397701765789696, 4504762141119874048, 1]
13:08:34.308 [achilles-default-executor-11] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: true, Columns[partitionKey(bigint), clusteringColumn(bigint), priority(int), listString(list<varchar>), mapIntString(map<int, varchar>), setString(set<varchar>), udtWithNoKeyspace(achilles_embedded.no_ks)]]
13:08:34.308 [achilles-default-executor-11] DEBUG ACHILLES_DML_STATEMENT - Query ID dd725ddc-b7dd-4cc1-b651-5b5f64ab3cda results : 

13:08:34.308 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:08:34.373 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:34.383 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:08:34.385 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_case_sensitive_pk(
		"partitionKey" bigint,
		"clusteringColumn" bigint,
		priority int,
		"listString" list<text>,
		"mapIntString" map<int, text>,
		"setString" set<text>,
		"udtWithNoKeyspace" frozen<achilles_embedded.no_ks>,
		PRIMARY KEY("partitionKey", "clusteringColumn", priority))
	WITH CLUSTERING ORDER BY("clusteringColumn" ASC, priority ASC);

13:08:34.387 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:08:34.459 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_case_sensitive_pk("partitionKey", "clusteringColumn", priority, "listString", "setString", "mapIntString", "udtWithNoKeyspace") VALUES (1160250534361193472, 10, 1, ['1', '2'], {'1', '2'}, {1: '1', 2: '2'}, {id: 1, "VALUE": 'test'});

13:08:34.466 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID aba25a68-c392-4f55-ba98-ef28cb0c2246 : [SELECT "listString","setString","mapIntString","udtWithNoKeyspace" FROM achilles_embedded.entity_with_case_sensitive_pk WHERE token("partitionKey")>:tokenValue;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [-9223372036854775808]
	 Encoded bound values : [-9223372036854775808]
13:08:34.497 [achilles-default-executor-12] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[listString(list<varchar>), setString(set<varchar>), mapIntString(map<int, varchar>), udtWithNoKeyspace(achilles_embedded.no_ks)]]
13:08:34.497 [achilles-default-executor-12] DEBUG ACHILLES_DML_STATEMENT - Query ID aba25a68-c392-4f55-ba98-ef28cb0c2246 results : 
	listString: [1, 2], setString: [1, 2], mapIntString: {1=1, 2=2}, udtWithNoKeyspace: {id:1,"VALUE":'test'}

13:08:34.498 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:08:34.569 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:34.578 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_child(
		id bigint,
		child_value text,
		value text,
		PRIMARY KEY(id));

13:08:34.833 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:08:34.905 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 743b5ce2-19ab-4007-a4c8-b0b897a1beca : [INSERT INTO achilles_embedded.entity_child (id,child_value,value) VALUES (:id,:child_value,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [8761817166420425728, child_val, val, 0]
	 Encoded bound values : [8761817166420425728, child_val, val, 0]
13:08:34.917 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:08:34.998 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:35.006 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_child(
		id bigint,
		child_value text,
		value text,
		PRIMARY KEY(id));

13:08:35.009 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:08:35.079 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_child(id, value, child_value) VALUES(213716511256930304, 'val', 'child_val');

13:08:35.081 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 2945c935-bb9a-4cf0-86bc-c8012409d2f0 : [DELETE FROM achilles_embedded.entity_child WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [213716511256930304]
	 Encoded bound values : [213716511256930304]
13:08:35.084 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:08:35.149 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:35.157 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_child(
		id bigint,
		child_value text,
		value text,
		PRIMARY KEY(id));

13:08:35.160 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:08:35.243 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_child(id, value, child_value) VALUES(1467822213941129216, 'val', 'child_val');

13:08:35.248 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID ec6fa391-749f-43ac-8fd7-c8cc39c5af66 : [SELECT id,child_value,value FROM achilles_embedded.entity_child WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [1467822213941129216]
	 Encoded bound values : [1467822213941129216]
13:08:35.253 [achilles-default-executor-15] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), child_value(varchar), value(varchar)]]
13:08:35.254 [achilles-default-executor-15] DEBUG ACHILLES_DML_STATEMENT - Query ID ec6fa391-749f-43ac-8fd7-c8cc39c5af66 results : 
	id: 1467822213941129216, child_value: child_val, value: val

13:08:35.254 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:08:35.324 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:35.334 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_child(
		id bigint,
		child_value text,
		value text,
		PRIMARY KEY(id));

13:08:35.336 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:08:35.399 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_child(id, value, child_value) VALUES(742441256333194240, 'val', 'child_val');

13:08:35.405 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 9378dc67-2820-4d4f-8575-a19513d4a47e : [DELETE child_value FROM achilles_embedded.entity_child WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [742441256333194240]
	 Encoded bound values : [742441256333194240]
13:08:35.412 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:08:35.486 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:35.494 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_child(
		id bigint,
		child_value text,
		value text,
		PRIMARY KEY(id));

13:08:35.496 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:08:35.566 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_child(id, value, child_value) VALUES(5534550423646707712, 'val', 'child_val');

13:08:35.573 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID a855f772-5ee6-4937-9d32-e229703cc626 : [SELECT value,child_value FROM achilles_embedded.entity_child WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [5534550423646707712]
	 Encoded bound values : [5534550423646707712]
13:08:35.575 [achilles-default-executor-17] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[value(varchar), child_value(varchar)]]
13:08:35.575 [achilles-default-executor-17] DEBUG ACHILLES_DML_STATEMENT - Query ID a855f772-5ee6-4937-9d32-e229703cc626 results : 
	value: val, child_value: child_val

13:08:35.575 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:08:35.639 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:35.649 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_child(
		id bigint,
		child_value text,
		value text,
		PRIMARY KEY(id));

13:08:35.652 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:08:35.730 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:08:35.800 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:35.810 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_child(
		id bigint,
		child_value text,
		value text,
		PRIMARY KEY(id));

13:08:35.812 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:08:35.880 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_child(id, value, child_value) VALUES(6507506941063501824, 'val', 'child_val');

13:08:35.886 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID cb15296e-f7cf-491b-b517-ba7875c722f2 : [UPDATE achilles_embedded.entity_child SET child_value=:child_value WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [another_child_val, 6507506941063501824]
	 Encoded bound values : [another_child_val, 6507506941063501824]
13:08:35.891 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:08:35.974 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:35.982 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_child(
		id bigint,
		child_value text,
		value text,
		PRIMARY KEY(id));

13:08:35.984 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:08:36.056 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:08:36.127 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:36.130 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:36.237 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:36.356 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:08:36.500 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:08:36.734 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:08:36.901 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:08:37.147 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:08:37.211 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO new_ks.entity_with_udts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(169014673189471232, [{id: 169014673189471232, value: 'val'}], {{id: 169014673189471232, value: 'val'}: {id: 169014673189471232, value: 'val'}}, {id: 169014673189471232, value: 'val'}, {{id: 169014673189471232, value: 'val'}}, (1, {id: 169014673189471232, value: 'val'}));

13:08:37.221 [Achilles Embedded Cassandra Cluster-worker-1] WARN  com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='DELETE FROM new_ks.entity_with_udts WHERE id=:id;'
13:08:37.222 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID cc002c59-527c-415b-9efa-3a3b115b6a84 : [DELETE FROM new_ks.entity_with_udts WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [169014673189471232]
	 Encoded bound values : [169014673189471232]
13:08:37.228 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:08:37.317 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:37.320 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:37.321 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:37.322 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:08:37.323 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:08:37.331 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:08:37.333 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:08:37.335 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:08:37.401 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 24e61a5d-7bdf-47f0-b253-6e65a8239665 : [INSERT INTO new_ks.entity_with_udts (id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES (:id,:listudt,:mapudt,:optionaludt,:setudt,:tupleudt) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [591157554158368768, [info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@dc69d159], {info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@dc69d159=info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@dc69d159}, Optional[info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@dc69d159], [info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@dc69d159], Tuple2{_1=1, _2=info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@dc69d159}, 0]
	 Encoded bound values : [591157554158368768, [{id:591157554158368768,value:'val'}], {{id:591157554158368768,value:'val'}={id:591157554158368768,value:'val'}}, {id:591157554158368768,value:'val'}, [{id:591157554158368768,value:'val'}], (1,{id:591157554158368768,value:'val'}), 0]
13:08:37.407 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:08:37.493 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:37.495 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:37.496 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:37.497 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:08:37.498 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:08:37.506 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:08:37.508 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:08:37.510 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:08:37.586 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO overriden_schema_name.entitywithudts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(3675187181452502016, [{id: 3675187181452502016, value: 'val'}], {{id: 3675187181452502016, value: 'val'}: {id: 3675187181452502016, value: 'val'}}, {id: 3675187181452502016, value: 'val'}, {{id: 3675187181452502016, value: 'val'}}, (1, {id: 3675187181452502016, value: 'val'}));

13:08:37.591 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID d12cf2b0-3f66-4d5c-ac2e-8a49a46231ae : [DELETE FROM overriden_schema_name.entitywithudts WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [3675187181452502016]
	 Encoded bound values : [3675187181452502016]
13:08:37.594 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:08:37.662 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:37.665 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:37.667 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:37.668 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:08:37.669 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:08:37.676 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:08:37.679 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:08:37.681 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:08:37.754 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 12b467e7-f32e-4598-b37d-1c84ecf8481d : [INSERT INTO overriden_schema_name.entitywithudts (id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES (:id,:listudt,:mapudt,:optionaludt,:setudt,:tupleudt) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [8930114026707987456, [info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@2ac27fe], {info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@2ac27fe=info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@2ac27fe}, Optional[info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@2ac27fe], [info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@2ac27fe], Tuple2{_1=1, _2=info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@2ac27fe}, 0]
	 Encoded bound values : [8930114026707987456, [{id:8930114026707987456,value:'val'}], {{id:8930114026707987456,value:'val'}={id:8930114026707987456,value:'val'}}, {id:8930114026707987456,value:'val'}, [{id:8930114026707987456,value:'val'}], (1,{id:8930114026707987456,value:'val'}), 0]
13:08:37.761 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:08:37.829 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:37.831 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:37.832 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:37.833 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:08:37.834 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:08:37.841 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:08:37.843 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:08:37.845 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:08:37.909 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO overriden_schema_name.entitywithudts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(5635535831959116800, [{id: 5635535831959116800, value: 'val'}], {{id: 5635535831959116800, value: 'val'}: {id: 5635535831959116800, value: 'val'}}, {id: 5635535831959116800, value: 'val'}, {{id: 5635535831959116800, value: 'val'}}, (1, {id: 5635535831959116800, value: 'val'}));

13:08:37.915 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID a5c98666-348b-44b4-8667-837f9347d77d : [SELECT * FROM overriden_schema_name.entitywithudts WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [5635535831959116800]
	 Encoded bound values : [5635535831959116800]
13:08:37.921 [achilles-default-executor-23] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), listudt(list<overriden_schema_name.udt_no_ks>), mapudt(map<overriden_schema_name.udt_no_ks, overriden_schema_name.udt_no_ks>), optionaludt(overriden_schema_name.udt_no_ks), setudt(set<overriden_schema_name.udt_no_ks>), tupleudt(frozen<tuple<int, udt_no_ks>>)]]
13:08:37.924 [achilles-default-executor-23] DEBUG ACHILLES_DML_STATEMENT - Query ID a5c98666-348b-44b4-8667-837f9347d77d results : 
	id: 5635535831959116800, listudt: [{id:5635535831959116800,value:'val'}], mapudt: {{id:5635535831959116800,value:'val'}={id:5635535831959116800,value:'val'}}, optionaludt: {id:5635535831959116800,value:'val'}, setudt: [{id:5635535831959116800,value:'val'}], tupleudt: (1,{id:5635535831959116800,value:'val'})

13:08:37.930 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:08:37.995 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:37.997 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:37.998 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:37.999 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:08:38.001 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:08:38.009 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:08:38.011 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:08:38.013 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:08:38.086 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO new_ks.entity_with_udts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(3187948187827573760, [{id: 3187948187827573760, value: 'val'}], {{id: 3187948187827573760, value: 'val'}: {id: 3187948187827573760, value: 'val'}}, {id: 3187948187827573760, value: 'val'}, {{id: 3187948187827573760, value: 'val'}}, (1, {id: 3187948187827573760, value: 'val'}));

13:08:38.096 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 3600deea-a50b-4d2e-a11e-c82c68b86761 : [UPDATE new_ks.entity_with_udts SET optionaludt=:optionaludt WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [Optional[info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@7dcc4947], 3187948187827573760]
	 Encoded bound values : [{id:3187948187827573760,value:'new_val'}, 3187948187827573760]
13:08:38.102 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:08:38.167 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:38.170 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:38.171 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:38.172 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:08:38.173 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:08:38.180 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:08:38.182 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:08:38.184 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:08:38.262 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO overriden_schema_name.entitywithudts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(4064026462518707200, [{id: 4064026462518707200, value: 'val'}], {{id: 4064026462518707200, value: 'val'}: {id: 4064026462518707200, value: 'val'}}, {id: 4064026462518707200, value: 'val'}, {{id: 4064026462518707200, value: 'val'}}, (1, {id: 4064026462518707200, value: 'val'}));

13:08:38.267 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID c671e0cc-9359-4d69-b662-df4724c75942 : [UPDATE overriden_schema_name.entitywithudts SET optionaludt=:optionaludt WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [Optional[info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@57da4e5a], 4064026462518707200]
	 Encoded bound values : [{id:4064026462518707200,value:'new_val'}, 4064026462518707200]
13:08:38.274 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:08:38.342 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:38.344 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:38.345 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:38.345 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:08:38.346 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:08:38.353 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:08:38.355 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:08:38.356 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:08:38.420 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO new_ks.entity_with_udts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(7107308633840057344, [{id: 7107308633840057344, value: 'val'}], {{id: 7107308633840057344, value: 'val'}: {id: 7107308633840057344, value: 'val'}}, {id: 7107308633840057344, value: 'val'}, {{id: 7107308633840057344, value: 'val'}}, (1, {id: 7107308633840057344, value: 'val'}));

13:08:38.425 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 65026c54-2b26-4b31-ad7f-b25daea4ec67 : [SELECT * FROM new_ks.entity_with_udts WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [7107308633840057344]
	 Encoded bound values : [7107308633840057344]
13:08:38.428 [achilles-default-executor-26] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), listudt(list<new_ks.udt_no_ks>), mapudt(map<new_ks.udt_no_ks, new_ks.udt_no_ks>), optionaludt(new_ks.udt_no_ks), setudt(set<new_ks.udt_no_ks>), tupleudt(frozen<tuple<int, udt_no_ks>>)]]
13:08:38.430 [achilles-default-executor-26] DEBUG ACHILLES_DML_STATEMENT - Query ID 65026c54-2b26-4b31-ad7f-b25daea4ec67 results : 
	id: 7107308633840057344, listudt: [{id:7107308633840057344,value:'val'}], mapudt: {{id:7107308633840057344,value:'val'}={id:7107308633840057344,value:'val'}}, optionaludt: {id:7107308633840057344,value:'val'}, setudt: [{id:7107308633840057344,value:'val'}], tupleudt: (1,{id:7107308633840057344,value:'val'})

13:08:38.433 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:08:38.504 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:38.506 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:38.507 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:38.508 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:08:38.509 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:08:38.516 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:08:38.518 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:08:38.520 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:08:38.595 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO overriden_schema_name.entitywithudts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(4583810375481099264, [{id: 4583810375481099264, value: 'val'}], {{id: 4583810375481099264, value: 'val'}: {id: 4583810375481099264, value: 'val'}}, {id: 4583810375481099264, value: 'val'}, {{id: 4583810375481099264, value: 'val'}}, (1, {id: 4583810375481099264, value: 'val'}));

13:08:38.600 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 7b6be0f6-ffd1-4af1-8960-478c90e6069d : [SELECT id,listudt,mapudt,optionaludt,setudt,tupleudt FROM overriden_schema_name.entitywithudts WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [4583810375481099264]
	 Encoded bound values : [4583810375481099264]
13:08:38.601 [achilles-default-executor-27] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), listudt(list<overriden_schema_name.udt_no_ks>), mapudt(map<overriden_schema_name.udt_no_ks, overriden_schema_name.udt_no_ks>), optionaludt(overriden_schema_name.udt_no_ks), setudt(set<overriden_schema_name.udt_no_ks>), tupleudt(frozen<tuple<int, udt_no_ks>>)]]
13:08:38.603 [achilles-default-executor-27] DEBUG ACHILLES_DML_STATEMENT - Query ID 7b6be0f6-ffd1-4af1-8960-478c90e6069d results : 
	id: 4583810375481099264, listudt: [{id:4583810375481099264,value:'val'}], mapudt: {{id:4583810375481099264,value:'val'}={id:4583810375481099264,value:'val'}}, optionaludt: {id:4583810375481099264,value:'val'}, setudt: [{id:4583810375481099264,value:'val'}], tupleudt: (1,{id:4583810375481099264,value:'val'})

13:08:38.607 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:08:38.671 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:38.673 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:38.674 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:38.675 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:08:38.675 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:08:38.683 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:08:38.684 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:08:38.686 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:08:38.767 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO new_ks.entity_with_udts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(247103549740940288, [{id: 247103549740940288, value: 'val'}], {{id: 247103549740940288, value: 'val'}: {id: 247103549740940288, value: 'val'}}, {id: 247103549740940288, value: 'val'}, {{id: 247103549740940288, value: 'val'}}, (1, {id: 247103549740940288, value: 'val'}));

13:08:38.772 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 5821fda6-fab9-401f-86e6-320d210946e1 : [DELETE FROM new_ks.entity_with_udts WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [247103549740940288]
	 Encoded bound values : [247103549740940288]
13:08:38.776 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:08:38.848 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:38.850 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:38.852 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:38.853 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:08:38.854 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:08:38.863 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:08:38.865 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:08:38.867 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:08:38.930 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO new_ks.entity_with_udts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(6576484048001120256, [{id: 6576484048001120256, value: 'val'}], {{id: 6576484048001120256, value: 'val'}: {id: 6576484048001120256, value: 'val'}}, {id: 6576484048001120256, value: 'val'}, {{id: 6576484048001120256, value: 'val'}}, (1, {id: 6576484048001120256, value: 'val'}));

13:08:38.932 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 246e950c-e36b-490e-82e3-55c2254bed26 : [SELECT id,listudt,mapudt,optionaludt,setudt,tupleudt FROM new_ks.entity_with_udts WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [6576484048001120256]
	 Encoded bound values : [6576484048001120256]
13:08:38.934 [achilles-default-executor-29] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), listudt(list<new_ks.udt_no_ks>), mapudt(map<new_ks.udt_no_ks, new_ks.udt_no_ks>), optionaludt(new_ks.udt_no_ks), setudt(set<new_ks.udt_no_ks>), tupleudt(frozen<tuple<int, udt_no_ks>>)]]
13:08:38.935 [achilles-default-executor-29] DEBUG ACHILLES_DML_STATEMENT - Query ID 246e950c-e36b-490e-82e3-55c2254bed26 results : 
	id: 6576484048001120256, listudt: [{id:6576484048001120256,value:'val'}], mapudt: {{id:6576484048001120256,value:'val'}={id:6576484048001120256,value:'val'}}, optionaludt: {id:6576484048001120256,value:'val'}, setudt: [{id:6576484048001120256,value:'val'}], tupleudt: (1,{id:6576484048001120256,value:'val'})

13:08:38.936 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:08:39.015 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:39.017 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:39.018 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:39.019 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:08:39.019 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:08:39.037 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:08:39.038 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:08:39.040 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:08:39.115 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO overriden_schema_name.entitywithudts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(329801818091077632, [{id: 329801818091077632, value: 'val'}], {{id: 329801818091077632, value: 'val'}: {id: 329801818091077632, value: 'val'}}, {id: 329801818091077632, value: 'val'}, {{id: 329801818091077632, value: 'val'}}, (1, {id: 329801818091077632, value: 'val'}));

13:08:39.119 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 6ef8e04b-8e01-42d1-a97b-ab95c05f57a4 : [DELETE FROM overriden_schema_name.entitywithudts WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [329801818091077632]
	 Encoded bound values : [329801818091077632]
13:08:39.124 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:08:39.188 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:39.195 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.udt_collections_primitive(
		listint list<int>,
		setdouble set<double>);

13:08:39.361 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_udt_collections_primitives(
		id bigint,
		udt frozen<achilles_embedded.udt_collections_primitive>,
		PRIMARY KEY(id));

13:08:39.636 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_udt_collections_primitives
13:08:39.709 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 1d5ef8e4-d8f0-455f-89c1-9b8635fc920e : [INSERT INTO achilles_embedded.entity_with_udt_collections_primitives (id,udt) VALUES (:id,:udt) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [4221712505717004288, info.archinnov.achilles.internals.entities.UDTWithCollectionsPrimitive@66238be2, 0]
	 Encoded bound values : [4221712505717004288, {listint:[1,2,3],setdouble:{4.0,5.0,6.0}}, 0]
13:08:39.713 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_udt_collections_primitives
13:08:39.774 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:39.776 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:39.864 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.immutable_udt(
		idx bigint,
		value text);

13:08:40.012 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.immutable_entity(
		id bigint,
		name text,
		udt frozen<achilles_embedded.immutable_udt>,
		value double,
		PRIMARY KEY(id));

13:08:40.262 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.immutable_entity
13:08:40.325 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.immutable_entity(id, name, value, udt) VALUES(441209396046090240, 'name', 2.0, {idx: 3, value: 'value_udt'});

13:08:40.330 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID fbff9032-1093-452a-9960-c1fb8cf2b39c : [SELECT id,value,udt FROM achilles_embedded.immutable_entity WHERE id=?] with CONSISTENCY LEVEL [null]
13:08:40.332 [achilles-default-executor-32] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), value(double), udt(achilles_embedded.immutable_udt)]]
13:08:40.333 [achilles-default-executor-32] DEBUG ACHILLES_DML_STATEMENT - Query ID fbff9032-1093-452a-9960-c1fb8cf2b39c results : 
	id: 441209396046090240, value: 2.0, udt: {idx:3,value:'value_udt'}

13:08:40.336 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.immutable_entity
13:08:40.421 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:40.424 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:40.430 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.immutable_udt(
		idx bigint,
		value text);

13:08:40.431 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.immutable_entity(
		id bigint,
		name text,
		udt frozen<achilles_embedded.immutable_udt>,
		value double,
		PRIMARY KEY(id));

13:08:40.433 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.immutable_entity
13:08:40.501 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.immutable_entity(id, name, value, udt) VALUES(3079657207859684352, 'name', 2.0, {idx: 3, value: 'value_udt'});

13:08:40.507 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 65038439-e143-4c3e-b5c7-d784e594d414 : [SELECT * FROM achilles_embedded.immutable_entity WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [3079657207859684352]
	 Encoded bound values : [3079657207859684352]
13:08:40.513 [achilles-default-executor-33] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), name(varchar), udt(achilles_embedded.immutable_udt), value(double)]]
13:08:40.513 [achilles-default-executor-33] DEBUG ACHILLES_DML_STATEMENT - Query ID 65038439-e143-4c3e-b5c7-d784e594d414 results : 
	id: 3079657207859684352, name: name, udt: {idx:3,value:'value_udt'}, value: 2.0

13:08:40.517 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.immutable_entity
13:08:40.581 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:40.583 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:40.589 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.immutable_udt(
		idx bigint,
		value text);

13:08:40.591 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.immutable_entity(
		id bigint,
		name text,
		udt frozen<achilles_embedded.immutable_udt>,
		value double,
		PRIMARY KEY(id));

13:08:40.592 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.immutable_entity
13:08:40.678 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.immutable_entity(id, name, value, udt) VALUES(1046963421210555392, 'name', 2.0, {idx: 3, value: 'value_udt'});

13:08:40.681 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 65f5a714-d8a3-4a61-9953-a507f9a1a3f5 : [SELECT id,name,udt,value FROM achilles_embedded.immutable_entity WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [1046963421210555392]
	 Encoded bound values : [1046963421210555392]
13:08:40.682 [achilles-default-executor-34] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), name(varchar), udt(achilles_embedded.immutable_udt), value(double)]]
13:08:40.683 [achilles-default-executor-34] DEBUG ACHILLES_DML_STATEMENT - Query ID 65f5a714-d8a3-4a61-9953-a507f9a1a3f5 results : 
	id: 1046963421210555392, name: name, udt: {idx:3,value:'value_udt'}, value: 2.0

13:08:40.683 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.immutable_entity
13:08:40.760 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:40.766 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_complex_counters(
		id bigint,
		uuid uuid,
		static_count counter static,
		codec_count counter,
		count counter,
		PRIMARY KEY(id, uuid))
	WITH CLUSTERING ORDER BY(uuid ASC);

13:08:40.992 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_complex_counters
13:08:41.263 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 330ebd4d-a158-404d-aa6a-13dc8fde33fb : [UPDATE achilles_embedded.entity_complex_counters SET codec_count=codec_count+:codec_count WHERE id=:id AND uuid=:uuid;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [6072285101942405120, 3702046361088340992, 19766a80-29f5-11ec-b47c-533704a4cd80]
	 Encoded bound values : [6072285101942405120, 3702046361088340992, 19766a80-29f5-11ec-b47c-533704a4cd80]
13:08:41.286 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_complex_counters
13:08:41.350 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:41.356 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_complex_counters(
		id bigint,
		uuid uuid,
		static_count counter static,
		codec_count counter,
		count counter,
		PRIMARY KEY(id, uuid))
	WITH CLUSTERING ORDER BY(uuid ASC);

13:08:41.358 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_complex_counters
13:08:41.421 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : UPDATE achilles_embedded.entity_complex_counters SET count = count + 7162468810794449920, static_count = static_count + 2059366329929439232, codec_count = codec_count + 8012511653895339008 WHERE id = 4016614436201651200 AND uuid = 198f70c0-29f5-11ec-b47c-533704a4cd80;

13:08:41.424 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 6e0a48c8-fc80-4375-9d85-6c8d3a06cd3d : [SELECT id,static_count,uuid,codec_count,count FROM achilles_embedded.entity_complex_counters WHERE id=:id AND uuid=:uuid;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [4016614436201651200, 198f70c0-29f5-11ec-b47c-533704a4cd80]
	 Encoded bound values : [4016614436201651200, 198f70c0-29f5-11ec-b47c-533704a4cd80]
13:08:41.426 [achilles-default-executor-36] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), static_count(counter), uuid(uuid), codec_count(counter), count(counter)]]
13:08:41.427 [achilles-default-executor-36] DEBUG ACHILLES_DML_STATEMENT - Query ID 6e0a48c8-fc80-4375-9d85-6c8d3a06cd3d results : 
	id: 4016614436201651200, static_count: 2059366329929439232, uuid: 198f70c0-29f5-11ec-b47c-533704a4cd80, codec_count: 8012511653895339008, count: 7162468810794449920

13:08:41.428 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_complex_counters
13:08:41.492 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:41.500 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.my_type(
		name text,
		list list<text>,
		map map<text, text>);

13:08:41.686 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_complex_types(
		id bigint,
		ascii ascii,
		codec_on_class text,
		complex_nesting_map map<text, frozen<map<int, frozen<tuple<text, int, int>>>>>,
		consistencylevel text,
		doublearray frozen<list<double>>,
		encoding int,
		floatarray frozen<list<float>>,
		intarray frozen<list<int>>,
		integer text,
		intwrapper int,
		jdkinstant timestamp,
		jdklocaldate date,
		jdklocaltime time,
		jdkzoneddatetime frozen<tuple<timestamp, varchar>>,
		json_map text,
		list_nesting list<frozen<map<int, text>>>,
		list_udt list<frozen<achilles_embedded.my_type>>,
		listoflongarray list<frozen<list<bigint>>>,
		listofoptional list<text>,
		longarray frozen<list<bigint>>,
		map_udt map<int, frozen<achilles_embedded.my_type>>,
		map_with_nested_json map<int, text>,
		object_bool boolean,
		object_byte tinyint,
		object_byte_array blob,
		ok_set set<int>,
		optionalencodingasordinal int,
		optionalprotocolversion text,
		optionalstring text,
		primitive_bool boolean,
		primitive_byte tinyint,
		primitive_byte_array blob,
		protocolversion text,
		protocolversionasordinal int,
		simple_udt frozen<achilles_embedded.my_type>,
		time text,
		timeuuid timeuuid,
		tuple1 frozen<tuple<text>>,
		tuple2 frozen<tuple<text, text>>,
		tuple_nesting frozen<tuple<int, list<text>>>,
		value text,
		PRIMARY KEY(id));

13:08:41.985 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_complex_types
13:08:42.051 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_complex_types(id, codec_on_class, complex_nesting_map, consistencylevel, integer, json_map, list_nesting, list_udt, map_udt, map_with_nested_json, object_bool, object_byte, object_byte_array, ok_set, primitive_bool, primitive_byte, primitive_byte_array, simple_udt, time, timeuuid, tuple1, tuple2, tuple_nesting, value, intwrapper, protocolversion, encoding, doublearray, floatarray, intarray, longarray, jdkinstant, jdklocaldate, jdklocaltime, jdkzoneddatetime, protocolversionasordinal, optionalstring, optionalprotocolversion, optionalencodingasordinal, listofoptional, ascii) VALUES(238675630506703872, 'ClassAnnotatedByCodec', {'{"list":["list"],"map":{"1":"1"},"name":"name"}': {1:('1', 2, 5)}}, 'EACH_QUORUM', '123', '{"1":[1,2,3]}', [{1: 'one'}], [{name: 'name', list: ['list'], map: {'1':'1'}}], {1:{name: 'name', list: ['list'], map: {'1':'1'}}}, {1: '[{"1":"one"}]'}, true, 5, bigintAsBlob(7), {6, 10}, true, 3, bigintAsBlob(4), {name: 'name', list: ['list'], map: {'1':'1'}}, '1234567', 50554d6e-29bb-11e5-b345-feff819cdc9f, ('"THREE"'), ('"TWO"', '2'), (1, ['1']), 'val', 456, 'V2', 0, [1.0, 2.0], [3.0, 4.0], [5, 6], [7, 8], '2016-01-01 01:01:01+0000', '2016-01-01', '01:01:00', ('2016-01-01 01:01:01', 'GMT'),2, null, 'V3', 1, ['1','2'], 'ascii_value');

13:08:42.124 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID cd88ab72-ad36-49bc-b759-898480283a3b : [SELECT id,ascii,codec_on_class,complex_nesting_map,consistencylevel,doublearray,encoding,floatarray,intarray,integer,intwrapper,jdkinstant,jdklocaldate,jdklocaltime,jdkzoneddatetime,json_map,list_nesting,list_udt,listoflongarray,listofoptional,longarray,map_udt,map_with_nested_json,object_bool,object_byte,object_byte_array,ok_set,optionalencodingasordinal,optionalprotocolversion,optionalstring,primitive_bool,primitive_byte,primitive_byte_array,protocolversion,protocolversionasordinal,simple_udt,time,timeuuid,tuple1,tuple2,tuple_nesting,value,writetime(value) AS write_time,writetime(value) AS write_time_2 FROM achilles_embedded.entity_complex_types WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [238675630506703872]
	 Encoded bound values : [238675630506703872]
13:08:42.132 [achilles-default-executor-37] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), ascii(ascii), codec_on_class(varchar), complex_nesting_map(map<varchar, map<int, frozen<tuple<varchar, int, int>>>>), consistencylevel(varchar), doublearray(list<double>), encoding(int), floatarray(list<float>), intarray(list<int>), integer(varchar), intwrapper(int), jdkinstant(timestamp), jdklocaldate(date), jdklocaltime(time), jdkzoneddatetime(frozen<tuple<timestamp, varchar>>), json_map(varchar), list_nesting(list<map<int, varchar>>), list_udt(list<achilles_embedded.my_type>), listoflongarray(list<list<bigint>>), listofoptional(list<varchar>), longarray(list<bigint>), map_udt(map<int, achilles_embedded.my_type>), map_with_nested_json(map<int, varchar>), object_bool(boolean), object_byte(tinyint), object_byte_array(blob), ok_set(set<int>), optionalencodingasordinal(int), optionalprotocolversion(varchar), optionalstring(varchar), primitive_bool(boolean), primitive_byte(tinyint), primitive_byte_array(blob), protocolversion(varchar), protocolversionasordinal(int), simple_udt(achilles_embedded.my_type), time(varchar), timeuuid(timeuuid), tuple1(frozen<tuple<varchar>>), tuple2(frozen<tuple<varchar, varchar>>), tuple_nesting(frozen<tuple<int, list<varchar>>>), value(varchar), write_time(bigint), write_time_2(bigint)]]
13:08:42.145 [achilles-default-executor-37] DEBUG ACHILLES_DML_STATEMENT - Query ID cd88ab72-ad36-49bc-b759-898480283a3b results : 
	id: 238675630506703872, ascii: ascii_value, codec_on_class: ClassAnnotatedByCodec, complex_nesting_map: {{"list":["list"],"map":{"1":"1"},"name":"name"}={1=('1',2,5)}}, consistencylevel: EACH_QUORUM, doublearray: [D@37cd3c91, encoding: 0, floatarray: [F@390ad418, intarray: [I@3d3557e1, integer: 123, intwrapper: 456, jdkinstant: Thu Dec 31 19:01:01 CST 2015, jdklocaldate: 2016-01-01, jdklocaltime: 3660000000000, jdkzoneddatetime: 2016-01-01T07:01:01Z[GMT], json_map: {"1":[1,2,3]}, list_nesting: [{1=one}], list_udt: [{name:'name',list:['list'],map:{'1':'1'}}], listoflongarray: [], listofoptional: [1, 2], longarray: [J@17711214, map_udt: {1={name:'name',list:['list'],map:{'1':'1'}}}, map_with_nested_json: {1=[{"1":"one"}]}, object_bool: true, object_byte: 5, object_byte_array: java.nio.HeapByteBuffer[pos=0 lim=8 cap=8], ok_set: [6, 10], optionalencodingasordinal: 1, optionalprotocolversion: V3, optionalstring: null, primitive_bool: true, primitive_byte: 3, primitive_byte_array: java.nio.HeapByteBuffer[pos=0 lim=8 cap=8], protocolversion: V2, protocolversionasordinal: 2, simple_udt: {name:'name',list:['list'],map:{'1':'1'}}, time: 1234567, timeuuid: 50554d6e-29bb-11e5-b345-feff819cdc9f, tuple1: ('"THREE"'), tuple2: ('"TWO"','2'), tuple_nesting: (1,['1']), value: val, write_time: 1633889322051275, write_time_2: 1633889322051275

13:08:42.277 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_complex_types
13:08:42.340 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:42.355 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.my_type(
		name text,
		list list<text>,
		map map<text, text>);

13:08:42.358 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_complex_types(
		id bigint,
		ascii ascii,
		codec_on_class text,
		complex_nesting_map map<text, frozen<map<int, frozen<tuple<text, int, int>>>>>,
		consistencylevel text,
		doublearray frozen<list<double>>,
		encoding int,
		floatarray frozen<list<float>>,
		intarray frozen<list<int>>,
		integer text,
		intwrapper int,
		jdkinstant timestamp,
		jdklocaldate date,
		jdklocaltime time,
		jdkzoneddatetime frozen<tuple<timestamp, varchar>>,
		json_map text,
		list_nesting list<frozen<map<int, text>>>,
		list_udt list<frozen<achilles_embedded.my_type>>,
		listoflongarray list<frozen<list<bigint>>>,
		listofoptional list<text>,
		longarray frozen<list<bigint>>,
		map_udt map<int, frozen<achilles_embedded.my_type>>,
		map_with_nested_json map<int, text>,
		object_bool boolean,
		object_byte tinyint,
		object_byte_array blob,
		ok_set set<int>,
		optionalencodingasordinal int,
		optionalprotocolversion text,
		optionalstring text,
		primitive_bool boolean,
		primitive_byte tinyint,
		primitive_byte_array blob,
		protocolversion text,
		protocolversionasordinal int,
		simple_udt frozen<achilles_embedded.my_type>,
		time text,
		timeuuid timeuuid,
		tuple1 frozen<tuple<text>>,
		tuple2 frozen<tuple<text, text>>,
		tuple_nesting frozen<tuple<int, list<text>>>,
		value text,
		PRIMARY KEY(id));

13:08:42.360 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_complex_types
13:08:42.519 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 9d43d872-9565-4144-8dff-58c1c4fdc925 : [INSERT INTO achilles_embedded.entity_complex_types (id,ascii,codec_on_class,complex_nesting_map,consistencylevel,doublearray,encoding,floatarray,intarray,integer,intwrapper,jdkinstant,jdklocaldate,jdklocaltime,jdkzoneddatetime,json_map,list_nesting,list_udt,listoflongarray,listofoptional,longarray,map_udt,map_with_nested_json,object_bool,object_byte,object_byte_array,ok_set,optionalencodingasordinal,optionalprotocolversion,optionalstring,primitive_bool,primitive_byte,primitive_byte_array,protocolversion,protocolversionasordinal,simple_udt,time,timeuuid,tuple1,tuple2,tuple_nesting,value) VALUES (:id,:ascii,:codec_on_class,:complex_nesting_map,:consistencylevel,:doublearray,:encoding,:floatarray,:intarray,:integer,:intwrapper,:jdkinstant,:jdklocaldate,:jdklocaltime,:jdkzoneddatetime,:json_map,:list_nesting,:list_udt,:listoflongarray,:listofoptional,:longarray,:map_udt,:map_with_nested_json,:object_bool,:object_byte,:object_byte_array,:ok_set,:optionalencodingasordinal,:optionalprotocolversion,:optionalstring,:primitive_bool,:primitive_byte,:primitive_byte_array,:protocolversion,:protocolversionasordinal,:simple_udt,:time,:timeuuid,:tuple1,:tuple2,:tuple_nesting,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [2134853738062403584, ascii_value, ClassAnnotatedByCodec{}, {info.archinnov.achilles.internals.entities.TestUDT@c762df3d={1=Tuple3{_1=1, _2=2, _3=ALL}}}, EACH_QUORUM, [D@3163987e, ORDINAL, [F@6c000e0c, [I@5f233b26, 123, info.archinnov.achilles.internals.types.IntWrapper@9a, 2021-10-10T18:08:42.423Z, 2021-10-10, 13:08:42.430, 2021-10-10T13:08:42.430-05:00[America/Chicago], {1=[1, 2, 3]}, [{1=one}], [info.archinnov.achilles.internals.entities.TestUDT@c762df3d], [[J@44f9779c], [Optional[1], Optional[2]], [J@6974a715, {1=info.archinnov.achilles.internals.entities.TestUDT@c762df3d}, {1=[{1=one}]}, true, 5, [Ljava.lang.Byte;@5e8a459, [LOCAL_QUORUM, LOCAL_ONE], Optional[V2], Optional[V3], Optional.empty, true, 3, 0x04, V4, V2, info.archinnov.achilles.internals.entities.TestUDT@c762df3d, Wed Sep 30 19:00:00 CDT 2015, 1a287c70-29f5-11ec-b47c-533704a4cd80, Tuple1{_1=THREE}, Tuple2{_1=TWO, _2=2}, Tuple2{_1=1, _2=[1]}, val, 0]
	 Encoded bound values : [2134853738062403584, ascii_value, ClassAnnotatedByCodec{}, {{"list":["list"],"map":{"1":"1"},"name":"name"}={1=('1',2,5)}}, EACH_QUORUM, [D@3163987e, 1, [F@6c000e0c, [I@5f233b26, 123, 123, 2021-10-10T18:08:42.423Z, 2021-10-10, 13:08:42.430, 2021-10-10T13:08:42.430-05:00[America/Chicago], {"1":[1,2,3]}, [{1=one}], [{name:'name',list:['list'],map:{'1':'1'}}], [[J@44f9779c], [1, 2], [J@6974a715, {1={name:'name',list:['list'],map:{'1':'1'}}}, {1=[{"1":"one"}]}, true, 5, 0x07, [6, 10], 1, V3, null, true, 3, 0x04, V4, 1, {name:'name',list:['list'],map:{'1':'1'}}, 1443657600000, 1a287c70-29f5-11ec-b47c-533704a4cd80, ('"THREE"'), ('"TWO"','2'), (1,['1']), val, 0]
13:08:42.539 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_complex_types
13:08:42.607 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:42.617 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.my_type(
		name text,
		list list<text>,
		map map<text, text>);

13:08:42.625 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_complex_types(
		id bigint,
		ascii ascii,
		codec_on_class text,
		complex_nesting_map map<text, frozen<map<int, frozen<tuple<text, int, int>>>>>,
		consistencylevel text,
		doublearray frozen<list<double>>,
		encoding int,
		floatarray frozen<list<float>>,
		intarray frozen<list<int>>,
		integer text,
		intwrapper int,
		jdkinstant timestamp,
		jdklocaldate date,
		jdklocaltime time,
		jdkzoneddatetime frozen<tuple<timestamp, varchar>>,
		json_map text,
		list_nesting list<frozen<map<int, text>>>,
		list_udt list<frozen<achilles_embedded.my_type>>,
		listoflongarray list<frozen<list<bigint>>>,
		listofoptional list<text>,
		longarray frozen<list<bigint>>,
		map_udt map<int, frozen<achilles_embedded.my_type>>,
		map_with_nested_json map<int, text>,
		object_bool boolean,
		object_byte tinyint,
		object_byte_array blob,
		ok_set set<int>,
		optionalencodingasordinal int,
		optionalprotocolversion text,
		optionalstring text,
		primitive_bool boolean,
		primitive_byte tinyint,
		primitive_byte_array blob,
		protocolversion text,
		protocolversionasordinal int,
		simple_udt frozen<achilles_embedded.my_type>,
		time text,
		timeuuid timeuuid,
		tuple1 frozen<tuple<text>>,
		tuple2 frozen<tuple<text, text>>,
		tuple_nesting frozen<tuple<int, list<text>>>,
		value text,
		PRIMARY KEY(id));

13:08:42.629 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_complex_types
13:08:42.691 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_complex_types(id, codec_on_class, complex_nesting_map, consistencylevel, integer, json_map, list_nesting, list_udt, map_udt, map_with_nested_json, object_bool, object_byte, object_byte_array, ok_set, primitive_bool, primitive_byte, primitive_byte_array, simple_udt, time, timeuuid, tuple1, tuple2, tuple_nesting, value, intwrapper, protocolversion, encoding, doublearray, floatarray, intarray, longarray, jdkinstant, jdklocaldate, jdklocaltime, jdkzoneddatetime, protocolversionasordinal, optionalstring, optionalprotocolversion, optionalencodingasordinal, listofoptional, ascii) VALUES(5052362342579481600, 'ClassAnnotatedByCodec', {'{"list":["list"],"map":{"1":"1"},"name":"name"}': {1:('1', 2, 5)}}, 'EACH_QUORUM', '123', '{"1":[1,2,3]}', [{1: 'one'}], [{name: 'name', list: ['list'], map: {'1':'1'}}], {1:{name: 'name', list: ['list'], map: {'1':'1'}}}, {1: '[{"1":"one"}]'}, true, 5, bigintAsBlob(7), {6, 10}, true, 3, bigintAsBlob(4), {name: 'name', list: ['list'], map: {'1':'1'}}, '1234567', 50554d6e-29bb-11e5-b345-feff819cdc9f, ('"THREE"'), ('"TWO"', '2'), (1, ['1']), 'val', 456, 'V2', 0, [1.0, 2.0], [3.0, 4.0], [5, 6], [7, 8], '2016-01-01 01:01:01+0000', '2016-01-01', '01:01:00', ('2016-01-01 01:01:01', 'GMT'),2, null, 'V3', 1, ['1','2'], 'ascii_value');

13:08:42.700 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 41bd6719-3228-4ddb-882c-0f597c5981f7 : [SELECT writetime(value) AS write_time,writetime(value) AS write_time_2 FROM achilles_embedded.entity_complex_types WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [5052362342579481600]
	 Encoded bound values : [5052362342579481600]
13:08:42.705 [achilles-default-executor-39] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[write_time(bigint), write_time_2(bigint)]]
13:08:42.706 [achilles-default-executor-39] DEBUG ACHILLES_DML_STATEMENT - Query ID 41bd6719-3228-4ddb-882c-0f597c5981f7 results : 
	write_time: 1633889322692031, write_time_2: 1633889322692031

13:08:42.706 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_complex_types
13:08:42.779 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:42.785 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:08:42.786 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:08:42.787 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:08:42.788 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.having_nested_type(
		value text,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		nestedudt frozen<achilles_embedded.no_ks>,
		tuplewithudt frozen<tuple<int, no_ks>>);

13:08:42.962 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:08:42.963 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_nested_udt(
		id bigint,
		complexudt frozen<achilles_embedded.having_nested_type>,
		optionaludt achilles_embedded.no_ks,
		udt frozen<achilles_embedded.no_ks>,
		PRIMARY KEY(id));

13:08:43.202 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:43.207 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_counter(
		id bigint,
		count counter,
		PRIMARY KEY(id));

13:08:43.444 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_counter
13:08:43.505 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID e3ecaf07-8f90-4044-8942-fdd8408cd445 : [DELETE FROM achilles_embedded.entity_counter WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [6227945852477100032]
	 Encoded bound values : [6227945852477100032]
13:08:43.508 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_counter
13:08:43.570 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:43.578 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_counter(
		id bigint,
		count counter,
		PRIMARY KEY(id));

13:08:43.579 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_counter
13:08:43.647 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 2dcba435-00be-43fd-8b93-c8e02c31bfd5 : [UPDATE achilles_embedded.entity_counter SET count=count+:count WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [4336346915147928576, 6784328530145497088]
	 Encoded bound values : [4336346915147928576, 6784328530145497088]
13:08:43.653 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_counter
13:08:43.726 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:43.731 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_counter(
		id bigint,
		count counter,
		PRIMARY KEY(id));

13:08:43.733 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_counter
13:08:43.807 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : UPDATE achilles_embedded.entity_counter SET count = count + 2386674469946898432 WHERE id = 3218160002424221696;

13:08:43.809 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 36760da6-95ee-465d-8aa3-d9e05fd7c0c8 : [DELETE FROM achilles_embedded.entity_counter WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [3218160002424221696]
	 Encoded bound values : [3218160002424221696]
13:08:43.812 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_counter
13:08:43.875 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:43.880 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_counter(
		id bigint,
		count counter,
		PRIMARY KEY(id));

13:08:43.882 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_counter
13:08:43.970 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : UPDATE achilles_embedded.entity_counter SET count = count + 758010649485228032 WHERE id = 2781489975842838528;

13:08:43.974 [Achilles Embedded Cassandra Cluster-worker-0] WARN  com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='DELETE FROM achilles_embedded.entity_counter WHERE id=:id;'
13:08:43.975 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 34012c44-49c6-45b2-99ae-bd65b074caa1 : [DELETE FROM achilles_embedded.entity_counter WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [2781489975842838528]
	 Encoded bound values : [2781489975842838528]
13:08:43.977 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_counter
13:08:44.050 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:44.055 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_counter(
		id bigint,
		count counter,
		PRIMARY KEY(id));

13:08:44.057 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_counter
13:08:44.120 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : UPDATE achilles_embedded.entity_counter SET count = count + 6032222106061103104 WHERE id = 3750514026232502272;

13:08:44.122 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 6aa50125-f1fd-41f9-9341-ef12562a3f25 : [SELECT id,count FROM achilles_embedded.entity_counter WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [3750514026232502272]
	 Encoded bound values : [3750514026232502272]
13:08:44.127 [achilles-default-executor-44] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), count(counter)]]
13:08:44.127 [achilles-default-executor-44] DEBUG ACHILLES_DML_STATEMENT - Query ID 6aa50125-f1fd-41f9-9341-ef12562a3f25 results : 
	id: 3750514026232502272, count: 6032222106061103104

13:08:44.128 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_counter
13:08:44.214 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.complex_tuple
13:08:44.286 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 7f225d03-def3-4430-a945-a1df14df0b64 : [INSERT INTO achilles_embedded.complex_tuple (id,tuple) VALUES (:id,:tuple) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [2918349625357472768, Tuple2{_1=10, _2={20=[10, 20]}}, 0]
	 Encoded bound values : [2918349625357472768, (10,{20:['10','20']}), 0]
13:08:44.290 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.complex_tuple(id, tuple) VALUES(2412787517327810560, (10, {20: ['10', '20']}));

13:08:44.291 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 1efe2dac-6556-4831-a4e6-d81c7189af0e : [SELECT id,tuple FROM achilles_embedded.complex_tuple WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [2412787517327810560]
	 Encoded bound values : [2412787517327810560]
13:08:44.295 [achilles-default-executor-46] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), tuple(frozen<tuple<int, map<int, list<varchar>>>>)]]
13:08:44.295 [achilles-default-executor-46] DEBUG ACHILLES_DML_STATEMENT - Query ID 1efe2dac-6556-4831-a4e6-d81c7189af0e results : 
	id: 2412787517327810560, tuple: (10,{20:['10','20']})

13:08:44.296 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.complex_tuple
13:08:44.358 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:44.364 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithcomplexindices(
		id bigint,
		clust1 int,
		clust2 int,
		clust3 text,
		collectionindex list<text>,
		fullindexoncollection frozen<set<text>>,
		indexonmapentry map<int, text>,
		indexonmapkey map<text, text>,
		indexonmapvalue map<int, text>,
		simpleindex text,
		PRIMARY KEY(id, clust1, clust2, clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, clust2 ASC, clust3 ASC);

13:08:44.622 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS collectionindex_index ON achilles_embedded.entitywithcomplexindices ( collectionindex );

13:08:44.951 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS fullindexoncollection_index ON achilles_embedded.entitywithcomplexindices ( FULL(fullindexoncollection) );

13:08:45.244 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapentry_index ON achilles_embedded.entitywithcomplexindices ( ENTRIES(indexonmapentry) );

13:08:45.576 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapkey_index ON achilles_embedded.entitywithcomplexindices ( KEYS(indexonmapkey) );

13:08:45.865 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapvalue_index ON achilles_embedded.entitywithcomplexindices ( indexonmapvalue );

13:08:46.185 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS simpleindex_index ON achilles_embedded.entitywithcomplexindices ( simpleindex );

13:08:46.513 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:08:46.577 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(4557039202388929536, 1, 1, '1', '111', ['1', '1', '1'], {'111'}, {'111': '111'}, {111: '111'}, {111 : '111'});

13:08:46.587 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(4557039202388929536, 1, 1, '2', '112', ['1', '1', '2'], {'112'}, {'112': '112'}, {112: '112'}, {112 : '112'});

13:08:46.592 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(4557039202388929536, 1, 1, '3', '113', ['1', '1', '3'], {'113'}, {'113': '113'}, {113: '113'}, {113 : '113'});

13:08:46.594 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(4557039202388929536, 2, 1, '1', '211', ['2', '1', '1'], {'211'}, {'211': '211'}, {211: '211'}, {211 : '211'});

13:08:46.595 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(4557039202388929536, 2, 1, '2', '212', ['2', '1', '2'], {'212'}, {'212': '212'}, {212: '212'}, {212 : '212'});

13:08:46.596 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(4557039202388929536, 2, 1, '3', '213', ['2', '1', '3'], {'213'}, {'213': '213'}, {213: '213'}, {213 : '213'});

13:08:46.598 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(4557039202388929536, 3, 1, '1', '311', ['3', '1', '1'], {'311'}, {'311': '311'}, {311: '311'}, {311 : '311'});

13:08:46.601 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(4557039202388929536, 3, 1, '2', '312', ['3', '1', '2'], {'312'}, {'312': '312'}, {312: '312'}, {312 : '312'});

13:08:46.608 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(4557039202388929536, 3, 1, '3', '313', ['3', '1', '3'], {'313'}, {'313': '313'}, {313: '313'}, {313 : '313'});

13:08:46.612 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(4557039202388929536, 4, 1, '1', '411', ['4', '1', '1'], {'411'}, {'411': '411'}, {411: '411'}, {411 : '411'});

13:08:46.630 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID e708b564-4fa3-4b54-a45d-105a6137ef46 : [SELECT * FROM achilles_embedded.entitywithcomplexindices WHERE simpleindex=:simpleindex AND (clust1,clust2,clust3)>=(:clust1,:clust2,:clust3) AND (clust1,clust2)<=(:clust1,:clust2) ALLOW FILTERING;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [312, 1, 1, 1, 3, 2]
	 Encoded bound values : [312, 1, 1, 1, 3, 2]
13:08:46.647 [achilles-default-executor-47] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), clust1(int), clust2(int), clust3(varchar), collectionindex(list<varchar>), fullindexoncollection(set<varchar>), indexonmapentry(map<int, varchar>), indexonmapkey(map<varchar, varchar>), indexonmapvalue(map<int, varchar>), simpleindex(varchar)]]
13:08:46.648 [achilles-default-executor-47] DEBUG ACHILLES_DML_STATEMENT - Query ID e708b564-4fa3-4b54-a45d-105a6137ef46 results : 
	id: 4557039202388929536, clust1: 3, clust2: 1, clust3: 2, collectionindex: [3, 1, 2], fullindexoncollection: [312], indexonmapentry: {312=312}, indexonmapkey: {312=312}, indexonmapvalue: {312=312}, simpleindex: 312

13:08:46.650 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:08:46.713 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:46.718 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithcomplexindices(
		id bigint,
		clust1 int,
		clust2 int,
		clust3 text,
		collectionindex list<text>,
		fullindexoncollection frozen<set<text>>,
		indexonmapentry map<int, text>,
		indexonmapkey map<text, text>,
		indexonmapvalue map<int, text>,
		simpleindex text,
		PRIMARY KEY(id, clust1, clust2, clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, clust2 ASC, clust3 ASC);

13:08:46.719 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS collectionindex_index ON achilles_embedded.entitywithcomplexindices ( collectionindex );

13:08:46.720 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS fullindexoncollection_index ON achilles_embedded.entitywithcomplexindices ( FULL(fullindexoncollection) );

13:08:46.720 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapentry_index ON achilles_embedded.entitywithcomplexindices ( ENTRIES(indexonmapentry) );

13:08:46.721 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapkey_index ON achilles_embedded.entitywithcomplexindices ( KEYS(indexonmapkey) );

13:08:46.721 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapvalue_index ON achilles_embedded.entitywithcomplexindices ( indexonmapvalue );

13:08:46.722 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS simpleindex_index ON achilles_embedded.entitywithcomplexindices ( simpleindex );

13:08:46.723 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:08:46.787 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6070155513451949056, 1, 1, '1', '111', ['1', '1', '1'], {'111'}, {'111': '111'}, {111: '111'}, {111 : '111'});

13:08:46.789 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6070155513451949056, 1, 1, '2', '112', ['1', '1', '2'], {'112'}, {'112': '112'}, {112: '112'}, {112 : '112'});

13:08:46.791 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6070155513451949056, 1, 1, '3', '113', ['1', '1', '3'], {'113'}, {'113': '113'}, {113: '113'}, {113 : '113'});

13:08:46.793 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6070155513451949056, 2, 1, '1', '211', ['2', '1', '1'], {'211'}, {'211': '211'}, {211: '211'}, {211 : '211'});

13:08:46.794 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6070155513451949056, 2, 1, '2', '212', ['2', '1', '2'], {'212'}, {'212': '212'}, {212: '212'}, {212 : '212'});

13:08:46.796 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6070155513451949056, 2, 1, '3', '213', ['2', '1', '3'], {'213'}, {'213': '213'}, {213: '213'}, {213 : '213'});

13:08:46.797 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6070155513451949056, 3, 1, '1', '311', ['3', '1', '1'], {'311'}, {'311': '311'}, {311: '311'}, {311 : '311'});

13:08:46.798 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6070155513451949056, 3, 1, '2', '312', ['3', '1', '2'], {'312'}, {'312': '312'}, {312: '312'}, {312 : '312'});

13:08:46.800 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6070155513451949056, 3, 1, '3', '313', ['3', '1', '3'], {'313'}, {'313': '313'}, {313: '313'}, {313 : '313'});

13:08:46.801 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6070155513451949056, 4, 1, '1', '411', ['4', '1', '1'], {'411'}, {'411': '411'}, {411: '411'}, {411 : '411'});

13:08:46.806 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 48564fce-e8f6-464a-8983-87402965303a : [SELECT * FROM achilles_embedded.entitywithcomplexindices WHERE simpleindex=:simpleindex AND clust1>=:clust1_Lte AND clust1<=:clust1_Lte ALLOW FILTERING;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [312, 1, 4]
	 Encoded bound values : [312, 1, 4]
13:08:46.808 [achilles-default-executor-48] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), clust1(int), clust2(int), clust3(varchar), collectionindex(list<varchar>), fullindexoncollection(set<varchar>), indexonmapentry(map<int, varchar>), indexonmapkey(map<varchar, varchar>), indexonmapvalue(map<int, varchar>), simpleindex(varchar)]]
13:08:46.809 [achilles-default-executor-48] DEBUG ACHILLES_DML_STATEMENT - Query ID 48564fce-e8f6-464a-8983-87402965303a results : 
	id: 6070155513451949056, clust1: 3, clust2: 1, clust3: 2, collectionindex: [3, 1, 2], fullindexoncollection: [312], indexonmapentry: {312=312}, indexonmapkey: {312=312}, indexonmapvalue: {312=312}, simpleindex: 312

13:08:46.809 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:08:46.884 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:46.890 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithcomplexindices(
		id bigint,
		clust1 int,
		clust2 int,
		clust3 text,
		collectionindex list<text>,
		fullindexoncollection frozen<set<text>>,
		indexonmapentry map<int, text>,
		indexonmapkey map<text, text>,
		indexonmapvalue map<int, text>,
		simpleindex text,
		PRIMARY KEY(id, clust1, clust2, clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, clust2 ASC, clust3 ASC);

13:08:46.891 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS collectionindex_index ON achilles_embedded.entitywithcomplexindices ( collectionindex );

13:08:46.892 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS fullindexoncollection_index ON achilles_embedded.entitywithcomplexindices ( FULL(fullindexoncollection) );

13:08:46.896 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapentry_index ON achilles_embedded.entitywithcomplexindices ( ENTRIES(indexonmapentry) );

13:08:46.896 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapkey_index ON achilles_embedded.entitywithcomplexindices ( KEYS(indexonmapkey) );

13:08:46.897 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapvalue_index ON achilles_embedded.entitywithcomplexindices ( indexonmapvalue );

13:08:46.898 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS simpleindex_index ON achilles_embedded.entitywithcomplexindices ( simpleindex );

13:08:46.899 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:08:46.968 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(245063141377832960, 1, 1, '1', '111', ['1', '1', '1'], {'111'}, {'111': '111'}, {111: '111'}, {111 : '111'});

13:08:46.972 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(245063141377832960, 1, 1, '2', '112', ['1', '1', '2'], {'112'}, {'112': '112'}, {112: '112'}, {112 : '112'});

13:08:46.973 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(245063141377832960, 1, 1, '3', '113', ['1', '1', '3'], {'113'}, {'113': '113'}, {113: '113'}, {113 : '113'});

13:08:46.975 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(245063141377832960, 2, 1, '1', '211', ['2', '1', '1'], {'211'}, {'211': '211'}, {211: '211'}, {211 : '211'});

13:08:46.976 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(245063141377832960, 2, 1, '2', '212', ['2', '1', '2'], {'212'}, {'212': '212'}, {212: '212'}, {212 : '212'});

13:08:46.977 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(245063141377832960, 2, 1, '3', '213', ['2', '1', '3'], {'213'}, {'213': '213'}, {213: '213'}, {213 : '213'});

13:08:46.979 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(245063141377832960, 3, 1, '1', '311', ['3', '1', '1'], {'311'}, {'311': '311'}, {311: '311'}, {311 : '311'});

13:08:46.981 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(245063141377832960, 3, 1, '2', '312', ['3', '1', '2'], {'312'}, {'312': '312'}, {312: '312'}, {312 : '312'});

13:08:46.983 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(245063141377832960, 3, 1, '3', '313', ['3', '1', '3'], {'313'}, {'313': '313'}, {313: '313'}, {313 : '313'});

13:08:46.984 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(245063141377832960, 4, 1, '1', '411', ['4', '1', '1'], {'411'}, {'411': '411'}, {411: '411'}, {411 : '411'});

13:08:46.989 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 94780f5e-8f88-4252-a9da-19a5d8321268 : [SELECT * FROM achilles_embedded.entitywithcomplexindices WHERE collectionindex CONTAINS :collectionindex ALLOW FILTERING;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [4]
	 Encoded bound values : [4]
13:08:46.995 [achilles-default-executor-49] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), clust1(int), clust2(int), clust3(varchar), collectionindex(list<varchar>), fullindexoncollection(set<varchar>), indexonmapentry(map<int, varchar>), indexonmapkey(map<varchar, varchar>), indexonmapvalue(map<int, varchar>), simpleindex(varchar)]]
13:08:46.995 [achilles-default-executor-49] DEBUG ACHILLES_DML_STATEMENT - Query ID 94780f5e-8f88-4252-a9da-19a5d8321268 results : 
	id: 245063141377832960, clust1: 4, clust2: 1, clust3: 1, collectionindex: [4, 1, 1], fullindexoncollection: [411], indexonmapentry: {411=411}, indexonmapkey: {411=411}, indexonmapvalue: {411=411}, simpleindex: 411

13:08:46.995 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:08:47.059 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:47.065 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithcomplexindices(
		id bigint,
		clust1 int,
		clust2 int,
		clust3 text,
		collectionindex list<text>,
		fullindexoncollection frozen<set<text>>,
		indexonmapentry map<int, text>,
		indexonmapkey map<text, text>,
		indexonmapvalue map<int, text>,
		simpleindex text,
		PRIMARY KEY(id, clust1, clust2, clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, clust2 ASC, clust3 ASC);

13:08:47.066 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS collectionindex_index ON achilles_embedded.entitywithcomplexindices ( collectionindex );

13:08:47.067 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS fullindexoncollection_index ON achilles_embedded.entitywithcomplexindices ( FULL(fullindexoncollection) );

13:08:47.067 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapentry_index ON achilles_embedded.entitywithcomplexindices ( ENTRIES(indexonmapentry) );

13:08:47.068 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapkey_index ON achilles_embedded.entitywithcomplexindices ( KEYS(indexonmapkey) );

13:08:47.069 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapvalue_index ON achilles_embedded.entitywithcomplexindices ( indexonmapvalue );

13:08:47.069 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS simpleindex_index ON achilles_embedded.entitywithcomplexindices ( simpleindex );

13:08:47.070 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:08:47.146 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8602514542373191680, 1, 1, '1', '111', ['1', '1', '1'], {'111'}, {'111': '111'}, {111: '111'}, {111 : '111'});

13:08:47.148 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8602514542373191680, 1, 1, '2', '112', ['1', '1', '2'], {'112'}, {'112': '112'}, {112: '112'}, {112 : '112'});

13:08:47.150 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8602514542373191680, 1, 1, '3', '113', ['1', '1', '3'], {'113'}, {'113': '113'}, {113: '113'}, {113 : '113'});

13:08:47.151 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8602514542373191680, 2, 1, '1', '211', ['2', '1', '1'], {'211'}, {'211': '211'}, {211: '211'}, {211 : '211'});

13:08:47.152 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8602514542373191680, 2, 1, '2', '212', ['2', '1', '2'], {'212'}, {'212': '212'}, {212: '212'}, {212 : '212'});

13:08:47.153 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8602514542373191680, 2, 1, '3', '213', ['2', '1', '3'], {'213'}, {'213': '213'}, {213: '213'}, {213 : '213'});

13:08:47.155 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8602514542373191680, 3, 1, '1', '311', ['3', '1', '1'], {'311'}, {'311': '311'}, {311: '311'}, {311 : '311'});

13:08:47.156 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8602514542373191680, 3, 1, '2', '312', ['3', '1', '2'], {'312'}, {'312': '312'}, {312: '312'}, {312 : '312'});

13:08:47.157 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8602514542373191680, 3, 1, '3', '313', ['3', '1', '3'], {'313'}, {'313': '313'}, {313: '313'}, {313 : '313'});

13:08:47.158 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8602514542373191680, 4, 1, '1', '411', ['4', '1', '1'], {'411'}, {'411': '411'}, {411: '411'}, {411 : '411'});

13:08:47.162 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID d32c07b9-4b5c-434b-87c7-c7af122188b6 : [SELECT * FROM achilles_embedded.entitywithcomplexindices WHERE indexonmapentry[:indexOnMapEntry_key] = :indexOnMapEntry_value ALLOW FILTERING;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [212, 212]
	 Encoded bound values : [212, 212]
13:08:47.170 [achilles-default-executor-50] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), clust1(int), clust2(int), clust3(varchar), collectionindex(list<varchar>), fullindexoncollection(set<varchar>), indexonmapentry(map<int, varchar>), indexonmapkey(map<varchar, varchar>), indexonmapvalue(map<int, varchar>), simpleindex(varchar)]]
13:08:47.171 [achilles-default-executor-50] DEBUG ACHILLES_DML_STATEMENT - Query ID d32c07b9-4b5c-434b-87c7-c7af122188b6 results : 
	id: 8602514542373191680, clust1: 2, clust2: 1, clust3: 2, collectionindex: [2, 1, 2], fullindexoncollection: [212], indexonmapentry: {212=212}, indexonmapkey: {212=212}, indexonmapvalue: {212=212}, simpleindex: 212

13:08:47.171 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:08:47.243 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:47.249 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithcomplexindices(
		id bigint,
		clust1 int,
		clust2 int,
		clust3 text,
		collectionindex list<text>,
		fullindexoncollection frozen<set<text>>,
		indexonmapentry map<int, text>,
		indexonmapkey map<text, text>,
		indexonmapvalue map<int, text>,
		simpleindex text,
		PRIMARY KEY(id, clust1, clust2, clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, clust2 ASC, clust3 ASC);

13:08:47.250 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS collectionindex_index ON achilles_embedded.entitywithcomplexindices ( collectionindex );

13:08:47.251 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS fullindexoncollection_index ON achilles_embedded.entitywithcomplexindices ( FULL(fullindexoncollection) );

13:08:47.251 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapentry_index ON achilles_embedded.entitywithcomplexindices ( ENTRIES(indexonmapentry) );

13:08:47.252 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapkey_index ON achilles_embedded.entitywithcomplexindices ( KEYS(indexonmapkey) );

13:08:47.252 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapvalue_index ON achilles_embedded.entitywithcomplexindices ( indexonmapvalue );

13:08:47.253 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS simpleindex_index ON achilles_embedded.entitywithcomplexindices ( simpleindex );

13:08:47.254 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:08:47.318 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(2778971141645351936, 1, 1, '1', '111', ['1', '1', '1'], {'111'}, {'111': '111'}, {111: '111'}, {111 : '111'});

13:08:47.320 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(2778971141645351936, 1, 1, '2', '112', ['1', '1', '2'], {'112'}, {'112': '112'}, {112: '112'}, {112 : '112'});

13:08:47.321 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(2778971141645351936, 1, 1, '3', '113', ['1', '1', '3'], {'113'}, {'113': '113'}, {113: '113'}, {113 : '113'});

13:08:47.323 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(2778971141645351936, 2, 1, '1', '211', ['2', '1', '1'], {'211'}, {'211': '211'}, {211: '211'}, {211 : '211'});

13:08:47.324 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(2778971141645351936, 2, 1, '2', '212', ['2', '1', '2'], {'212'}, {'212': '212'}, {212: '212'}, {212 : '212'});

13:08:47.325 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(2778971141645351936, 2, 1, '3', '213', ['2', '1', '3'], {'213'}, {'213': '213'}, {213: '213'}, {213 : '213'});

13:08:47.327 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(2778971141645351936, 3, 1, '1', '311', ['3', '1', '1'], {'311'}, {'311': '311'}, {311: '311'}, {311 : '311'});

13:08:47.328 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(2778971141645351936, 3, 1, '2', '312', ['3', '1', '2'], {'312'}, {'312': '312'}, {312: '312'}, {312 : '312'});

13:08:47.329 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(2778971141645351936, 3, 1, '3', '313', ['3', '1', '3'], {'313'}, {'313': '313'}, {313: '313'}, {313 : '313'});

13:08:47.330 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(2778971141645351936, 4, 1, '1', '411', ['4', '1', '1'], {'411'}, {'411': '411'}, {411: '411'}, {411 : '411'});

13:08:47.334 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 04ed89e4-85c8-4b0f-a826-55537eff4318 : [SELECT * FROM achilles_embedded.entitywithcomplexindices WHERE fullindexoncollection=:fullindexoncollection ALLOW FILTERING;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [[311]]
	 Encoded bound values : [[311]]
13:08:47.340 [achilles-default-executor-51] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), clust1(int), clust2(int), clust3(varchar), collectionindex(list<varchar>), fullindexoncollection(set<varchar>), indexonmapentry(map<int, varchar>), indexonmapkey(map<varchar, varchar>), indexonmapvalue(map<int, varchar>), simpleindex(varchar)]]
13:08:47.340 [achilles-default-executor-51] DEBUG ACHILLES_DML_STATEMENT - Query ID 04ed89e4-85c8-4b0f-a826-55537eff4318 results : 
	id: 2778971141645351936, clust1: 3, clust2: 1, clust3: 1, collectionindex: [3, 1, 1], fullindexoncollection: [311], indexonmapentry: {311=311}, indexonmapkey: {311=311}, indexonmapvalue: {311=311}, simpleindex: 311

13:08:47.342 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:08:47.439 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:47.445 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithcomplexindices(
		id bigint,
		clust1 int,
		clust2 int,
		clust3 text,
		collectionindex list<text>,
		fullindexoncollection frozen<set<text>>,
		indexonmapentry map<int, text>,
		indexonmapkey map<text, text>,
		indexonmapvalue map<int, text>,
		simpleindex text,
		PRIMARY KEY(id, clust1, clust2, clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, clust2 ASC, clust3 ASC);

13:08:47.446 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS collectionindex_index ON achilles_embedded.entitywithcomplexindices ( collectionindex );

13:08:47.447 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS fullindexoncollection_index ON achilles_embedded.entitywithcomplexindices ( FULL(fullindexoncollection) );

13:08:47.448 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapentry_index ON achilles_embedded.entitywithcomplexindices ( ENTRIES(indexonmapentry) );

13:08:47.449 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapkey_index ON achilles_embedded.entitywithcomplexindices ( KEYS(indexonmapkey) );

13:08:47.449 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapvalue_index ON achilles_embedded.entitywithcomplexindices ( indexonmapvalue );

13:08:47.450 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS simpleindex_index ON achilles_embedded.entitywithcomplexindices ( simpleindex );

13:08:47.451 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:08:47.524 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(297672317157795840, 1, 1, '1', '111', ['1', '1', '1'], {'111'}, {'111': '111'}, {111: '111'}, {111 : '111'});

13:08:47.527 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(297672317157795840, 1, 1, '2', '112', ['1', '1', '2'], {'112'}, {'112': '112'}, {112: '112'}, {112 : '112'});

13:08:47.528 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(297672317157795840, 1, 1, '3', '113', ['1', '1', '3'], {'113'}, {'113': '113'}, {113: '113'}, {113 : '113'});

13:08:47.530 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(297672317157795840, 2, 1, '1', '211', ['2', '1', '1'], {'211'}, {'211': '211'}, {211: '211'}, {211 : '211'});

13:08:47.531 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(297672317157795840, 2, 1, '2', '212', ['2', '1', '2'], {'212'}, {'212': '212'}, {212: '212'}, {212 : '212'});

13:08:47.533 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(297672317157795840, 2, 1, '3', '213', ['2', '1', '3'], {'213'}, {'213': '213'}, {213: '213'}, {213 : '213'});

13:08:47.534 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(297672317157795840, 3, 1, '1', '311', ['3', '1', '1'], {'311'}, {'311': '311'}, {311: '311'}, {311 : '311'});

13:08:47.535 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(297672317157795840, 3, 1, '2', '312', ['3', '1', '2'], {'312'}, {'312': '312'}, {312: '312'}, {312 : '312'});

13:08:47.536 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(297672317157795840, 3, 1, '3', '313', ['3', '1', '3'], {'313'}, {'313': '313'}, {313: '313'}, {313 : '313'});

13:08:47.537 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(297672317157795840, 4, 1, '1', '411', ['4', '1', '1'], {'411'}, {'411': '411'}, {411: '411'}, {411 : '411'});

13:08:47.541 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID dc9ab111-961e-4450-80a8-1a6e09d95721 : [SELECT * FROM achilles_embedded.entitywithcomplexindices WHERE simpleindex=:simpleindex AND clust1=:clust1 AND clust3=:clust3 ALLOW FILTERING;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [312, 3, 2]
	 Encoded bound values : [312, 3, 2]
13:08:47.547 [achilles-default-executor-52] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), clust1(int), clust2(int), clust3(varchar), collectionindex(list<varchar>), fullindexoncollection(set<varchar>), indexonmapentry(map<int, varchar>), indexonmapkey(map<varchar, varchar>), indexonmapvalue(map<int, varchar>), simpleindex(varchar)]]
13:08:47.548 [achilles-default-executor-52] DEBUG ACHILLES_DML_STATEMENT - Query ID dc9ab111-961e-4450-80a8-1a6e09d95721 results : 
	id: 297672317157795840, clust1: 3, clust2: 1, clust3: 2, collectionindex: [3, 1, 2], fullindexoncollection: [312], indexonmapentry: {312=312}, indexonmapkey: {312=312}, indexonmapvalue: {312=312}, simpleindex: 312

13:08:47.548 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:08:47.613 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:47.618 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithcomplexindices(
		id bigint,
		clust1 int,
		clust2 int,
		clust3 text,
		collectionindex list<text>,
		fullindexoncollection frozen<set<text>>,
		indexonmapentry map<int, text>,
		indexonmapkey map<text, text>,
		indexonmapvalue map<int, text>,
		simpleindex text,
		PRIMARY KEY(id, clust1, clust2, clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, clust2 ASC, clust3 ASC);

13:08:47.619 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS collectionindex_index ON achilles_embedded.entitywithcomplexindices ( collectionindex );

13:08:47.620 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS fullindexoncollection_index ON achilles_embedded.entitywithcomplexindices ( FULL(fullindexoncollection) );

13:08:47.620 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapentry_index ON achilles_embedded.entitywithcomplexindices ( ENTRIES(indexonmapentry) );

13:08:47.621 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapkey_index ON achilles_embedded.entitywithcomplexindices ( KEYS(indexonmapkey) );

13:08:47.622 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapvalue_index ON achilles_embedded.entitywithcomplexindices ( indexonmapvalue );

13:08:47.622 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS simpleindex_index ON achilles_embedded.entitywithcomplexindices ( simpleindex );

13:08:47.623 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:08:47.709 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6915420436103890944, 1, 1, '1', '111', ['1', '1', '1'], {'111'}, {'111': '111'}, {111: '111'}, {111 : '111'});

13:08:47.712 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6915420436103890944, 1, 1, '2', '112', ['1', '1', '2'], {'112'}, {'112': '112'}, {112: '112'}, {112 : '112'});

13:08:47.715 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6915420436103890944, 1, 1, '3', '113', ['1', '1', '3'], {'113'}, {'113': '113'}, {113: '113'}, {113 : '113'});

13:08:47.717 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6915420436103890944, 2, 1, '1', '211', ['2', '1', '1'], {'211'}, {'211': '211'}, {211: '211'}, {211 : '211'});

13:08:47.722 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6915420436103890944, 2, 1, '2', '212', ['2', '1', '2'], {'212'}, {'212': '212'}, {212: '212'}, {212 : '212'});

13:08:47.724 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6915420436103890944, 2, 1, '3', '213', ['2', '1', '3'], {'213'}, {'213': '213'}, {213: '213'}, {213 : '213'});

13:08:47.725 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6915420436103890944, 3, 1, '1', '311', ['3', '1', '1'], {'311'}, {'311': '311'}, {311: '311'}, {311 : '311'});

13:08:47.726 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6915420436103890944, 3, 1, '2', '312', ['3', '1', '2'], {'312'}, {'312': '312'}, {312: '312'}, {312 : '312'});

13:08:47.727 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6915420436103890944, 3, 1, '3', '313', ['3', '1', '3'], {'313'}, {'313': '313'}, {313: '313'}, {313 : '313'});

13:08:47.728 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6915420436103890944, 4, 1, '1', '411', ['4', '1', '1'], {'411'}, {'411': '411'}, {411: '411'}, {411 : '411'});

13:08:47.731 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID abc5823b-3979-4ffd-b882-2f0572ed0aaa : [SELECT * FROM achilles_embedded.entitywithcomplexindices WHERE simpleindex=:simpleindex AND id=:id ALLOW FILTERING;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [313, 6915420436103890944]
	 Encoded bound values : [313, 6915420436103890944]
13:08:47.735 [achilles-default-executor-53] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), clust1(int), clust2(int), clust3(varchar), collectionindex(list<varchar>), fullindexoncollection(set<varchar>), indexonmapentry(map<int, varchar>), indexonmapkey(map<varchar, varchar>), indexonmapvalue(map<int, varchar>), simpleindex(varchar)]]
13:08:47.735 [achilles-default-executor-53] DEBUG ACHILLES_DML_STATEMENT - Query ID abc5823b-3979-4ffd-b882-2f0572ed0aaa results : 
	id: 6915420436103890944, clust1: 3, clust2: 1, clust3: 3, collectionindex: [3, 1, 3], fullindexoncollection: [313], indexonmapentry: {313=313}, indexonmapkey: {313=313}, indexonmapvalue: {313=313}, simpleindex: 313

13:08:47.736 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:08:47.809 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:47.815 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithcomplexindices(
		id bigint,
		clust1 int,
		clust2 int,
		clust3 text,
		collectionindex list<text>,
		fullindexoncollection frozen<set<text>>,
		indexonmapentry map<int, text>,
		indexonmapkey map<text, text>,
		indexonmapvalue map<int, text>,
		simpleindex text,
		PRIMARY KEY(id, clust1, clust2, clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, clust2 ASC, clust3 ASC);

13:08:47.818 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS collectionindex_index ON achilles_embedded.entitywithcomplexindices ( collectionindex );

13:08:47.819 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS fullindexoncollection_index ON achilles_embedded.entitywithcomplexindices ( FULL(fullindexoncollection) );

13:08:47.820 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapentry_index ON achilles_embedded.entitywithcomplexindices ( ENTRIES(indexonmapentry) );

13:08:47.820 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapkey_index ON achilles_embedded.entitywithcomplexindices ( KEYS(indexonmapkey) );

13:08:47.821 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapvalue_index ON achilles_embedded.entitywithcomplexindices ( indexonmapvalue );

13:08:47.821 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS simpleindex_index ON achilles_embedded.entitywithcomplexindices ( simpleindex );

13:08:47.822 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:08:47.886 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7053034456272568320, 1, 1, '1', '111', ['1', '1', '1'], {'111'}, {'111': '111'}, {111: '111'}, {111 : '111'});

13:08:47.888 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7053034456272568320, 1, 1, '2', '112', ['1', '1', '2'], {'112'}, {'112': '112'}, {112: '112'}, {112 : '112'});

13:08:47.890 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7053034456272568320, 1, 1, '3', '113', ['1', '1', '3'], {'113'}, {'113': '113'}, {113: '113'}, {113 : '113'});

13:08:47.891 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7053034456272568320, 2, 1, '1', '211', ['2', '1', '1'], {'211'}, {'211': '211'}, {211: '211'}, {211 : '211'});

13:08:47.892 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7053034456272568320, 2, 1, '2', '212', ['2', '1', '2'], {'212'}, {'212': '212'}, {212: '212'}, {212 : '212'});

13:08:47.894 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7053034456272568320, 2, 1, '3', '213', ['2', '1', '3'], {'213'}, {'213': '213'}, {213: '213'}, {213 : '213'});

13:08:47.895 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7053034456272568320, 3, 1, '1', '311', ['3', '1', '1'], {'311'}, {'311': '311'}, {311: '311'}, {311 : '311'});

13:08:47.896 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7053034456272568320, 3, 1, '2', '312', ['3', '1', '2'], {'312'}, {'312': '312'}, {312: '312'}, {312 : '312'});

13:08:47.897 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7053034456272568320, 3, 1, '3', '313', ['3', '1', '3'], {'313'}, {'313': '313'}, {313: '313'}, {313 : '313'});

13:08:47.898 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7053034456272568320, 4, 1, '1', '411', ['4', '1', '1'], {'411'}, {'411': '411'}, {411: '411'}, {411 : '411'});

13:08:47.902 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 2db53205-5cab-43e5-a0f5-bb3bcc1eb7ac : [SELECT * FROM achilles_embedded.entitywithcomplexindices WHERE simpleindex=:simpleindex AND clust1>=:clust1 ALLOW FILTERING;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [312, 5]
	 Encoded bound values : [312, 5]
13:08:47.908 [achilles-default-executor-54] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: true, Columns[id(bigint), clust1(int), clust2(int), clust3(varchar), collectionindex(list<varchar>), fullindexoncollection(set<varchar>), indexonmapentry(map<int, varchar>), indexonmapkey(map<varchar, varchar>), indexonmapvalue(map<int, varchar>), simpleindex(varchar)]]
13:08:47.908 [achilles-default-executor-54] DEBUG ACHILLES_DML_STATEMENT - Query ID 2db53205-5cab-43e5-a0f5-bb3bcc1eb7ac results : 

13:08:47.908 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:08:47.982 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:47.987 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithcomplexindices(
		id bigint,
		clust1 int,
		clust2 int,
		clust3 text,
		collectionindex list<text>,
		fullindexoncollection frozen<set<text>>,
		indexonmapentry map<int, text>,
		indexonmapkey map<text, text>,
		indexonmapvalue map<int, text>,
		simpleindex text,
		PRIMARY KEY(id, clust1, clust2, clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, clust2 ASC, clust3 ASC);

13:08:47.989 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS collectionindex_index ON achilles_embedded.entitywithcomplexindices ( collectionindex );

13:08:47.989 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS fullindexoncollection_index ON achilles_embedded.entitywithcomplexindices ( FULL(fullindexoncollection) );

13:08:47.990 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapentry_index ON achilles_embedded.entitywithcomplexindices ( ENTRIES(indexonmapentry) );

13:08:47.991 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapkey_index ON achilles_embedded.entitywithcomplexindices ( KEYS(indexonmapkey) );

13:08:47.991 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapvalue_index ON achilles_embedded.entitywithcomplexindices ( indexonmapvalue );

13:08:47.992 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS simpleindex_index ON achilles_embedded.entitywithcomplexindices ( simpleindex );

13:08:47.993 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:08:48.062 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7421385944419212288, 1, 1, '1', '111', ['1', '1', '1'], {'111'}, {'111': '111'}, {111: '111'}, {111 : '111'});

13:08:48.064 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7421385944419212288, 1, 1, '2', '112', ['1', '1', '2'], {'112'}, {'112': '112'}, {112: '112'}, {112 : '112'});

13:08:48.067 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7421385944419212288, 1, 1, '3', '113', ['1', '1', '3'], {'113'}, {'113': '113'}, {113: '113'}, {113 : '113'});

13:08:48.071 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7421385944419212288, 2, 1, '1', '211', ['2', '1', '1'], {'211'}, {'211': '211'}, {211: '211'}, {211 : '211'});

13:08:48.072 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7421385944419212288, 2, 1, '2', '212', ['2', '1', '2'], {'212'}, {'212': '212'}, {212: '212'}, {212 : '212'});

13:08:48.073 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7421385944419212288, 2, 1, '3', '213', ['2', '1', '3'], {'213'}, {'213': '213'}, {213: '213'}, {213 : '213'});

13:08:48.075 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7421385944419212288, 3, 1, '1', '311', ['3', '1', '1'], {'311'}, {'311': '311'}, {311: '311'}, {311 : '311'});

13:08:48.076 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7421385944419212288, 3, 1, '2', '312', ['3', '1', '2'], {'312'}, {'312': '312'}, {312: '312'}, {312 : '312'});

13:08:48.077 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7421385944419212288, 3, 1, '3', '313', ['3', '1', '3'], {'313'}, {'313': '313'}, {313: '313'}, {313 : '313'});

13:08:48.078 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7421385944419212288, 4, 1, '1', '411', ['4', '1', '1'], {'411'}, {'411': '411'}, {411: '411'}, {411 : '411'});

13:08:48.081 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 1b080232-f10f-406e-a745-36f9caa8dfdf : [SELECT * FROM achilles_embedded.entitywithcomplexindices WHERE simpleindex=:simpleindex ALLOW FILTERING;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [313]
	 Encoded bound values : [313]
13:08:48.086 [achilles-default-executor-55] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), clust1(int), clust2(int), clust3(varchar), collectionindex(list<varchar>), fullindexoncollection(set<varchar>), indexonmapentry(map<int, varchar>), indexonmapkey(map<varchar, varchar>), indexonmapvalue(map<int, varchar>), simpleindex(varchar)]]
13:08:48.087 [achilles-default-executor-55] DEBUG ACHILLES_DML_STATEMENT - Query ID 1b080232-f10f-406e-a745-36f9caa8dfdf results : 
	id: 7421385944419212288, clust1: 3, clust2: 1, clust3: 3, collectionindex: [3, 1, 3], fullindexoncollection: [313], indexonmapentry: {313=313}, indexonmapkey: {313=313}, indexonmapvalue: {313=313}, simpleindex: 313

13:08:48.088 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:08:48.150 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:48.155 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithcomplexindices(
		id bigint,
		clust1 int,
		clust2 int,
		clust3 text,
		collectionindex list<text>,
		fullindexoncollection frozen<set<text>>,
		indexonmapentry map<int, text>,
		indexonmapkey map<text, text>,
		indexonmapvalue map<int, text>,
		simpleindex text,
		PRIMARY KEY(id, clust1, clust2, clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, clust2 ASC, clust3 ASC);

13:08:48.156 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS collectionindex_index ON achilles_embedded.entitywithcomplexindices ( collectionindex );

13:08:48.156 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS fullindexoncollection_index ON achilles_embedded.entitywithcomplexindices ( FULL(fullindexoncollection) );

13:08:48.157 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapentry_index ON achilles_embedded.entitywithcomplexindices ( ENTRIES(indexonmapentry) );

13:08:48.157 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapkey_index ON achilles_embedded.entitywithcomplexindices ( KEYS(indexonmapkey) );

13:08:48.158 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapvalue_index ON achilles_embedded.entitywithcomplexindices ( indexonmapvalue );

13:08:48.158 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS simpleindex_index ON achilles_embedded.entitywithcomplexindices ( simpleindex );

13:08:48.159 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:08:48.238 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(103589580974182400, 1, 1, '1', '111', ['1', '1', '1'], {'111'}, {'111': '111'}, {111: '111'}, {111 : '111'});

13:08:48.242 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(103589580974182400, 1, 1, '2', '112', ['1', '1', '2'], {'112'}, {'112': '112'}, {112: '112'}, {112 : '112'});

13:08:48.243 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(103589580974182400, 1, 1, '3', '113', ['1', '1', '3'], {'113'}, {'113': '113'}, {113: '113'}, {113 : '113'});

13:08:48.244 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(103589580974182400, 2, 1, '1', '211', ['2', '1', '1'], {'211'}, {'211': '211'}, {211: '211'}, {211 : '211'});

13:08:48.245 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(103589580974182400, 2, 1, '2', '212', ['2', '1', '2'], {'212'}, {'212': '212'}, {212: '212'}, {212 : '212'});

13:08:48.248 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(103589580974182400, 2, 1, '3', '213', ['2', '1', '3'], {'213'}, {'213': '213'}, {213: '213'}, {213 : '213'});

13:08:48.249 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(103589580974182400, 3, 1, '1', '311', ['3', '1', '1'], {'311'}, {'311': '311'}, {311: '311'}, {311 : '311'});

13:08:48.250 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(103589580974182400, 3, 1, '2', '312', ['3', '1', '2'], {'312'}, {'312': '312'}, {312: '312'}, {312 : '312'});

13:08:48.251 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(103589580974182400, 3, 1, '3', '313', ['3', '1', '3'], {'313'}, {'313': '313'}, {313: '313'}, {313 : '313'});

13:08:48.252 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(103589580974182400, 4, 1, '1', '411', ['4', '1', '1'], {'411'}, {'411': '411'}, {411: '411'}, {411 : '411'});

13:08:48.256 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 344ba4d5-465d-4f0d-b0c9-1c2e0db3482e : [SELECT * FROM achilles_embedded.entitywithcomplexindices WHERE indexonmapkey CONTAINS KEY :indexonmapkey ALLOW FILTERING;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [312]
	 Encoded bound values : [312]
13:08:48.258 [achilles-default-executor-56] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), clust1(int), clust2(int), clust3(varchar), collectionindex(list<varchar>), fullindexoncollection(set<varchar>), indexonmapentry(map<int, varchar>), indexonmapkey(map<varchar, varchar>), indexonmapvalue(map<int, varchar>), simpleindex(varchar)]]
13:08:48.258 [achilles-default-executor-56] DEBUG ACHILLES_DML_STATEMENT - Query ID 344ba4d5-465d-4f0d-b0c9-1c2e0db3482e results : 
	id: 103589580974182400, clust1: 3, clust2: 1, clust3: 2, collectionindex: [3, 1, 2], fullindexoncollection: [312], indexonmapentry: {312=312}, indexonmapkey: {312=312}, indexonmapvalue: {312=312}, simpleindex: 312

13:08:48.259 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:08:48.325 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:48.331 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithcomplexindices(
		id bigint,
		clust1 int,
		clust2 int,
		clust3 text,
		collectionindex list<text>,
		fullindexoncollection frozen<set<text>>,
		indexonmapentry map<int, text>,
		indexonmapkey map<text, text>,
		indexonmapvalue map<int, text>,
		simpleindex text,
		PRIMARY KEY(id, clust1, clust2, clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, clust2 ASC, clust3 ASC);

13:08:48.335 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS collectionindex_index ON achilles_embedded.entitywithcomplexindices ( collectionindex );

13:08:48.335 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS fullindexoncollection_index ON achilles_embedded.entitywithcomplexindices ( FULL(fullindexoncollection) );

13:08:48.336 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapentry_index ON achilles_embedded.entitywithcomplexindices ( ENTRIES(indexonmapentry) );

13:08:48.336 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapkey_index ON achilles_embedded.entitywithcomplexindices ( KEYS(indexonmapkey) );

13:08:48.337 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapvalue_index ON achilles_embedded.entitywithcomplexindices ( indexonmapvalue );

13:08:48.337 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS simpleindex_index ON achilles_embedded.entitywithcomplexindices ( simpleindex );

13:08:48.338 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:08:48.400 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(3329221923907694592, 1, 1, '1', '111', ['1', '1', '1'], {'111'}, {'111': '111'}, {111: '111'}, {111 : '111'});

13:08:48.403 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(3329221923907694592, 1, 1, '2', '112', ['1', '1', '2'], {'112'}, {'112': '112'}, {112: '112'}, {112 : '112'});

13:08:48.404 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(3329221923907694592, 1, 1, '3', '113', ['1', '1', '3'], {'113'}, {'113': '113'}, {113: '113'}, {113 : '113'});

13:08:48.406 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(3329221923907694592, 2, 1, '1', '211', ['2', '1', '1'], {'211'}, {'211': '211'}, {211: '211'}, {211 : '211'});

13:08:48.407 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(3329221923907694592, 2, 1, '2', '212', ['2', '1', '2'], {'212'}, {'212': '212'}, {212: '212'}, {212 : '212'});

13:08:48.408 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(3329221923907694592, 2, 1, '3', '213', ['2', '1', '3'], {'213'}, {'213': '213'}, {213: '213'}, {213 : '213'});

13:08:48.409 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(3329221923907694592, 3, 1, '1', '311', ['3', '1', '1'], {'311'}, {'311': '311'}, {311: '311'}, {311 : '311'});

13:08:48.410 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(3329221923907694592, 3, 1, '2', '312', ['3', '1', '2'], {'312'}, {'312': '312'}, {312: '312'}, {312 : '312'});

13:08:48.411 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(3329221923907694592, 3, 1, '3', '313', ['3', '1', '3'], {'313'}, {'313': '313'}, {313: '313'}, {313 : '313'});

13:08:48.412 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(3329221923907694592, 4, 1, '1', '411', ['4', '1', '1'], {'411'}, {'411': '411'}, {411: '411'}, {411 : '411'});

13:08:48.416 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID cc4135ec-3141-4ae7-8666-7c0abb755c17 : [SELECT * FROM achilles_embedded.entitywithcomplexindices WHERE indexonmapvalue CONTAINS :indexonmapvalue ALLOW FILTERING;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [211]
	 Encoded bound values : [211]
13:08:48.418 [achilles-default-executor-57] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), clust1(int), clust2(int), clust3(varchar), collectionindex(list<varchar>), fullindexoncollection(set<varchar>), indexonmapentry(map<int, varchar>), indexonmapkey(map<varchar, varchar>), indexonmapvalue(map<int, varchar>), simpleindex(varchar)]]
13:08:48.418 [achilles-default-executor-57] DEBUG ACHILLES_DML_STATEMENT - Query ID cc4135ec-3141-4ae7-8666-7c0abb755c17 results : 
	id: 3329221923907694592, clust1: 2, clust2: 1, clust3: 1, collectionindex: [2, 1, 1], fullindexoncollection: [211], indexonmapentry: {211=211}, indexonmapkey: {211=211}, indexonmapvalue: {211=211}, simpleindex: 211

13:08:48.419 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:08:48.498 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS my_static_keyspace WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:48.513 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS my_static_keyspace.entity_static_annotations(
		partition_key bigint,
		"overRiden" text,
		value text,
		PRIMARY KEY(partition_key))
	WITH default_time_to_live = 1;

13:08:48.738 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE my_static_keyspace.entity_static_annotations
13:08:48.811 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 00645209-3000-43ce-8082-74993fb6e47e : [INSERT INTO my_static_keyspace.entity_static_annotations (partition_key,"overRiden",value) VALUES (:partition_key,:"overRiden",:value) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [591470112327162880, overriden_val, new_val, 1]
	 Encoded bound values : [591470112327162880, overriden_val, new_val, 1]
13:08:48.816 [main] WARN  i.a.a.i.TestEntityWithStaticAnnotations - Waiting for 1 sec to allow TTL data to expire 
13:08:49.818 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE my_static_keyspace.entity_static_annotations
13:08:49.882 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS my_static_keyspace WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:49.893 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS my_static_keyspace.entity_static_annotations(
		partition_key bigint,
		"overRiden" text,
		value text,
		PRIMARY KEY(partition_key))
	WITH default_time_to_live = 1;

13:08:49.894 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE my_static_keyspace.entity_static_annotations
13:08:49.968 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 09146fcf-6303-45bc-a8ab-5db70b654eda : [INSERT INTO my_static_keyspace.entity_static_annotations (partition_key,"overRiden",value) VALUES (:partition_key,:"overRiden",:value) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [5375249002309788672, overriden_val, new_val, 1000]
	 Encoded bound values : [5375249002309788672, overriden_val, new_val, 1000]
13:08:49.971 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID c4d083ef-c957-4a87-81e4-ac19ef2a1314 : [SELECT partition_key,"overRiden",value FROM my_static_keyspace.entity_static_annotations WHERE partition_key=:partition_key;] with CONSISTENCY LEVEL [LOCAL_QUORUM]
	 Java bound values : [5375249002309788672]
	 Encoded bound values : [5375249002309788672]
13:08:49.975 [achilles-default-executor-60] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[partition_key(bigint), overRiden(varchar), value(varchar)]]
13:08:49.975 [achilles-default-executor-60] DEBUG ACHILLES_DML_STATEMENT - Query ID c4d083ef-c957-4a87-81e4-ac19ef2a1314 results : 
	partition_key: 5375249002309788672, overRiden: overriden_val, value: new_val

13:08:49.978 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE my_static_keyspace.entity_static_annotations
13:08:50.049 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS my_static_keyspace WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:50.059 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS my_static_keyspace.entity_static_annotations(
		partition_key bigint,
		"overRiden" text,
		value text,
		PRIMARY KEY(partition_key))
	WITH default_time_to_live = 1;

13:08:50.060 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE my_static_keyspace.entity_static_annotations
13:08:50.123 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 11f13215-63b2-4ce1-9db5-45b8caed29a9 : [INSERT INTO my_static_keyspace.entity_static_annotations (partition_key,"overRiden",value) VALUES (:partition_key,:"overRiden",:value) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [3745104424662191104, overriden_val, val, 1000]
	 Encoded bound values : [3745104424662191104, overriden_val, val, 1000]
13:08:50.125 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID e684b34d-5d44-4fe9-bd58-06214efe4738 : [INSERT INTO my_static_keyspace.entity_static_annotations (partition_key,"overRiden",value) VALUES (:partition_key,:"overRiden",:value) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [3745104424662191104, null, new_val, 1000]
	 Encoded bound values : [3745104424662191104, null, new_val, 1000]
13:08:50.128 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE my_static_keyspace.entity_static_annotations
13:08:50.200 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS my_static_keyspace WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:50.211 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS my_static_keyspace.entity_static_annotations(
		partition_key bigint,
		"overRiden" text,
		value text,
		PRIMARY KEY(partition_key))
	WITH default_time_to_live = 1;

13:08:50.213 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE my_static_keyspace.entity_static_annotations
13:08:50.284 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 7f64ee3b-e087-4b1d-8036-0193e6e94dda : [INSERT INTO my_static_keyspace.entity_static_annotations (partition_key,"overRiden",value) VALUES (:partition_key,:"overRiden",:value) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_QUORUM]
	 Java bound values : [650395449950966784, overriden_val, new_val, 10]
	 Encoded bound values : [650395449950966784, overriden_val, new_val, 10]
13:08:50.286 [main] WARN  i.a.a.i.TestEntityWithStaticAnnotations - Waiting for 1 sec to allow TTL data to expire 
13:08:51.289 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE my_static_keyspace.entity_static_annotations
13:08:51.351 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:51.358 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.index_on_clustering(
		partition bigint,
		clustering int,
		value text,
		PRIMARY KEY(partition, clustering))
	WITH CLUSTERING ORDER BY(clustering ASC);

13:08:51.598 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS clustering_index ON achilles_embedded.index_on_clustering ( clustering );

13:08:51.893 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.index_on_clustering
13:08:51.966 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.index_on_clustering(partition, clustering, value) VALUES(1, 1, 'val11');

13:08:51.968 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.index_on_clustering(partition, clustering, value) VALUES(1, 2, 'val12');

13:08:51.969 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.index_on_clustering(partition, clustering, value) VALUES(1, 3, 'val13');

13:08:51.970 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.index_on_clustering(partition, clustering, value) VALUES(2, 1, 'val21');

13:08:51.971 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.index_on_clustering(partition, clustering, value) VALUES(2, 2, 'val22');

13:08:51.971 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.index_on_clustering(partition, clustering, value) VALUES(3, 1, 'val31');

13:08:51.972 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.index_on_clustering(partition, clustering, value) VALUES(3, 2, 'val32');

13:08:51.977 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 4e944fbc-c688-498e-a994-c3809d9c39b0 : [SELECT * FROM achilles_embedded.index_on_clustering WHERE clustering=:clustering ALLOW FILTERING;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [1]
	 Encoded bound values : [1]
13:08:51.989 [achilles-default-executor-64] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[partition(bigint), clustering(int), value(varchar)]]
13:08:51.989 [achilles-default-executor-64] DEBUG ACHILLES_DML_STATEMENT - Query ID 4e944fbc-c688-498e-a994-c3809d9c39b0 results : 
	partition: 2, clustering: 1, value: val21
	partition: 3, clustering: 1, value: val31
	partition: 1, clustering: 1, value: val11

13:08:51.990 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.index_on_clustering
13:08:52.065 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:52.079 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:52.086 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:08:52.319 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:08:52.388 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(6367309196274144256, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:08:52.396 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID cd00573d-b9e6-4cf3-940f-14b9d7024a36 : [UPDATE achilles_embedded.simple USING TTL :ttl SET value=:value WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [6367309196274144256, Wed Sep 30 19:00:00 CDT 2015, null, null, null, preUpdate_value, 0]
	 Encoded bound values : [6367309196274144256, Wed Sep 30 19:00:00 CDT 2015, null, null, null, preUpdate_value, 0]
13:08:52.414 [achilles-default-executor-65] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID cd00573d-b9e6-4cf3-940f-14b9d7024a36 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 4324                     | Native-Transport-Requests-2
Adding to simple memtable                                                        | /127.0.0.1       | 4590                     | MutationStage-3     
****************************


13:08:52.415 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:08:52.487 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:52.492 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:08:52.493 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:08:52.567 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(999807001414814720, '2015-10-01 00:00:00+0000', ['ONE'], {1.0}, {1: 'one'}, 'id - date1');

13:08:52.569 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(999807001414814720, '2015-10-02 00:00:00+0000', ['TWO'], {2.0}, {2: 'two'}, 'id - date2');

13:08:52.570 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(999807001414814720, '2015-10-03 00:00:00+0000', ['THREE'], {3.0}, {3: 'three'}, 'id - date3');

13:08:52.571 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(999807001414814720, '2015-10-04 00:00:00+0000', ['QUORUM'], {4.0}, {4: 'four'}, 'id - date4');

13:08:52.573 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(999807001414814720, '2015-10-05 00:00:00+0000', ['ALL'], {5.0}, {5: 'five'}, 'id - date5');

13:08:52.574 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(999807001414814720, '2015-10-06 00:00:00+0000', ['LOCAL_ONE'], {6.0}, {6: 'six'}, 'id - date6');

13:08:52.575 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(999807001414814720, '2015-10-07 00:00:00+0000', ['LOCAL_QUORUM'], {7.0}, {7: 'seven'}, 'id - date7');

13:08:52.580 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(999807001414814720, '2015-10-08 00:00:00+0000', ['EACH_QUORUM'], {8.0}, {8: 'eight'}, 'id - date8');

13:08:52.581 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(999807001414814720, '2015-10-09 00:00:00+0000', ['SERIAL'], {9.0}, {9: 'nine'}, 'id - date9');

13:08:52.588 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 80f99827-0ea6-40c8-9705-c05eeaf1203e : [SELECT consistencylist,simpleset,simplemap,value,simplemap FROM achilles_embedded.simple WHERE id=:id AND date>=:date_Lt AND date<:date_Lt;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [999807001414814720, Wed Sep 30 19:00:00 CDT 2015, Thu Oct 08 19:00:00 CDT 2015]
	 Encoded bound values : [999807001414814720, Wed Sep 30 19:00:00 CDT 2015, Thu Oct 08 19:00:00 CDT 2015]
13:08:52.597 [achilles-default-executor-66] DEBUG i.a.a.i.entities.SimpleEntity - ResultSet[ exhausted: false, Columns[consistencylist(list<varchar>), simpleset(set<double>), simplemap(map<int, varchar>), value(varchar), simplemap(map<int, varchar>)]]
13:08:52.599 [achilles-default-executor-66] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 80f99827-0ea6-40c8-9705-c05eeaf1203e results : 
	consistencylist: [ONE], simpleset: [1.0], simplemap: {1=one}, value: id - date1, simplemap: {1=one}
	consistencylist: [TWO], simpleset: [2.0], simplemap: {2=two}, value: id - date2, simplemap: {2=two}
	consistencylist: [THREE], simpleset: [3.0], simplemap: {3=three}, value: id - date3, simplemap: {3=three}
	consistencylist: [QUORUM], simpleset: [4.0], simplemap: {4=four}, value: id - date4, simplemap: {4=four}
	consistencylist: [ALL], simpleset: [5.0], simplemap: {5=five}, value: id - date5, simplemap: {5=five}
	consistencylist: [LOCAL_ONE], simpleset: [6.0], simplemap: {6=six}, value: id - date6, simplemap: {6=six}
	consistencylist: [LOCAL_QUORUM], simpleset: [7.0], simplemap: {7=seven}, value: id - date7, simplemap: {7=seven}
	consistencylist: [EACH_QUORUM], simpleset: [8.0], simplemap: {8=eight}, value: id - date8, simplemap: {8=eight}

13:08:52.601 [achilles-default-executor-66] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 80f99827-0ea6-40c8-9705-c05eeaf1203e at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Executing single-partition query on simple                                       | /127.0.0.1       | 756                      | ReadStage-3         
Acquiring sstable references                                                     | /127.0.0.1       | 830                      | ReadStage-3         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 922                      | ReadStage-3         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 1128                     | ReadStage-3         
Read 8 live rows and 0 tombstone cells                                           | /127.0.0.1       | 1198                     | ReadStage-3         
****************************


13:08:52.604 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:08:52.667 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:52.671 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:08:52.673 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:08:52.761 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 508ca6e0-b853-4a9b-85dc-16631f69ac21 : [INSERT INTO achilles_embedded.simple (id,date,consistencylist,simplemap,simpleset,value) VALUES (:id,:date,:consistencylist,:simplemap,:simpleset,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [7042802829143759872, Sun Oct 10 13:08:52 CDT 2021, null, null, null, preInsert_value, 0]
	 Encoded bound values : [7042802829143759872, Sun Oct 10 13:08:52 CDT 2021, null, null, null, preInsert_value, 0]
13:08:52.767 [achilles-default-executor-67] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 508ca6e0-b853-4a9b-85dc-16631f69ac21 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 297                      | Native-Transport-Requests-1
Adding to simple memtable                                                        | /127.0.0.1       | 825                      | MutationStage-2     
****************************


13:08:52.768 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:08:52.842 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:52.847 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:08:52.848 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:08:52.911 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(6123969307059341312, '2015-10-01 00:00:00+0000', ['ONE'], {1.0}, {1: 'one'}, 'id - date1');

13:08:52.913 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(6123969307059341312, '2015-10-02 00:00:00+0000', ['TWO'], {2.0}, {2: 'two'}, 'id - date2');

13:08:52.914 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(6123969307059341312, '2015-10-03 00:00:00+0000', ['THREE'], {3.0}, {3: 'three'}, 'id - date3');

13:08:52.915 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(6123969307059341312, '2015-10-04 00:00:00+0000', ['QUORUM'], {4.0}, {4: 'four'}, 'id - date4');

13:08:52.916 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(6123969307059341312, '2015-10-05 00:00:00+0000', ['ALL'], {5.0}, {5: 'five'}, 'id - date5');

13:08:52.918 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(6123969307059341312, '2015-10-06 00:00:00+0000', ['LOCAL_ONE'], {6.0}, {6: 'six'}, 'id - date6');

13:08:52.919 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(6123969307059341312, '2015-10-07 00:00:00+0000', ['LOCAL_QUORUM'], {7.0}, {7: 'seven'}, 'id - date7');

13:08:52.920 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(6123969307059341312, '2015-10-08 00:00:00+0000', ['EACH_QUORUM'], {8.0}, {8: 'eight'}, 'id - date8');

13:08:52.921 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(6123969307059341312, '2015-10-09 00:00:00+0000', ['SERIAL'], {9.0}, {9: 'nine'}, 'id - date9');

13:08:52.922 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 280646ec-8066-4bea-b1d8-f56e1c10aa07 : [SELECT consistencylist,simpleset,simplemap,value,simplemap FROM achilles_embedded.simple WHERE id=:id AND date>=:date_Lt AND date<:date_Lt;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [6123969307059341312, Wed Sep 30 19:00:00 CDT 2015, Thu Oct 08 19:00:00 CDT 2015]
	 Encoded bound values : [6123969307059341312, Wed Sep 30 19:00:00 CDT 2015, Thu Oct 08 19:00:00 CDT 2015]
13:08:52.929 [achilles-default-executor-68] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 280646ec-8066-4bea-b1d8-f56e1c10aa07 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Executing single-partition query on simple                                       | /127.0.0.1       | 1330                     | ReadStage-2         
Acquiring sstable references                                                     | /127.0.0.1       | 1406                     | ReadStage-2         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 1487                     | ReadStage-2         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 1669                     | ReadStage-2         
Read 8 live rows and 0 tombstone cells                                           | /127.0.0.1       | 1719                     | ReadStage-2         
****************************


13:08:52.929 [main] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 280646ec-8066-4bea-b1d8-f56e1c10aa07 row : 
	consistencylist: [ONE], simpleset: [1.0], simplemap: {1=one}, value: id - date1, simplemap: {1=one}

13:08:52.930 [main] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 280646ec-8066-4bea-b1d8-f56e1c10aa07 row : 
	consistencylist: [TWO], simpleset: [2.0], simplemap: {2=two}, value: id - date2, simplemap: {2=two}

13:08:52.930 [main] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 280646ec-8066-4bea-b1d8-f56e1c10aa07 row : 
	consistencylist: [THREE], simpleset: [3.0], simplemap: {3=three}, value: id - date3, simplemap: {3=three}

13:08:52.930 [main] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 280646ec-8066-4bea-b1d8-f56e1c10aa07 row : 
	consistencylist: [QUORUM], simpleset: [4.0], simplemap: {4=four}, value: id - date4, simplemap: {4=four}

13:08:52.930 [main] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 280646ec-8066-4bea-b1d8-f56e1c10aa07 row : 
	consistencylist: [ALL], simpleset: [5.0], simplemap: {5=five}, value: id - date5, simplemap: {5=five}

13:08:52.930 [main] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 280646ec-8066-4bea-b1d8-f56e1c10aa07 row : 
	consistencylist: [LOCAL_ONE], simpleset: [6.0], simplemap: {6=six}, value: id - date6, simplemap: {6=six}

13:08:52.931 [main] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 280646ec-8066-4bea-b1d8-f56e1c10aa07 row : 
	consistencylist: [LOCAL_QUORUM], simpleset: [7.0], simplemap: {7=seven}, value: id - date7, simplemap: {7=seven}

13:08:52.931 [main] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 280646ec-8066-4bea-b1d8-f56e1c10aa07 row : 
	consistencylist: [EACH_QUORUM], simpleset: [8.0], simplemap: {8=eight}, value: id - date8, simplemap: {8=eight}

13:08:52.931 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:08:53.007 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:53.011 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:08:53.013 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:08:53.100 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(5426856133340009472, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:08:53.102 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID aa0d6041-a433-40fe-b8fd-96a0351864f8 : [DELETE FROM achilles_embedded.simple WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [5426856133340009472, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [5426856133340009472, Wed Sep 30 19:00:00 CDT 2015]
13:08:53.112 [achilles-default-executor-69] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID aa0d6041-a433-40fe-b8fd-96a0351864f8 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 226                      | Native-Transport-Requests-1
Adding to simple memtable                                                        | /127.0.0.1       | 338                      | MutationStage-3     
****************************


13:08:53.112 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:08:53.176 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:53.180 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:08:53.181 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:08:53.253 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(8553712417240714240, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:08:53.255 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 46a41f8f-42b7-4a15-9464-216ee37c1bf3 : [SELECT id,date,consistencylist,simplemap,simpleset,value FROM achilles_embedded.simple WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [8553712417240714240, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [8553712417240714240, Wed Sep 30 19:00:00 CDT 2015]
13:08:53.257 [achilles-default-executor-70] DEBUG i.a.a.i.entities.SimpleEntity - ResultSet[ exhausted: false, Columns[id(bigint), date(timestamp), consistencylist(list<varchar>), simplemap(map<int, varchar>), simpleset(set<double>), value(varchar)]]
13:08:53.258 [achilles-default-executor-70] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 46a41f8f-42b7-4a15-9464-216ee37c1bf3 results : 
	id: 8553712417240714240, date: Wed Sep 30 19:00:00 CDT 2015, consistencylist: [QUORUM, LOCAL_ONE], simplemap: {10=ten, 20=twenty}, simpleset: [1.0, 2.0], value: 0 AM

13:08:53.260 [achilles-default-executor-70] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 46a41f8f-42b7-4a15-9464-216ee37c1bf3 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Executing single-partition query on simple                                       | /127.0.0.1       | 416                      | ReadStage-3         
Acquiring sstable references                                                     | /127.0.0.1       | 488                      | ReadStage-3         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 554                      | ReadStage-3         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 693                      | ReadStage-3         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 741                      | ReadStage-3         
****************************


13:08:53.262 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:08:53.333 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:53.334 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:08:53.338 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_native_collections(
		id bigint,
		doublelist list<double>,
		longlist list<bigint>,
		mapintlong map<int, bigint>,
		tuple2 frozen<tuple<list<int>, list<double>>>,
		PRIMARY KEY(id));

13:08:53.575 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_native_collections
13:08:53.639 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 7ba94f2c-e14f-4480-9ce9-c79bce69bdd5 : [INSERT INTO achilles_embedded.entity_with_native_collections (id,doublelist,longlist,mapintlong,tuple2) VALUES (:id,:doublelist,:longlist,:mapintlong,:tuple2) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [1857584679303448576, [1.0, 2.0], [1, 2], {1=1, 2=2}, Tuple2{_1=[1, 2], _2=[1.0, 2.0]}, 0]
	 Encoded bound values : [1857584679303448576, [1.0, 2.0], [1, 2], {1=1, 2=2}, ([1,2],[1.0,2.0]), 0]
13:08:53.641 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_native_collections
13:08:53.704 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:53.709 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:08:53.710 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:08:53.711 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:08:53.711 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.having_nested_type(
		value text,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		nestedudt frozen<achilles_embedded.no_ks>,
		tuplewithudt frozen<tuple<int, no_ks>>);

13:08:53.712 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:08:53.713 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_nested_udt(
		id bigint,
		complexudt frozen<achilles_embedded.having_nested_type>,
		optionaludt achilles_embedded.no_ks,
		udt frozen<achilles_embedded.no_ks>,
		PRIMARY KEY(id));

13:08:53.719 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_nested_udt
13:08:53.795 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 10cd442b-5445-496f-b302-ecfe2638951e : [INSERT INTO achilles_embedded.table_with_nested_udt (id,complexudt,optionaludt,udt) VALUES (:id,:complexudt,:optionaludt,:udt) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [587760404367199232, info.archinnov.achilles.internals.entities.UDTWithNestedUDT@d775cadd, Optional[info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@3040d3ee], info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@3040d3ee, 0]
	 Encoded bound values : [587760404367199232, {value:'value',udtlist:[{id:587760404367199232,"VALUE":'udt_with_no_keyspace'}],nestedudt:{id:587760404367199232,"VALUE":'udt_with_no_keyspace'},tuplewithudt:(1,{id:587760404367199232,"VALUE":'udt_with_no_keyspace'})}, {id:587760404367199232,"VALUE":'udt_with_no_keyspace'}, {id:587760404367199232,"VALUE":'udt_with_no_keyspace'}, 0]
13:08:53.797 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 68d664e6-463c-4656-9752-ae207a1f549b : [SELECT id,complexudt,optionaludt,udt FROM achilles_embedded.table_with_nested_udt WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [587760404367199232]
	 Encoded bound values : [587760404367199232]
13:08:53.799 [achilles-default-executor-73] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), complexudt(achilles_embedded.having_nested_type), optionaludt(achilles_embedded.no_ks), udt(achilles_embedded.no_ks)]]
13:08:53.799 [achilles-default-executor-73] DEBUG ACHILLES_DML_STATEMENT - Query ID 68d664e6-463c-4656-9752-ae207a1f549b results : 
	id: 587760404367199232, complexudt: {value:'value',udtlist:[{id:587760404367199232,"VALUE":'udt_with_no_keyspace'}],nestedudt:{id:587760404367199232,"VALUE":'udt_with_no_keyspace'},tuplewithudt:(1,{id:587760404367199232,"VALUE":'udt_with_no_keyspace'})}, optionaludt: {id:587760404367199232,"VALUE":'udt_with_no_keyspace'}, udt: {id:587760404367199232,"VALUE":'udt_with_no_keyspace'}

13:08:53.800 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_nested_udt
13:08:53.861 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:53.868 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:08:53.869 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:08:53.869 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:08:53.870 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.having_nested_type(
		value text,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		nestedudt frozen<achilles_embedded.no_ks>,
		tuplewithudt frozen<tuple<int, no_ks>>);

13:08:53.870 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:08:53.871 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_nested_udt(
		id bigint,
		complexudt frozen<achilles_embedded.having_nested_type>,
		optionaludt achilles_embedded.no_ks,
		udt frozen<achilles_embedded.no_ks>,
		PRIMARY KEY(id));

13:08:53.872 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_nested_udt
13:08:53.954 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 48b47f5e-33b9-40b3-b71d-95b123344e16 : [UPDATE achilles_embedded.table_with_nested_udt SET udt=:udt WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@867581b4, 8576832010011512832]
	 Encoded bound values : [{id:8576832010011512832,"VALUE":'new_udt_value'}, 8576832010011512832]
13:08:53.955 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID db2f8d58-e0b4-48ce-9929-c8f78e34b30c : [SELECT id,complexudt,optionaludt,udt FROM achilles_embedded.table_with_nested_udt WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [8576832010011512832]
	 Encoded bound values : [8576832010011512832]
13:08:53.960 [achilles-default-executor-75] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), complexudt(achilles_embedded.having_nested_type), optionaludt(achilles_embedded.no_ks), udt(achilles_embedded.no_ks)]]
13:08:53.961 [achilles-default-executor-75] DEBUG ACHILLES_DML_STATEMENT - Query ID db2f8d58-e0b4-48ce-9929-c8f78e34b30c results : 
	id: 8576832010011512832, complexudt: null, optionaludt: null, udt: {id:8576832010011512832,"VALUE":'new_udt_value'}

13:08:53.962 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_nested_udt
13:08:54.027 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:54.032 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:08:54.033 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:08:54.034 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:08:54.034 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.having_nested_type(
		value text,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		nestedudt frozen<achilles_embedded.no_ks>,
		tuplewithudt frozen<tuple<int, no_ks>>);

13:08:54.035 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:08:54.036 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_nested_udt(
		id bigint,
		complexudt frozen<achilles_embedded.having_nested_type>,
		optionaludt achilles_embedded.no_ks,
		udt frozen<achilles_embedded.no_ks>,
		PRIMARY KEY(id));

13:08:54.038 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_nested_udt
13:08:54.099 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 87e0f7ca-469a-4e3d-b965-5f63c371e8c3 : [INSERT INTO achilles_embedded.table_with_nested_udt (id,complexudt,optionaludt,udt) VALUES (:id,:complexudt,:optionaludt,:udt) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [4278213077529750528, info.archinnov.achilles.internals.entities.UDTWithNestedUDT@a1889d76, null, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@e9d179a7, 0]
	 Encoded bound values : [4278213077529750528, {value:'value',udtlist:[{id:4278213077529750528,"VALUE":'udt_with_no_keyspace'}],nestedudt:{id:4278213077529750528,"VALUE":'udt_with_no_keyspace'},tuplewithudt:(1,{id:4278213077529750528,"VALUE":'udt_with_no_keyspace'})}, null, {id:4278213077529750528,"VALUE":'udt_with_no_keyspace'}, 0]
13:08:54.111 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 4e6845c2-4675-4adb-91b0-c25fc1bb2579 : [SELECT complexudt.value,complexudt.nestedudt."VALUE",udt."VALUE" FROM achilles_embedded.table_with_nested_udt WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [4278213077529750528]
	 Encoded bound values : [4278213077529750528]
13:08:54.114 [main] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[complexudt.value(varchar), complexudt.nestedudt.VALUE(varchar), udt.VALUE(varchar)]]
13:08:54.114 [main] DEBUG ACHILLES_DML_STATEMENT - Query ID 4e6845c2-4675-4adb-91b0-c25fc1bb2579 results : 
	complexudt.value: value, complexudt.nestedudt.VALUE: udt_with_no_keyspace, udt.VALUE: udt_with_no_keyspace

13:08:54.116 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_nested_udt
13:08:54.197 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:54.202 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:08:54.203 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:08:54.448 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:08:54.515 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:08:54.580 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:54.585 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:08:54.586 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:08:54.587 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:08:54.667 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(1838764053256994816, '2015-10-01 00:00:00+0000', ['ONE'], {1.0}, {1: 'one'}, 'id - date1');

13:08:54.669 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(1838764053256994816, '2015-10-02 00:00:00+0000', ['TWO'], {2.0}, {2: 'two'}, 'id - date2');

13:08:54.670 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(1838764053256994816, '2015-10-03 00:00:00+0000', ['THREE'], {3.0}, {3: 'three'}, 'id - date3');

13:08:54.671 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(1838764053256994816, '2015-10-04 00:00:00+0000', ['QUORUM'], {4.0}, {4: 'four'}, 'id - date4');

13:08:54.672 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(1838764053256994816, '2015-10-05 00:00:00+0000', ['ALL'], {5.0}, {5: 'five'}, 'id - date5');

13:08:54.673 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(1838764053256994816, '2015-10-06 00:00:00+0000', ['LOCAL_ONE'], {6.0}, {6: 'six'}, 'id - date6');

13:08:54.674 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(1838764053256994816, '2015-10-07 00:00:00+0000', ['LOCAL_QUORUM'], {7.0}, {7: 'seven'}, 'id - date7');

13:08:54.675 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(1838764053256994816, '2015-10-08 00:00:00+0000', ['EACH_QUORUM'], {8.0}, {8: 'eight'}, 'id - date8');

13:08:54.676 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(1838764053256994816, '2015-10-09 00:00:00+0000', ['SERIAL'], {9.0}, {9: 'nine'}, 'id - date9');

13:08:54.679 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 15b483f7-6a6d-4a1d-9fc1-ff72c98e52bd : [SELECT * FROM simple WHERE id = :id LIMIT 100] with CONSISTENCY LEVEL [null]
13:08:54.685 [achilles-default-executor-78] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 15b483f7-6a6d-4a1d-9fc1-ff72c98e52bd at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
****************************


13:08:54.686 [main] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 15b483f7-6a6d-4a1d-9fc1-ff72c98e52bd row : 
	id: 1838764053256994816, date: Wed Sep 30 19:00:00 CDT 2015, consistencylist: [ONE], simplemap: {1=one}, simpleset: [1.0], value: id - date1

13:08:54.687 [main] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 15b483f7-6a6d-4a1d-9fc1-ff72c98e52bd row : 
	id: 1838764053256994816, date: Thu Oct 01 19:00:00 CDT 2015, consistencylist: [TWO], simplemap: {2=two}, simpleset: [2.0], value: id - date2

13:08:54.687 [main] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 15b483f7-6a6d-4a1d-9fc1-ff72c98e52bd row : 
	id: 1838764053256994816, date: Fri Oct 02 19:00:00 CDT 2015, consistencylist: [THREE], simplemap: {3=three}, simpleset: [3.0], value: id - date3

13:08:54.687 [main] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 15b483f7-6a6d-4a1d-9fc1-ff72c98e52bd row : 
	id: 1838764053256994816, date: Sat Oct 03 19:00:00 CDT 2015, consistencylist: [QUORUM], simplemap: {4=four}, simpleset: [4.0], value: id - date4

13:08:54.687 [main] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 15b483f7-6a6d-4a1d-9fc1-ff72c98e52bd row : 
	id: 1838764053256994816, date: Sun Oct 04 19:00:00 CDT 2015, consistencylist: [ALL], simplemap: {5=five}, simpleset: [5.0], value: id - date5

13:08:54.688 [main] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 15b483f7-6a6d-4a1d-9fc1-ff72c98e52bd row : 
	id: 1838764053256994816, date: Mon Oct 05 19:00:00 CDT 2015, consistencylist: [LOCAL_ONE], simplemap: {6=six}, simpleset: [6.0], value: id - date6

13:08:54.688 [main] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 15b483f7-6a6d-4a1d-9fc1-ff72c98e52bd row : 
	id: 1838764053256994816, date: Tue Oct 06 19:00:00 CDT 2015, consistencylist: [LOCAL_QUORUM], simplemap: {7=seven}, simpleset: [7.0], value: id - date7

13:08:54.688 [main] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 15b483f7-6a6d-4a1d-9fc1-ff72c98e52bd row : 
	id: 1838764053256994816, date: Wed Oct 07 19:00:00 CDT 2015, consistencylist: [EACH_QUORUM], simplemap: {8=eight}, simpleset: [8.0], value: id - date8

13:08:54.689 [main] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 15b483f7-6a6d-4a1d-9fc1-ff72c98e52bd row : 
	id: 1838764053256994816, date: Thu Oct 08 19:00:00 CDT 2015, consistencylist: [SERIAL], simplemap: {9=nine}, simpleset: [9.0], value: id - date9

13:08:54.689 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:08:54.754 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:54.759 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:08:54.760 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:08:54.761 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:08:54.822 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:08:54.889 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:54.893 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:08:54.894 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:08:54.896 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:08:54.969 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(5886818072686423040, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:08:54.972 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID b7d0eee1-b70d-4802-8771-4cf7ff8596ed : [SELECT * FROM simple WHERE id = :id] with CONSISTENCY LEVEL [null]
13:08:54.973 [achilles-default-executor-79] DEBUG i.a.a.i.entities.SimpleEntity - ResultSet[ exhausted: false, Columns[id(bigint), date(timestamp), consistencylist(list<varchar>), simplemap(map<int, varchar>), simpleset(set<double>), value(varchar)]]
13:08:54.974 [achilles-default-executor-79] DEBUG i.a.a.i.entities.SimpleEntity - Query ID b7d0eee1-b70d-4802-8771-4cf7ff8596ed results : 
	id: 5886818072686423040, date: Wed Sep 30 19:00:00 CDT 2015, consistencylist: [QUORUM, LOCAL_ONE], simplemap: {10=ten, 20=twenty}, simpleset: [1.0, 2.0], value: 0 AM

13:08:54.974 [achilles-default-executor-79] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID b7d0eee1-b70d-4802-8771-4cf7ff8596ed at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
****************************


13:08:54.974 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:08:55.038 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:08:55.044 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:08:55.046 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:08:55.047 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:08:55.124 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(5320270002732203008, '2015-10-01 00:00:00+0000', ['ONE'], {1.0}, {1: 'one'}, 'id - date1');

13:08:55.125 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(5320270002732203008, '2015-10-02 00:00:00+0000', ['TWO'], {2.0}, {2: 'two'}, 'id - date2');

13:08:55.126 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(5320270002732203008, '2015-10-03 00:00:00+0000', ['THREE'], {3.0}, {3: 'three'}, 'id - date3');

13:08:55.127 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(5320270002732203008, '2015-10-04 00:00:00+0000', ['QUORUM'], {4.0}, {4: 'four'}, 'id - date4');

13:08:55.128 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(5320270002732203008, '2015-10-05 00:00:00+0000', ['ALL'], {5.0}, {5: 'five'}, 'id - date5');

13:08:55.129 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(5320270002732203008, '2015-10-06 00:00:00+0000', ['LOCAL_ONE'], {6.0}, {6: 'six'}, 'id - date6');

13:08:55.130 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(5320270002732203008, '2015-10-07 00:00:00+0000', ['LOCAL_QUORUM'], {7.0}, {7: 'seven'}, 'id - date7');

13:08:55.131 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(5320270002732203008, '2015-10-08 00:00:00+0000', ['EACH_QUORUM'], {8.0}, {8: 'eight'}, 'id - date8');

13:08:55.132 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(5320270002732203008, '2015-10-09 00:00:00+0000', ['SERIAL'], {9.0}, {9: 'nine'}, 'id - date9');

