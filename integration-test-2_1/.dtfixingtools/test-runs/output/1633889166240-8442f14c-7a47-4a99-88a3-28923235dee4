13:06:06,875 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml]
13:06:06,875 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback.groovy]
13:06:06,875 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [file:/home/ch61/Achilles/integration-test-2_1/target/classes/logback.xml]
13:06:06,876 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs multiple times on the classpath.
13:06:06,876 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs at [file:/home/ch61/Achilles/integration-test-2_1/target/classes/logback.xml]
13:06:06,876 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs at [file:/home/ch61/Achilles/achilles-schema-generator/target/classes/logback.xml]
13:06:06,931 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - debug attribute not set
13:06:06,939 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - Will scan for changes in [file:/home/ch61/Achilles/integration-test-2_1/target/classes/logback.xml] 
13:06:06,939 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - Setting ReconfigureOnChangeTask scanning period to 30 seconds
13:06:06,940 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
13:06:06,943 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [STDOUT]
13:06:06,950 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
13:06:06,983 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [ACHILLES_DDL_SCRIPT] to DEBUG
13:06:06,983 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [ACHILLES_DDL_SCRIPT] to false
13:06:06,983 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ACHILLES_DDL_SCRIPT]
13:06:06,983 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [ACHILLES_DML_STATEMENT] to DEBUG
13:06:06,984 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [ACHILLES_DML_STATEMENT] to false
13:06:06,984 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ACHILLES_DML_STATEMENT]
13:06:06,984 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [info.archinnov.achilles.embedded] to INFO
13:06:06,984 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [info.archinnov.achilles.embedded] to false
13:06:06,984 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[info.archinnov.achilles.embedded]
13:06:06,984 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [info.archinnov.achilles] to WARN
13:06:06,984 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [info.archinnov.achilles] to false
13:06:06,984 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[info.archinnov.achilles]
13:06:06,984 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [info.archinnov.achilles.internals.cache.StatementsCache] to WARN
13:06:06,984 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [info.archinnov.achilles.internals.cache.StatementsCache] to false
13:06:06,984 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[info.archinnov.achilles.internals.cache.StatementsCache]
13:06:06,984 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [info.archinnov.achilles.internals.entities.SimpleEntity] to TRACE
13:06:06,984 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [info.archinnov.achilles.internals.entities.SimpleEntity] to false
13:06:06,984 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[info.archinnov.achilles.internals.entities.SimpleEntity]
13:06:06,984 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.apache.cassandra.cql3.QueryProcessor] to OFF
13:06:06,984 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [org.apache.cassandra.cql3.QueryProcessor] to false
13:06:06,984 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[org.apache.cassandra.cql3.QueryProcessor]
13:06:06,984 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.apache.cassandra.db.Memtable] to OFF
13:06:06,984 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [org.apache.cassandra.db.Memtable] to false
13:06:06,984 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[org.apache.cassandra.db.Memtable]
13:06:06,984 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.apache.cassandra.utils.CLibrary] to OFF
13:06:06,984 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [org.apache.cassandra.utils.CLibrary] to false
13:06:06,984 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[org.apache.cassandra.utils.CLibrary]
13:06:06,984 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.apache.cassandra.utils.SigarLibrary] to OFF
13:06:06,984 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [org.apache.cassandra.utils.SigarLibrary] to false
13:06:06,984 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[org.apache.cassandra.utils.SigarLibrary]
13:06:06,984 |-INFO in ch.qos.logback.classic.joran.action.LevelAction - ROOT level set to WARN
13:06:06,984 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ROOT]
13:06:06,984 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration.
13:06:06,985 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@64d7f7e0 - Registering current configuration as safe fallback point

13:06:07.090 [main] INFO  i.a.achilles.embedded.ServerStarter - Using existing data folder for unit tests : /home/ch61/Achilles/target/cassandra_embedded/data
13:06:07.092 [main] INFO  i.a.achilles.embedded.ServerStarter - Using existing data folder for unit tests : /home/ch61/Achilles/target/cassandra_embedded/commitlog
13:06:07.092 [main] INFO  i.a.achilles.embedded.ServerStarter - Using existing data folder for unit tests : /home/ch61/Achilles/target/cassandra_embedded/saved_caches
13:06:07.092 [main] INFO  i.a.achilles.embedded.ServerStarter - Using existing data folder for unit tests : /home/ch61/Achilles/target/cassandra_embedded/hints
13:06:07.092 [main] INFO  i.a.achilles.embedded.ServerStarter - Using existing data folder for unit tests : /home/ch61/Achilles/target/cassandra_embedded/cdc_raw
13:06:07.100 [main] INFO  i.a.achilles.embedded.ServerStarter - Cleaning up embedded Cassandra data directory '/home/ch61/Achilles/target/cassandra_embedded/data'
13:06:07.124 [main] INFO  i.a.achilles.embedded.ServerStarter - Cleaning up embedded Cassandra data directory '/home/ch61/Achilles/target/cassandra_embedded/commitlog'
13:06:07.124 [main] INFO  i.a.achilles.embedded.ServerStarter - Cleaning up embedded Cassandra data directory '/home/ch61/Achilles/target/cassandra_embedded/saved_caches'
13:06:07.207 [main] INFO  i.a.achilles.embedded.ServerStarter -  Cassandra listen address = localhost
13:06:07.207 [main] INFO  i.a.achilles.embedded.ServerStarter -  Cassandra RPC address = localhost
13:06:07.207 [main] INFO  i.a.achilles.embedded.ServerStarter -  Cassandra broadcast address = 
13:06:07.207 [main] INFO  i.a.achilles.embedded.ServerStarter -  Cassandra RPC broadcast address = 
13:06:07.207 [main] INFO  i.a.achilles.embedded.ServerStarter -  Random embedded Cassandra RPC port/Thrift port = 9160
13:06:07.207 [main] INFO  i.a.achilles.embedded.ServerStarter -  Random embedded Cassandra Native port/CQL port = 9042
13:06:07.207 [main] INFO  i.a.achilles.embedded.ServerStarter -  Random embedded Cassandra Storage port = 7234
13:06:07.207 [main] INFO  i.a.achilles.embedded.ServerStarter -  Random embedded Cassandra Storage SSL port = 7814
13:06:07.207 [main] INFO  i.a.achilles.embedded.ServerStarter -  Random embedded Cassandra Remote JMX port = null
13:06:07.207 [main] INFO  i.a.achilles.embedded.ServerStarter -  Embedded Cassandra triggers directory = /home/ch61/Achilles/target/cassandra_embedded/cassandra_triggers
13:06:07.207 [main] INFO  i.a.achilles.embedded.ServerStarter - Starting Cassandra...
13:06:07.560 [pool-2-thread-1] WARN  o.a.c.config.DatabaseDescriptor - Only 40.224GiB free across all data volumes. Consider adding more capacity to your cluster or removing obsolete snapshots
13:06:07.768 [pool-2-thread-1] WARN  o.a.cassandra.utils.NativeLibrary - Unable to lock JVM memory (ENOMEM). This can result in part of the JVM being swapped out, especially with mmapped I/O enabled. Increase RLIMIT_MEMLOCK or run Cassandra as root.
13:06:07.776 [pool-2-thread-1] WARN  o.a.cassandra.service.StartupChecks - jemalloc shared library could not be preloaded to speed up memory allocations
13:06:07.776 [pool-2-thread-1] WARN  o.a.cassandra.service.StartupChecks - JMX is not enabled to receive remote connections. Please see cassandra-env.sh for more info.
13:06:07.777 [pool-2-thread-1] WARN  o.a.cassandra.service.StartupChecks - The JVM is not configured to stop on OutOfMemoryError which can cause data corruption. Use one of the following JVM options to configure the behavior on OutOfMemoryError:  -XX:+ExitOnOutOfMemoryError, -XX:+CrashOnOutOfMemoryError, or -XX:OnOutOfMemoryError="<cmd args>;<cmd args>"
no libsigar-amd64-linux.so in java.library.path
org.hyperic.sigar.SigarException: no libsigar-amd64-linux.so in java.library.path
	at org.hyperic.sigar.Sigar.loadLibrary(Sigar.java:172)
	at org.hyperic.sigar.Sigar.<clinit>(Sigar.java:100)
	at org.apache.cassandra.utils.SigarLibrary.<init>(SigarLibrary.java:47)
	at org.apache.cassandra.utils.SigarLibrary.<clinit>(SigarLibrary.java:28)
	at org.apache.cassandra.service.StartupChecks$7.execute(StartupChecks.java:266)
	at org.apache.cassandra.service.StartupChecks.verify(StartupChecks.java:125)
	at org.apache.cassandra.service.CassandraDaemon.setup(CassandraDaemon.java:216)
	at org.apache.cassandra.service.CassandraDaemon.activate(CassandraDaemon.java:633)
	at info.archinnov.achilles.embedded.ServerStarter.lambda$start$0(ServerStarter.java:163)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
13:06:07.794 [pool-2-thread-1] WARN  o.a.cassandra.service.StartupChecks - Maximum number of memory map areas per process (vm.max_map_count) 65530 is too low, recommended value: 1048575, you can change it with sysctl.
13:06:11.030 [pool-2-thread-1] WARN  o.apache.cassandra.db.SystemKeyspace - No host ID found, created 5ffa260e-bceb-476c-9a31-d911bee39510 (Note: This should happen exactly once per node).
13:06:13.643 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:14.179 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.complex_tuple(
		id bigint,
		tuple frozen<tuple<int, map<int, list<text>>>>,
		PRIMARY KEY(id));

13:06:14.722 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:14.732 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:14.851 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:15.104 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS my_static_keyspace.entity_static_annotations(
		partition_key bigint,
		"overRiden" text,
		value text,
		PRIMARY KEY(partition_key))
	WITH default_time_to_live = 1;

13:06:15.343 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_child(
		id bigint,
		child_value text,
		value text,
		PRIMARY KEY(id));

13:06:15.632 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:15.763 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:06:15.827 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE my_static_keyspace.entity_static_annotations
13:06:15.927 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 51f8302f-bed6-4236-91c8-5217f77fa1ff : [INSERT INTO my_static_keyspace.entity_static_annotations (partition_key,"overRiden",value) VALUES (:partition_key,:"overRiden",:value) USING TTL :ttl;] with CONSISTENCY LEVEL [EACH_QUORUM]
	 Java bound values : [8188420929916865536, overriden_val, new_val, 1]
	 Encoded bound values : [8188420929916865536, overriden_val, new_val, 1]
13:06:16.005 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:16.082 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:06:16.149 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE my_static_keyspace.entity_static_annotations
13:06:16.219 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:16.221 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:16.231 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:16.234 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS my_static_keyspace.entity_static_annotations(
		partition_key bigint,
		"overRiden" text,
		value text,
		PRIMARY KEY(partition_key))
	WITH default_time_to_live = 1;

13:06:16.236 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_child(
		id bigint,
		child_value text,
		value text,
		PRIMARY KEY(id));

13:06:16.239 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:16.303 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:06:16.376 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE my_static_keyspace.entity_static_annotations
13:06:16.443 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 8df9c015-30c2-4763-913c-e82c1b0027b3 : [INSERT INTO my_static_keyspace.entity_static_annotations (partition_key,"overRiden",value) VALUES (:partition_key,:"overRiden",:value) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [6422038051706055680, overriden_val, new_val, 1]
	 Encoded bound values : [6422038051706055680, overriden_val, new_val, 1]
13:06:16.450 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:16.535 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:06:16.606 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE my_static_keyspace.entity_static_annotations
13:06:16.673 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:16.675 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:16.686 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:16.689 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS my_static_keyspace.entity_static_annotations(
		partition_key bigint,
		"overRiden" text,
		value text,
		PRIMARY KEY(partition_key))
	WITH default_time_to_live = 1;

13:06:16.690 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_child(
		id bigint,
		child_value text,
		value text,
		PRIMARY KEY(id));

13:06:16.693 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:16.760 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:06:16.833 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE my_static_keyspace.entity_static_annotations
13:06:16.907 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 60bb7d80-f0d6-4b6a-8412-d258ca561a3a : [INSERT INTO achilles_embedded.simple (id,date,consistencylist,simplemap,simpleset,value) VALUES (:id,:date,:consistencylist,:simplemap,:simpleset,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [8939108583704039424, Sun Oct 10 13:06:16 CDT 2021, null, null, null, value, 0]
	 Encoded bound values : [8939108583704039424, Sun Oct 10 13:06:16 CDT 2021, null, null, null, value, 0]
13:06:16.928 [achilles-default-executor-3] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 60bb7d80-f0d6-4b6a-8412-d258ca561a3a at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 2675                     | Native-Transport-Requests-2
Adding to simple memtable                                                        | /127.0.0.1       | 3968                     | MutationStage-1     
****************************


13:06:16.929 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:16.999 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:06:17.070 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE my_static_keyspace.entity_static_annotations
13:06:17.139 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:17.141 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:17.150 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:17.152 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS my_static_keyspace.entity_static_annotations(
		partition_key bigint,
		"overRiden" text,
		value text,
		PRIMARY KEY(partition_key))
	WITH default_time_to_live = 1;

13:06:17.154 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_child(
		id bigint,
		child_value text,
		value text,
		PRIMARY KEY(id));

13:06:17.156 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:17.232 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:06:17.304 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE my_static_keyspace.entity_static_annotations
13:06:17.374 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 830a96d6-f7bf-48a8-b580-56597c0946e5 : [INSERT INTO achilles_embedded.entity_child (id,child_value,value) VALUES (:id,:child_value,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_QUORUM]
	 Java bound values : [8314007207985270784, another_val, val, 0]
	 Encoded bound values : [8314007207985270784, another_val, val, 0]
13:06:17.377 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:17.457 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:06:17.528 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE my_static_keyspace.entity_static_annotations
13:06:17.598 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:17.600 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:17.609 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:17.612 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:17.691 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(8753977977469054976, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:17.723 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 2c3f85fe-cd11-40bd-bf2a-07e1ec661d8a : [UPDATE achilles_embedded.simple SET simpleset=simpleset+:simpleset WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [[3.0], 8753977977469054976, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [[3.0], 8753977977469054976, Wed Sep 30 19:00:00 CDT 2015]
13:06:17.730 [achilles-default-executor-5] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 2c3f85fe-cd11-40bd-bf2a-07e1ec661d8a at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 735                      | Native-Transport-Requests-1
Adding to simple memtable                                                        | /127.0.0.1       | 1402                     | MutationStage-2     
****************************


13:06:17.741 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:17.803 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:17.805 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:17.814 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:17.839 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:17.911 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 2c81f46b-fa07-4c97-9156-6e046b489704 : [DELETE value FROM achilles_embedded.simple WHERE id=:id AND date=:date IF EXISTS;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [887238460528623616, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [887238460528623616, Wed Sep 30 19:00:00 CDT 2015]
13:06:17.946 [achilles-default-executor-6] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 2c81f46b-fa07-4c97-9156-6e046b489704 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Preparing c40677c0-29f4-11ec-087a-d5ae0db01544                                   | /127.0.0.1       | 4306                     | Native-Transport-Requests-1
Sending PAXOS_PREPARE message to localhost/127.0.0.1                             | /127.0.0.1       | 7107                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
PAXOS_PREPARE message received from /127.0.0.1                                   | /127.0.0.1       | 7763                     | MessagingService-Incoming-/127.0.0.1
Parsing SELECT * FROM system.paxos WHERE row_key = ? AND cf_id = ?               | /127.0.0.1       | 9103                     | MutationStage-2     
Preparing statement                                                              | /127.0.0.1       | 9294                     | MutationStage-2     
Executing single-partition query on paxos                                        | /127.0.0.1       | 9622                     | MutationStage-2     
Acquiring sstable references                                                     | /127.0.0.1       | 9692                     | MutationStage-2     
Merging memtable contents                                                        | /127.0.0.1       | 9740                     | MutationStage-2     
Read 0 live rows and 0 tombstone cells                                           | /127.0.0.1       | 9906                     | MutationStage-2     
Promising ballot c40677c0-29f4-11ec-087a-d5ae0db01544                            | /127.0.0.1       | 10023                    | MutationStage-2     
Parsing UPDATE system.paxos USING TIMESTAMP ? AND TTL ? SET in_progress_ballot = ? WHERE row_key = ? AND cf_id = ? | /127.0.0.1       | 10115                    | MutationStage-2     
Preparing statement                                                              | /127.0.0.1       | 10366                    | MutationStage-2     
Appending to commitlog                                                           | /127.0.0.1       | 10672                    | MutationStage-2     
Adding to paxos memtable                                                         | /127.0.0.1       | 10831                    | MutationStage-2     
Sending REQUEST_RESPONSE message to localhost/127.0.0.1                          | /127.0.0.1       | 11291                    | MessagingService-Outgoing-localhost/127.0.0.1-Small
REQUEST_RESPONSE message received from /127.0.0.1                                | /127.0.0.1       | 11624                    | MessagingService-Incoming-/127.0.0.1
Processing response from /127.0.0.1                                              | /127.0.0.1       | 11774                    | RequestResponseStage-3
Reading existing values for CAS precondition                                     | /127.0.0.1       | 11975                    | Native-Transport-Requests-1
Executing single-partition query on simple                                       | /127.0.0.1       | 12492                    | ReadStage-4         
Acquiring sstable references                                                     | /127.0.0.1       | 12586                    | ReadStage-4         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 12671                    | ReadStage-4         
Read 0 live rows and 0 tombstone cells                                           | /127.0.0.1       | 12774                    | ReadStage-4         
CAS precondition does not match current values [achilles_embedded.simple] key=887238460528623616 partition_deletion=deletedAt=-9223372036854775808, localDeletion=2147483647 columns=[[] | []] | /127.0.0.1       | 14000                    | Native-Transport-Requests-1
CAS precondition is met; proposing client-requested updates for c40677c0-29f4-11ec-087a-d5ae0db01544 | /127.0.0.1       | 14970                    | Native-Transport-Requests-1
Sending PAXOS_PROPOSE message to localhost/127.0.0.1                             | /127.0.0.1       | 15665                    | MessagingService-Outgoing-localhost/127.0.0.1-Small
PAXOS_PROPOSE message received from /127.0.0.1                                   | /127.0.0.1       | 16027                    | MessagingService-Incoming-/127.0.0.1
Executing single-partition query on paxos                                        | /127.0.0.1       | 17319                    | MutationStage-4     
Acquiring sstable references                                                     | /127.0.0.1       | 17407                    | MutationStage-4     
Merging memtable contents                                                        | /127.0.0.1       | 17458                    | MutationStage-4     
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 17717                    | MutationStage-4     
Accepting proposal Commit(c40677c0-29f4-11ec-087a-d5ae0db01544, [achilles_embedded.simple] key=887238460528623616 partition_deletion=deletedAt=-9223372036854775808, localDeletion=2147483647 columns=[[] | []]) | /127.0.0.1       | 17903                    | MutationStage-4     
Parsing UPDATE system.paxos USING TIMESTAMP ? AND TTL ? SET proposal_ballot = ?, proposal = ?, proposal_version = ? WHERE row_key = ? AND cf_id = ? | /127.0.0.1       | 18054                    | MutationStage-4     
Preparing statement                                                              | /127.0.0.1       | 18259                    | MutationStage-4     
Appending to commitlog                                                           | /127.0.0.1       | 18548                    | MutationStage-4     
Adding to paxos memtable                                                         | /127.0.0.1       | 18668                    | MutationStage-4     
Sending REQUEST_RESPONSE message to localhost/127.0.0.1                          | /127.0.0.1       | 19458                    | MessagingService-Outgoing-localhost/127.0.0.1-Small
REQUEST_RESPONSE message received from /127.0.0.1                                | /127.0.0.1       | 19712                    | MessagingService-Incoming-/127.0.0.1
Processing response from /127.0.0.1                                              | /127.0.0.1       | 19832                    | RequestResponseStage-3
CAS did not apply                                                                | /127.0.0.1       | 19958                    | Native-Transport-Requests-1
****************************


13:06:17.948 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:18.019 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:18.021 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:18.029 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:18.031 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:18.093 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(2408496818680054784, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:18.103 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID a604ba84-68d0-46cb-bfbb-d930875fcd45 : [UPDATE achilles_embedded.simple SET simpleset=simpleset-:simpleset WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [[1.0, 2.0], 2408496818680054784, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [[1.0, 2.0], 2408496818680054784, Wed Sep 30 19:00:00 CDT 2015]
13:06:18.112 [achilles-default-executor-7] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID a604ba84-68d0-46cb-bfbb-d930875fcd45 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 406                      | Native-Transport-Requests-2
Adding to simple memtable                                                        | /127.0.0.1       | 1130                     | MutationStage-4     
****************************


13:06:18.114 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:18.179 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:18.181 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:18.191 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:18.194 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:18.269 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS achilles_embedded.dsl_delete_with_schema( id bigint, date timestamp, consistencylist list<text>, simplemap map<int, text>, simpleset set<double>, value text, PRIMARY KEY(id, date)) WITH CLUSTERING ORDER BY(date ASC);

13:06:18.498 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.dsl_delete_with_schema(id, date, consistencylist, simpleset, simplemap, value) VALUES(3973037890257996800, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:18.503 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 42a61313-cec6-4496-b83f-028cb2d8bfd5 : [DELETE FROM achilles_embedded.dsl_delete_with_schema WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [3973037890257996800, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [3973037890257996800, Wed Sep 30 19:00:00 CDT 2015]
13:06:18.514 [achilles-default-executor-8] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 42a61313-cec6-4496-b83f-028cb2d8bfd5 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 705                      | Native-Transport-Requests-2
Adding to dsl_delete_with_schema memtable                                        | /127.0.0.1       | 1113                     | MutationStage-1     
****************************


13:06:18.515 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:18.578 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:18.580 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:18.589 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:18.591 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:18.655 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(8780081122442368000, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:18.667 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 1d825b4a-8e3a-4185-9cf7-e558d6e21c47 : [UPDATE achilles_embedded.simple SET consistencylist=:consistencylist+consistencylist WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [[ALL], 8780081122442368000, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [[ALL], 8780081122442368000, Wed Sep 30 19:00:00 CDT 2015]
13:06:18.675 [achilles-default-executor-9] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 1d825b4a-8e3a-4185-9cf7-e558d6e21c47 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 1037                     | Native-Transport-Requests-1
Adding to simple memtable                                                        | /127.0.0.1       | 1187                     | Native-Transport-Requests-1
****************************


13:06:18.677 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:18.751 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:18.752 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:18.760 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:18.763 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:18.832 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(6580219558057443328, '2015-10-01 00:00:00+0000', ['ONE'], {1.0}, {1: 'one'}, 'id - date1');

13:06:18.834 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(6580219558057443328, '2015-10-02 00:00:00+0000', ['TWO'], {2.0}, {2: 'two'}, 'id - date2');

13:06:18.837 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(6580219558057443328, '2015-10-03 00:00:00+0000', ['THREE'], {3.0}, {3: 'three'}, 'id - date3');

13:06:18.838 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(6580219558057443328, '2015-10-04 00:00:00+0000', ['QUORUM'], {4.0}, {4: 'four'}, 'id - date4');

13:06:18.840 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(6580219558057443328, '2015-10-05 00:00:00+0000', ['ALL'], {5.0}, {5: 'five'}, 'id - date5');

13:06:18.842 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(6580219558057443328, '2015-10-06 00:00:00+0000', ['LOCAL_ONE'], {6.0}, {6: 'six'}, 'id - date6');

13:06:18.843 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(6580219558057443328, '2015-10-07 00:00:00+0000', ['LOCAL_QUORUM'], {7.0}, {7: 'seven'}, 'id - date7');

13:06:18.845 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(6580219558057443328, '2015-10-08 00:00:00+0000', ['EACH_QUORUM'], {8.0}, {8: 'eight'}, 'id - date8');

13:06:18.847 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(6580219558057443328, '2015-10-09 00:00:00+0000', ['SERIAL'], {9.0}, {9: 'nine'}, 'id - date9');

13:06:18.858 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 6a614c0e-4d54-4a37-bfcc-df46e68e2be9 : [SELECT value FROM achilles_embedded.simple WHERE id=:id AND date IN :date ORDER BY date DESC LIMIT :lim;] with CONSISTENCY LEVEL [THREE]
	 Java bound values : [6580219558057443328, [Wed Sep 30 19:00:00 CDT 2015, Thu Oct 01 19:00:00 CDT 2015, Fri Oct 02 19:00:00 CDT 2015, Mon Oct 05 19:00:00 CDT 2015], 3]
	 Encoded bound values : [6580219558057443328, [Wed Sep 30 19:00:00 CDT 2015, Thu Oct 01 19:00:00 CDT 2015, Fri Oct 02 19:00:00 CDT 2015, Mon Oct 05 19:00:00 CDT 2015], 3]
13:06:18.872 [achilles-default-executor-10] DEBUG i.a.a.i.entities.SimpleEntity - ResultSet[ exhausted: false, Columns[value(varchar)]]
13:06:18.876 [achilles-default-executor-10] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 6a614c0e-4d54-4a37-bfcc-df46e68e2be9 results : 
	value: id - date6
	value: id - date3
	value: id - date2

13:06:18.881 [achilles-default-executor-10] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 6a614c0e-4d54-4a37-bfcc-df46e68e2be9 at host localhost/127.0.0.1:9042 with achieved consistency level ONE 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Executing single-partition query on simple                                       | /127.0.0.1       | 462                      | ReadStage-2         
Acquiring sstable references                                                     | /127.0.0.1       | 560                      | ReadStage-2         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 731                      | ReadStage-2         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 1295                     | ReadStage-2         
Read 3 live rows and 0 tombstone cells                                           | /127.0.0.1       | 1389                     | ReadStage-2         
****************************


13:06:18.890 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:18.954 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:18.956 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:18.964 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:18.966 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:19.039 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(5271456085308594176, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:19.044 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID ccfb3a58-6154-4c80-ae32-d1e1c234b9db : [UPDATE achilles_embedded.simple SET consistencylist=consistencylist+:consistencylist WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [[TWO, THREE], 5271456085308594176, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [[TWO, THREE], 5271456085308594176, Wed Sep 30 19:00:00 CDT 2015]
13:06:19.050 [achilles-default-executor-11] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID ccfb3a58-6154-4c80-ae32-d1e1c234b9db at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 404                      | Native-Transport-Requests-1
Adding to simple memtable                                                        | /127.0.0.1       | 523                      | Native-Transport-Requests-1
****************************


13:06:19.052 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:19.119 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:19.121 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:19.134 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:19.137 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:19.208 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:19.288 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:19.290 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:19.298 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:19.300 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:19.369 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(6921276202960983040, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:19.372 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 145642b3-a826-43d1-a028-68625da489b8 : [UPDATE achilles_embedded.simple SET consistencylist=:consistencylist+consistencylist WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [[TWO, THREE], 6921276202960983040, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [[TWO, THREE], 6921276202960983040, Wed Sep 30 19:00:00 CDT 2015]
13:06:19.381 [achilles-default-executor-12] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 145642b3-a826-43d1-a028-68625da489b8 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 338                      | Native-Transport-Requests-2
Adding to simple memtable                                                        | /127.0.0.1       | 451                      | Native-Transport-Requests-2
****************************


13:06:19.383 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:19.445 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:19.447 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:19.456 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:19.460 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:19.534 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 7040948b-4566-4aa3-9761-be3ad4e157c5 : [UPDATE achilles_embedded.simple SET value=:value WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [TWO]
	 Java bound values : [new value, 3233156643504199680, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [new value, 3233156643504199680, Wed Sep 30 19:00:00 CDT 2015]
13:06:19.545 [achilles-default-executor-13] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 7040948b-4566-4aa3-9761-be3ad4e157c5 at host localhost/127.0.0.1:9042 with achieved consistency level ONE 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 219                      | Native-Transport-Requests-1
Adding to simple memtable                                                        | /127.0.0.1       | 1107                     | MutationStage-2     
****************************


13:06:19.545 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:19.611 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:19.613 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:19.621 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:19.623 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:19.686 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS achilles_embedded.simple_dsl_schema_provider( id bigint, date timestamp, consistencylist list<text>, simplemap map<int, text>, simpleset set<double>, value text, PRIMARY KEY(id, date)) WITH CLUSTERING ORDER BY(date ASC);

13:06:19.931 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple_dsl_schema_provider(id, date, consistencylist, simpleset, simplemap, value) VALUES(8356545908123336704, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:19.937 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 5be71386-e69a-46a7-b354-733f8a87644b : [SELECT * FROM achilles_embedded.simple_dsl_schema_provider WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [8356545908123336704, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [8356545908123336704, Wed Sep 30 19:00:00 CDT 2015]
13:06:19.943 [achilles-default-executor-14] DEBUG i.a.a.i.entities.SimpleEntity - ResultSet[ exhausted: false, Columns[id(bigint), date(timestamp), consistencylist(list<varchar>), simplemap(map<int, varchar>), simpleset(set<double>), value(varchar)]]
13:06:19.945 [achilles-default-executor-14] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 5be71386-e69a-46a7-b354-733f8a87644b results : 
	id: 8356545908123336704, date: Wed Sep 30 19:00:00 CDT 2015, consistencylist: [QUORUM, LOCAL_ONE], simplemap: {10=ten, 20=twenty}, simpleset: [1.0, 2.0], value: 0 AM

13:06:19.948 [achilles-default-executor-14] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 5be71386-e69a-46a7-b354-733f8a87644b at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Executing single-partition query on simple_dsl_schema_provider                   | /127.0.0.1       | 317                      | ReadStage-3         
Acquiring sstable references                                                     | /127.0.0.1       | 392                      | ReadStage-3         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 463                      | ReadStage-3         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 627                      | ReadStage-3         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 700                      | ReadStage-3         
****************************


13:06:19.952 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:20.019 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:20.021 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:20.029 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:20.031 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:20.095 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(8130685419140457472, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:20.101 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID b3eb0fbd-9c97-4f2f-af3e-d3eafb8925ba : [SELECT date,value FROM achilles_embedded.simple WHERE id IN :id AND date IN :date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [[8130685419140457472, 6078732178076904448], [Wed Sep 30 19:00:00 CDT 2015, Sun Oct 10 13:06:20 CDT 2021]]
	 Encoded bound values : [[8130685419140457472, 6078732178076904448], [Wed Sep 30 19:00:00 CDT 2015, Sun Oct 10 13:06:20 CDT 2021]]
13:06:20.107 [achilles-default-executor-15] DEBUG i.a.a.i.entities.SimpleEntity - ResultSet[ exhausted: false, Columns[date(timestamp), value(varchar)]]
13:06:20.107 [achilles-default-executor-15] DEBUG i.a.a.i.entities.SimpleEntity - Query ID b3eb0fbd-9c97-4f2f-af3e-d3eafb8925ba results : 
	date: Wed Sep 30 19:00:00 CDT 2015, value: 0 AM

13:06:20.119 [achilles-default-executor-15] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID b3eb0fbd-9c97-4f2f-af3e-d3eafb8925ba at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Executing single-partition query on simple                                       | /127.0.0.1       | 2282                     | ReadStage-1         
Acquiring sstable references                                                     | /127.0.0.1       | 2398                     | ReadStage-1         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 2490                     | ReadStage-1         
Read 0 live rows and 0 tombstone cells                                           | /127.0.0.1       | 2608                     | ReadStage-1         
Executing single-partition query on simple                                       | /127.0.0.1       | 3663                     | ReadStage-1         
Acquiring sstable references                                                     | /127.0.0.1       | 3740                     | ReadStage-1         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 3834                     | ReadStage-1         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 4026                     | ReadStage-1         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 4094                     | ReadStage-1         
****************************


13:06:20.125 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:20.189 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:20.191 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:20.200 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:20.202 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:20.275 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(3017148546107101184, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:20.279 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID c8607774-0780-4853-bbf1-47ec9a85dcec : [UPDATE achilles_embedded.simple SET simpleset=:simpleset WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [[3.0], 3017148546107101184, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [[3.0], 3017148546107101184, Wed Sep 30 19:00:00 CDT 2015]
13:06:20.295 [achilles-default-executor-16] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID c8607774-0780-4853-bbf1-47ec9a85dcec at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 404                      | Native-Transport-Requests-4
Adding to simple memtable                                                        | /127.0.0.1       | 540                      | Native-Transport-Requests-4
****************************


13:06:20.298 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:20.375 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:20.377 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:20.386 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:20.388 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:20.453 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(4277297262266166272, '2015-10-01 00:00:00+0000', ['ONE'], {1.0}, {1: 'one'}, 'id - date1');

13:06:20.455 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(4277297262266166272, '2015-10-02 00:00:00+0000', ['TWO'], {2.0}, {2: 'two'}, 'id - date2');

13:06:20.457 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(4277297262266166272, '2015-10-03 00:00:00+0000', ['THREE'], {3.0}, {3: 'three'}, 'id - date3');

13:06:20.458 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(4277297262266166272, '2015-10-04 00:00:00+0000', ['QUORUM'], {4.0}, {4: 'four'}, 'id - date4');

13:06:20.460 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(4277297262266166272, '2015-10-05 00:00:00+0000', ['ALL'], {5.0}, {5: 'five'}, 'id - date5');

13:06:20.462 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(4277297262266166272, '2015-10-06 00:00:00+0000', ['LOCAL_ONE'], {6.0}, {6: 'six'}, 'id - date6');

13:06:20.463 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(4277297262266166272, '2015-10-07 00:00:00+0000', ['LOCAL_QUORUM'], {7.0}, {7: 'seven'}, 'id - date7');

13:06:20.465 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(4277297262266166272, '2015-10-08 00:00:00+0000', ['EACH_QUORUM'], {8.0}, {8: 'eight'}, 'id - date8');

13:06:20.466 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(4277297262266166272, '2015-10-09 00:00:00+0000', ['SERIAL'], {9.0}, {9: 'nine'}, 'id - date9');

13:06:20.474 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID e7b441d6-ff06-4d54-8c02-932dce553767 : [SELECT consistencylist,simpleset,simplemap,value,simplemap FROM achilles_embedded.simple WHERE id=:id AND date>=:date_Lt AND date<:date_Lt;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [4277297262266166272, Wed Sep 30 19:00:00 CDT 2015, Thu Oct 08 19:00:00 CDT 2015]
	 Encoded bound values : [4277297262266166272, Wed Sep 30 19:00:00 CDT 2015, Thu Oct 08 19:00:00 CDT 2015]
13:06:20.480 [achilles-default-executor-17] DEBUG i.a.a.i.entities.SimpleEntity - ResultSet[ exhausted: false, Columns[consistencylist(list<varchar>), simpleset(set<double>), simplemap(map<int, varchar>), value(varchar), simplemap(map<int, varchar>)]]
13:06:20.481 [achilles-default-executor-17] DEBUG i.a.a.i.entities.SimpleEntity - Query ID e7b441d6-ff06-4d54-8c02-932dce553767 results : 
	consistencylist: [ONE], simpleset: [1.0], simplemap: {1=one}, value: id - date1, simplemap: {1=one}
	consistencylist: [TWO], simpleset: [2.0], simplemap: {2=two}, value: id - date2, simplemap: {2=two}
	consistencylist: [THREE], simpleset: [3.0], simplemap: {3=three}, value: id - date3, simplemap: {3=three}
	consistencylist: [QUORUM], simpleset: [4.0], simplemap: {4=four}, value: id - date4, simplemap: {4=four}
	consistencylist: [ALL], simpleset: [5.0], simplemap: {5=five}, value: id - date5, simplemap: {5=five}
	consistencylist: [LOCAL_ONE], simpleset: [6.0], simplemap: {6=six}, value: id - date6, simplemap: {6=six}
	consistencylist: [LOCAL_QUORUM], simpleset: [7.0], simplemap: {7=seven}, value: id - date7, simplemap: {7=seven}
	consistencylist: [EACH_QUORUM], simpleset: [8.0], simplemap: {8=eight}, value: id - date8, simplemap: {8=eight}

13:06:20.483 [achilles-default-executor-17] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID e7b441d6-ff06-4d54-8c02-932dce553767 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Executing single-partition query on simple                                       | /127.0.0.1       | 1133                     | ReadStage-2         
Acquiring sstable references                                                     | /127.0.0.1       | 1226                     | ReadStage-2         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 1326                     | ReadStage-2         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 1631                     | ReadStage-2         
Read 8 live rows and 0 tombstone cells                                           | /127.0.0.1       | 1715                     | ReadStage-2         
****************************


13:06:20.487 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:20.567 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:20.569 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:20.576 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:20.579 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:20.648 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 5b703e7f-53c5-4074-b94e-ce1a88de6ec7 : [UPDATE achilles_embedded.simple SET value=:value WHERE id=:id AND date=:date IF EXISTS;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [new value, 7232331597154438144, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [new value, 7232331597154438144, Wed Sep 30 19:00:00 CDT 2015]
13:06:20.665 [achilles-default-executor-18] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 5b703e7f-53c5-4074-b94e-ce1a88de6ec7 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Preparing c5a77d90-29f4-11ec-dc7a-1fd9300c9aad                                   | /127.0.0.1       | 387                      | Native-Transport-Requests-1
Sending PAXOS_PREPARE message to localhost/127.0.0.1                             | /127.0.0.1       | 641                      | MessagingService-Outgoing-localhost/127.0.0.1-Small
PAXOS_PREPARE message received from /127.0.0.1                                   | /127.0.0.1       | 929                      | MessagingService-Incoming-/127.0.0.1
Executing single-partition query on paxos                                        | /127.0.0.1       | 1137                     | MutationStage-3     
Acquiring sstable references                                                     | /127.0.0.1       | 1214                     | MutationStage-3     
Merging memtable contents                                                        | /127.0.0.1       | 1253                     | MutationStage-3     
Read 0 live rows and 0 tombstone cells                                           | /127.0.0.1       | 1390                     | MutationStage-3     
Promising ballot c5a77d90-29f4-11ec-dc7a-1fd9300c9aad                            | /127.0.0.1       | 1451                     | MutationStage-3     
Appending to commitlog                                                           | /127.0.0.1       | 1612                     | MutationStage-3     
Adding to paxos memtable                                                         | /127.0.0.1       | 1727                     | MutationStage-3     
Sending REQUEST_RESPONSE message to localhost/127.0.0.1                          | /127.0.0.1       | 1994                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
REQUEST_RESPONSE message received from /127.0.0.1                                | /127.0.0.1       | 2282                     | MessagingService-Incoming-/127.0.0.1
Processing response from /127.0.0.1                                              | /127.0.0.1       | 2396                     | RequestResponseStage-2
Reading existing values for CAS precondition                                     | /127.0.0.1       | 2488                     | Native-Transport-Requests-1
Executing single-partition query on simple                                       | /127.0.0.1       | 2668                     | ReadStage-2         
Acquiring sstable references                                                     | /127.0.0.1       | 2722                     | ReadStage-2         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 2783                     | ReadStage-2         
Read 0 live rows and 0 tombstone cells                                           | /127.0.0.1       | 2871                     | ReadStage-2         
CAS precondition does not match current values [achilles_embedded.simple] key=7232331597154438144 partition_deletion=deletedAt=-9223372036854775808, localDeletion=2147483647 columns=[[] | []] | /127.0.0.1       | 3106                     | Native-Transport-Requests-1
CAS precondition is met; proposing client-requested updates for c5a77d90-29f4-11ec-dc7a-1fd9300c9aad | /127.0.0.1       | 3183                     | Native-Transport-Requests-1
Sending PAXOS_PROPOSE message to localhost/127.0.0.1                             | /127.0.0.1       | 3488                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
PAXOS_PROPOSE message received from /127.0.0.1                                   | /127.0.0.1       | 3706                     | MessagingService-Incoming-/127.0.0.1
Executing single-partition query on paxos                                        | /127.0.0.1       | 3869                     | MutationStage-2     
Acquiring sstable references                                                     | /127.0.0.1       | 3930                     | MutationStage-2     
Merging memtable contents                                                        | /127.0.0.1       | 3971                     | MutationStage-2     
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 4165                     | MutationStage-2     
Accepting proposal Commit(c5a77d90-29f4-11ec-dc7a-1fd9300c9aad, [achilles_embedded.simple] key=7232331597154438144 partition_deletion=deletedAt=-9223372036854775808, localDeletion=2147483647 columns=[[] | []]) | /127.0.0.1       | 4283                     | MutationStage-2     
Appending to commitlog                                                           | /127.0.0.1       | 4445                     | MutationStage-2     
Adding to paxos memtable                                                         | /127.0.0.1       | 4548                     | MutationStage-2     
Sending REQUEST_RESPONSE message to localhost/127.0.0.1                          | /127.0.0.1       | 4737                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
REQUEST_RESPONSE message received from /127.0.0.1                                | /127.0.0.1       | 4928                     | MessagingService-Incoming-/127.0.0.1
Processing response from /127.0.0.1                                              | /127.0.0.1       | 5028                     | RequestResponseStage-2
CAS did not apply                                                                | /127.0.0.1       | 5193                     | Native-Transport-Requests-1
****************************


13:06:20.666 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:20.730 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:20.732 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:20.740 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:20.742 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:20.824 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(6040115110160865280, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:20.830 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 927c7360-a444-42b2-963a-441624273eeb : [UPDATE achilles_embedded.simple SET consistencylist=consistencylist-:consistencylist WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [[QUORUM], 6040115110160865280, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [[QUORUM], 6040115110160865280, Wed Sep 30 19:00:00 CDT 2015]
13:06:20.870 [achilles-default-executor-19] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 927c7360-a444-42b2-963a-441624273eeb at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Executing single-partition query on simple                                       | /127.0.0.1       | 694                      | ReadStage-2         
Acquiring sstable references                                                     | /127.0.0.1       | 781                      | ReadStage-2         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 856                      | ReadStage-2         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 1210                     | ReadStage-2         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 1295                     | ReadStage-2         
Determining replicas for mutation                                                | /127.0.0.1       | 1716                     | Native-Transport-Requests-1
Adding to simple memtable                                                        | /127.0.0.1       | 2054                     | MutationStage-4     
****************************


13:06:20.876 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:20.940 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:20.942 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:20.948 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:20.950 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:21.019 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(2610377213181219840, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:21.022 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 315be3ee-db57-4e58-bb43-3c7942ee104b : [UPDATE achilles_embedded.simple SET simpleset=simpleset+:simpleset WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [[3.0, 4.0], 2610377213181219840, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [[4.0, 3.0], 2610377213181219840, Wed Sep 30 19:00:00 CDT 2015]
13:06:21.031 [achilles-default-executor-20] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 315be3ee-db57-4e58-bb43-3c7942ee104b at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 339                      | Native-Transport-Requests-2
Adding to simple memtable                                                        | /127.0.0.1       | 458                      | Native-Transport-Requests-2
****************************


13:06:21.033 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:21.110 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:21.111 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:21.120 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:21.124 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:21.191 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(1427579442361436160, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:21.198 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 4dec376f-b405-4e85-b541-c82081303888 : [SELECT consistencylist,simpleset,simplemap,value FROM achilles_embedded.simple WHERE token(id)>=:tokenValue1 AND token(id)<=:tokenValue2;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [-9223372036854775808, 9223372036854775807]
	 Encoded bound values : [-9223372036854775808, 9223372036854775807]
13:06:21.214 [achilles-default-executor-21] DEBUG i.a.a.i.entities.SimpleEntity - ResultSet[ exhausted: false, Columns[consistencylist(list<varchar>), simpleset(set<double>), simplemap(map<int, varchar>), value(varchar)]]
13:06:21.215 [achilles-default-executor-21] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 4dec376f-b405-4e85-b541-c82081303888 results : 
	consistencylist: [QUORUM, LOCAL_ONE], simpleset: [1.0, 2.0], simplemap: {10=ten, 20=twenty}, value: 0 AM

13:06:21.218 [achilles-default-executor-21] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 4dec376f-b405-4e85-b541-c82081303888 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Computing ranges to query                                                        | /127.0.0.1       | 1095                     | Native-Transport-Requests-1
Submitting range requests on 257 ranges with a concurrency of 1 (0.0 rows per range expected) | /127.0.0.1       | 1885                     | Native-Transport-Requests-1
Submitted 1 concurrent range requests                                            | /127.0.0.1       | 9359                     | Native-Transport-Requests-1
Executing seq scan across 0 sstables for (min(-9223372036854775808), max(9223372036854775807)] | /127.0.0.1       | 9459                     | ReadStage-2         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 9863                     | ReadStage-2         
****************************


13:06:21.220 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:21.283 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:21.285 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:21.293 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:21.295 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:21.371 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(5317174685022739456, '2015-10-01 00:00:00+0000', ['ONE'], {1.0}, {1: 'one'}, 'id - date1');

13:06:21.374 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(5317174685022739456, '2015-10-02 00:00:00+0000', ['TWO'], {2.0}, {2: 'two'}, 'id - date2');

13:06:21.377 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(5317174685022739456, '2015-10-03 00:00:00+0000', ['THREE'], {3.0}, {3: 'three'}, 'id - date3');

13:06:21.380 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(5317174685022739456, '2015-10-04 00:00:00+0000', ['QUORUM'], {4.0}, {4: 'four'}, 'id - date4');

13:06:21.382 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(5317174685022739456, '2015-10-05 00:00:00+0000', ['ALL'], {5.0}, {5: 'five'}, 'id - date5');

13:06:21.383 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(5317174685022739456, '2015-10-06 00:00:00+0000', ['LOCAL_ONE'], {6.0}, {6: 'six'}, 'id - date6');

13:06:21.384 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(5317174685022739456, '2015-10-07 00:00:00+0000', ['LOCAL_QUORUM'], {7.0}, {7: 'seven'}, 'id - date7');

13:06:21.386 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(5317174685022739456, '2015-10-08 00:00:00+0000', ['EACH_QUORUM'], {8.0}, {8: 'eight'}, 'id - date8');

13:06:21.387 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(5317174685022739456, '2015-10-09 00:00:00+0000', ['SERIAL'], {9.0}, {9: 'nine'}, 'id - date9');

13:06:21.391 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID fbd2475d-8e9b-4159-821b-5bb99d53099e : [SELECT * FROM achilles_embedded.simple WHERE id=:id AND date>:date_Lte AND date<=:date_Lte ORDER BY date DESC;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [5317174685022739456, Wed Sep 30 19:00:00 CDT 2015, Thu Oct 08 19:00:00 CDT 2015]
	 Encoded bound values : [5317174685022739456, Wed Sep 30 19:00:00 CDT 2015, Thu Oct 08 19:00:00 CDT 2015]
13:06:21.406 [achilles-default-executor-22] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID fbd2475d-8e9b-4159-821b-5bb99d53099e at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Executing single-partition query on simple                                       | /127.0.0.1       | 730                      | ReadStage-3         
Acquiring sstable references                                                     | /127.0.0.1       | 811                      | ReadStage-3         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 923                      | ReadStage-3         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 1106                     | ReadStage-3         
Read 2 live rows and 0 tombstone cells                                           | /127.0.0.1       | 1182                     | ReadStage-3         
****************************


13:06:21.406 [main] DEBUG i.a.a.i.entities.SimpleEntity - Query ID fbd2475d-8e9b-4159-821b-5bb99d53099e row : 
	id: 5317174685022739456, date: Thu Oct 08 19:00:00 CDT 2015, consistencylist: [SERIAL], simplemap: {9=nine}, simpleset: [9.0], value: id - date9

13:06:21.407 [main] DEBUG i.a.a.i.entities.SimpleEntity - Query ID fbd2475d-8e9b-4159-821b-5bb99d53099e row : 
	id: 5317174685022739456, date: Wed Oct 07 19:00:00 CDT 2015, consistencylist: [EACH_QUORUM], simplemap: {8=eight}, simpleset: [8.0], value: id - date8

13:06:21.412 [main] DEBUG i.a.a.i.entities.SimpleEntity - Query ID fbd2475d-8e9b-4159-821b-5bb99d53099e row : 
	id: 5317174685022739456, date: Tue Oct 06 19:00:00 CDT 2015, consistencylist: [LOCAL_QUORUM], simplemap: {7=seven}, simpleset: [7.0], value: id - date7

13:06:21.412 [main] DEBUG i.a.a.i.entities.SimpleEntity - Query ID fbd2475d-8e9b-4159-821b-5bb99d53099e row : 
	id: 5317174685022739456, date: Mon Oct 05 19:00:00 CDT 2015, consistencylist: [LOCAL_ONE], simplemap: {6=six}, simpleset: [6.0], value: id - date6

13:06:21.415 [main] DEBUG i.a.a.i.entities.SimpleEntity - Query ID fbd2475d-8e9b-4159-821b-5bb99d53099e row : 
	id: 5317174685022739456, date: Sun Oct 04 19:00:00 CDT 2015, consistencylist: [ALL], simplemap: {5=five}, simpleset: [5.0], value: id - date5

13:06:21.415 [main] DEBUG i.a.a.i.entities.SimpleEntity - Query ID fbd2475d-8e9b-4159-821b-5bb99d53099e row : 
	id: 5317174685022739456, date: Sat Oct 03 19:00:00 CDT 2015, consistencylist: [QUORUM], simplemap: {4=four}, simpleset: [4.0], value: id - date4

13:06:21.417 [main] DEBUG i.a.a.i.entities.SimpleEntity - Query ID fbd2475d-8e9b-4159-821b-5bb99d53099e row : 
	id: 5317174685022739456, date: Fri Oct 02 19:00:00 CDT 2015, consistencylist: [THREE], simplemap: {3=three}, simpleset: [3.0], value: id - date3

13:06:21.417 [main] DEBUG i.a.a.i.entities.SimpleEntity - Query ID fbd2475d-8e9b-4159-821b-5bb99d53099e row : 
	id: 5317174685022739456, date: Thu Oct 01 19:00:00 CDT 2015, consistencylist: [TWO], simplemap: {2=two}, simpleset: [2.0], value: id - date2

13:06:21.419 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:21.481 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:21.483 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:21.490 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:21.492 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:21.556 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(7947927135546940416, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:21.562 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID dfd3c70f-09a7-417f-ada8-245f140fff23 : [UPDATE achilles_embedded.simple SET simplemap=:simplemap WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [{20=new_twenty, 30=thirty}, 7947927135546940416, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [{20=new_twenty, 30=thirty}, 7947927135546940416, Wed Sep 30 19:00:00 CDT 2015]
13:06:21.570 [achilles-default-executor-23] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID dfd3c70f-09a7-417f-ada8-245f140fff23 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 697                      | Native-Transport-Requests-1
Adding to simple memtable                                                        | /127.0.0.1       | 831                      | MutationStage-3     
****************************


13:06:21.572 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:21.640 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:21.642 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:21.648 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:21.650 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:21.722 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(6431981924676670464, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:21.726 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 810caa2c-58a1-4699-97d1-3a83be0c8195 : [UPDATE achilles_embedded.simple SET simplemap[:simpleMap_key]=:simpleMap_value WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [30, thirty, 6431981924676670464, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [30, thirty, 6431981924676670464, Wed Sep 30 19:00:00 CDT 2015]
13:06:21.730 [achilles-default-executor-24] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 810caa2c-58a1-4699-97d1-3a83be0c8195 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 297                      | Native-Transport-Requests-3
Adding to simple memtable                                                        | /127.0.0.1       | 436                      | MutationStage-2     
****************************


13:06:21.732 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:21.795 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:21.797 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:21.804 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:21.806 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:21.890 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(6735961241516739584, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:21.892 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 7e4d2610-7aff-4f93-80a3-424831c0d710 : [UPDATE achilles_embedded.simple SET value=:value WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [THREE]
	 Java bound values : [new value, 6735961241516739584, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [new value, 6735961241516739584, Wed Sep 30 19:00:00 CDT 2015]
13:06:21.900 [achilles-default-executor-25] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 7e4d2610-7aff-4f93-80a3-424831c0d710 at host localhost/127.0.0.1:9042 with achieved consistency level ONE 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 199                      | Native-Transport-Requests-1
Adding to simple memtable                                                        | /127.0.0.1       | 1062                     | MutationStage-2     
****************************


13:06:21.902 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:21.969 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:21.971 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:21.979 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:21.981 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:22.045 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(4968643295100938240, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:22.053 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 2c409b8d-0be6-481e-8fbc-dbeb5c0aab92 : [SELECT consistencylist,simpleset,simplemap,value FROM achilles_embedded.simple WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [4968643295100938240, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [4968643295100938240, Wed Sep 30 19:00:00 CDT 2015]
13:06:22.057 [achilles-default-executor-26] DEBUG i.a.a.i.entities.SimpleEntity - ResultSet[ exhausted: false, Columns[consistencylist(list<varchar>), simpleset(set<double>), simplemap(map<int, varchar>), value(varchar)]]
13:06:22.057 [achilles-default-executor-26] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 2c409b8d-0be6-481e-8fbc-dbeb5c0aab92 results : 
	consistencylist: [QUORUM, LOCAL_ONE], simpleset: [1.0, 2.0], simplemap: {10=ten, 20=twenty}, value: 0 AM

13:06:22.060 [achilles-default-executor-26] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 2c409b8d-0be6-481e-8fbc-dbeb5c0aab92 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Executing single-partition query on simple                                       | /127.0.0.1       | 681                      | ReadStage-2         
Acquiring sstable references                                                     | /127.0.0.1       | 808                      | ReadStage-2         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 886                      | ReadStage-2         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 1049                     | ReadStage-2         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 1106                     | ReadStage-2         
****************************


13:06:22.061 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:22.140 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:22.141 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:22.148 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:22.150 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:22.226 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:22.290 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:22.292 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:22.298 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:22.300 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:22.375 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(959073652953403392, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:22.378 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID e692b947-6e85-463e-baf6-4cd9079c87f9 : [UPDATE achilles_embedded.simple SET simplemap[:simpleMap_key]=:simpleMap_value WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [20, null, 959073652953403392, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [20, null, 959073652953403392, Wed Sep 30 19:00:00 CDT 2015]
13:06:22.384 [achilles-default-executor-27] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID e692b947-6e85-463e-baf6-4cd9079c87f9 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 289                      | Native-Transport-Requests-1
Adding to simple memtable                                                        | /127.0.0.1       | 556                      | MutationStage-2     
****************************


13:06:22.386 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:22.455 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:22.457 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:22.463 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:22.465 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:22.533 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(8131464061582711808, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:22.540 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID a8822505-eea4-4426-8dd8-6c4af56d4cea : [DELETE value FROM achilles_embedded.simple WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [QUORUM]
	 Java bound values : [8131464061582711808, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [8131464061582711808, Wed Sep 30 19:00:00 CDT 2015]
13:06:22.548 [achilles-default-executor-28] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID a8822505-eea4-4426-8dd8-6c4af56d4cea at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 281                      | Native-Transport-Requests-2
Adding to simple memtable                                                        | /127.0.0.1       | 420                      | MutationStage-1     
****************************


13:06:22.550 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:22.626 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:22.628 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:22.634 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:22.636 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:22.707 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(4641471987779246080, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:22.710 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID dfc54ca0-43bf-419e-9479-ea75b4085444 : [UPDATE achilles_embedded.simple SET consistencylist=consistencylist-:consistencylist WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [[LOCAL_ONE, QUORUM], 4641471987779246080, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [[LOCAL_ONE, QUORUM], 4641471987779246080, Wed Sep 30 19:00:00 CDT 2015]
13:06:22.717 [achilles-default-executor-29] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID dfc54ca0-43bf-419e-9479-ea75b4085444 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Executing single-partition query on simple                                       | /127.0.0.1       | 349                      | ReadStage-1         
Acquiring sstable references                                                     | /127.0.0.1       | 413                      | ReadStage-1         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 489                      | ReadStage-1         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 656                      | ReadStage-1         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 735                      | ReadStage-1         
Determining replicas for mutation                                                | /127.0.0.1       | 997                      | Native-Transport-Requests-2
Adding to simple memtable                                                        | /127.0.0.1       | 1113                     | MutationStage-1     
****************************


13:06:22.718 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:22.781 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:22.783 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:22.789 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:22.792 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:22.866 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(3702799331648517120, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:22.872 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID fe30423c-b885-43d5-b278-177ea328ece3 : [UPDATE achilles_embedded.simple SET consistencylist[0]=:consistencylist,consistencylist[1]=:consistencylist WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [ONE, TWO, 3702799331648517120, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [ONE, TWO, 3702799331648517120, Wed Sep 30 19:00:00 CDT 2015]
13:06:22.882 [achilles-default-executor-30] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID fe30423c-b885-43d5-b278-177ea328ece3 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Executing single-partition query on simple                                       | /127.0.0.1       | 397                      | ReadStage-3         
Acquiring sstable references                                                     | /127.0.0.1       | 482                      | ReadStage-3         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 746                      | ReadStage-3         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 926                      | ReadStage-3         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 985                      | ReadStage-3         
Determining replicas for mutation                                                | /127.0.0.1       | 1436                     | Native-Transport-Requests-1
Adding to simple memtable                                                        | /127.0.0.1       | 1534                     | Native-Transport-Requests-1
****************************


13:06:22.884 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:22.956 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:22.958 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:22.964 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:22.967 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:23.031 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(5301347565729093632, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:23.034 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 28f860bf-a1f2-4819-80cb-1003f31a2e93 : [UPDATE achilles_embedded.simple SET consistencylist=consistencylist+:consistencylist WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [[ALL], 5301347565729093632, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [[ALL], 5301347565729093632, Wed Sep 30 19:00:00 CDT 2015]
13:06:23.042 [achilles-default-executor-31] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 28f860bf-a1f2-4819-80cb-1003f31a2e93 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 320                      | Native-Transport-Requests-2
Adding to simple memtable                                                        | /127.0.0.1       | 463                      | MutationStage-1     
****************************


13:06:23.043 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:23.115 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:23.116 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:23.123 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:23.125 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:23.198 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(1841426383716121600, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:23.202 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 524c1b9e-329a-4d06-9b9b-86690db6f7f7 : [UPDATE achilles_embedded.simple SET consistencylist=:consistencylist WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [[TWO, THREE], 1841426383716121600, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [[TWO, THREE], 1841426383716121600, Wed Sep 30 19:00:00 CDT 2015]
13:06:23.205 [achilles-default-executor-32] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 524c1b9e-329a-4d06-9b9b-86690db6f7f7 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 278                      | Native-Transport-Requests-2
Adding to simple memtable                                                        | /127.0.0.1       | 414                      | MutationStage-1     
****************************


13:06:23.206 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:23.270 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:23.271 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:23.278 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:23.280 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:23.365 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(6770908221601855488, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:23.369 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 4ddf9867-1320-469a-a750-e1eaff5fe8d2 : [UPDATE achilles_embedded.simple SET consistencylist[0]=:consistencylist WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [null, 6770908221601855488, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [null, 6770908221601855488, Wed Sep 30 19:00:00 CDT 2015]
13:06:23.377 [achilles-default-executor-33] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 4ddf9867-1320-469a-a750-e1eaff5fe8d2 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Executing single-partition query on simple                                       | /127.0.0.1       | 541                      | ReadStage-1         
Acquiring sstable references                                                     | /127.0.0.1       | 615                      | ReadStage-1         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 684                      | ReadStage-1         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 838                      | ReadStage-1         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 897                      | ReadStage-1         
Determining replicas for mutation                                                | /127.0.0.1       | 1222                     | Native-Transport-Requests-4
Adding to simple memtable                                                        | /127.0.0.1       | 1313                     | Native-Transport-Requests-4
****************************


13:06:23.379 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:23.453 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:23.455 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:23.461 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:23.463 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:23.527 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:23.606 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:23.608 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:23.615 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:23.617 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:23.689 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(3041997459177866240, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:23.693 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 5a3698a8-6ffa-46b8-bd9d-2270bc3ccd53 : [DELETE consistencylist,simplemap FROM achilles_embedded.simple WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [TWO]
	 Java bound values : [3041997459177866240, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [3041997459177866240, Wed Sep 30 19:00:00 CDT 2015]
13:06:23.697 [achilles-default-executor-34] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 5a3698a8-6ffa-46b8-bd9d-2270bc3ccd53 at host localhost/127.0.0.1:9042 with achieved consistency level ONE 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 198                      | Native-Transport-Requests-2
Adding to simple memtable                                                        | /127.0.0.1       | 360                      | MutationStage-1     
****************************


13:06:23.697 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:23.759 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:23.760 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:23.767 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:23.769 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:23.858 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(6610146672965863424, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:23.865 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID a0186c90-553d-4909-b934-a8f6d0a3357a : [UPDATE achilles_embedded.simple SET simplemap=simplemap+:simplemap WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [{20=new_twenty, 30=thirty}, 6610146672965863424, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [{20=new_twenty, 30=thirty}, 6610146672965863424, Wed Sep 30 19:00:00 CDT 2015]
13:06:23.873 [achilles-default-executor-35] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID a0186c90-553d-4909-b934-a8f6d0a3357a at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 292                      | Native-Transport-Requests-2
Adding to simple memtable                                                        | /127.0.0.1       | 888                      | MutationStage-1     
****************************


13:06:23.875 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:23.945 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:23.947 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:23.954 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:23.956 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:24.024 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(7038066474624880640, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:24.043 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID cd26b931-16b1-40df-8a2a-83f7bb4fe439 : [DELETE consistencylist,simplemap FROM achilles_embedded.simple WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [7038066474624880640, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [7038066474624880640, Wed Sep 30 19:00:00 CDT 2015]
13:06:24.050 [achilles-default-executor-36] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID cd26b931-16b1-40df-8a2a-83f7bb4fe439 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 325                      | Native-Transport-Requests-1
Adding to simple memtable                                                        | /127.0.0.1       | 820                      | MutationStage-3     
****************************


13:06:24.053 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:24.123 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:24.125 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:24.130 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:24.133 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:24.206 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(8419546197315643392, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:24.210 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID f9e7166f-fbe1-4b10-a70f-40a228f4b897 : [UPDATE achilles_embedded.simple SET simpleset=simpleset-:simpleset WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [[1.0], 8419546197315643392, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [[1.0], 8419546197315643392, Wed Sep 30 19:00:00 CDT 2015]
13:06:24.221 [achilles-default-executor-37] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID f9e7166f-fbe1-4b10-a70f-40a228f4b897 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 303                      | Native-Transport-Requests-1
Adding to simple memtable                                                        | /127.0.0.1       | 750                      | MutationStage-3     
****************************


13:06:24.222 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:24.286 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:24.287 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:24.293 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:24.295 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:24.371 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(44089882902038528, '2015-10-01 00:00:00+0000', ['ONE'], {1.0}, {1: 'one'}, 'id - date1');

13:06:24.373 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(44089882902038528, '2015-10-02 00:00:00+0000', ['TWO'], {2.0}, {2: 'two'}, 'id - date2');

13:06:24.374 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(44089882902038528, '2015-10-03 00:00:00+0000', ['THREE'], {3.0}, {3: 'three'}, 'id - date3');

13:06:24.375 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(44089882902038528, '2015-10-04 00:00:00+0000', ['QUORUM'], {4.0}, {4: 'four'}, 'id - date4');

13:06:24.376 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(44089882902038528, '2015-10-05 00:00:00+0000', ['ALL'], {5.0}, {5: 'five'}, 'id - date5');

13:06:24.377 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(44089882902038528, '2015-10-06 00:00:00+0000', ['LOCAL_ONE'], {6.0}, {6: 'six'}, 'id - date6');

13:06:24.378 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(44089882902038528, '2015-10-07 00:00:00+0000', ['LOCAL_QUORUM'], {7.0}, {7: 'seven'}, 'id - date7');

13:06:24.379 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(44089882902038528, '2015-10-08 00:00:00+0000', ['EACH_QUORUM'], {8.0}, {8: 'eight'}, 'id - date8');

13:06:24.381 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(44089882902038528, '2015-10-09 00:00:00+0000', ['SERIAL'], {9.0}, {9: 'nine'}, 'id - date9');

13:06:24.382 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID adc50bb1-4436-4333-816d-3d6bcb84f9ec : [SELECT consistencylist,simpleset,simplemap,value,simplemap FROM achilles_embedded.simple WHERE id=:id AND date>=:date_Lt AND date<:date_Lt;] with CONSISTENCY LEVEL [TWO]
	 Java bound values : [44089882902038528, Wed Sep 30 19:00:00 CDT 2015, Thu Oct 08 19:00:00 CDT 2015]
	 Encoded bound values : [44089882902038528, Wed Sep 30 19:00:00 CDT 2015, Thu Oct 08 19:00:00 CDT 2015]
13:06:24.387 [achilles-default-executor-38] DEBUG i.a.a.i.entities.SimpleEntity - ResultSet[ exhausted: false, Columns[consistencylist(list<varchar>), simpleset(set<double>), simplemap(map<int, varchar>), value(varchar), simplemap(map<int, varchar>)]]
13:06:24.388 [achilles-default-executor-38] DEBUG i.a.a.i.entities.SimpleEntity - Query ID adc50bb1-4436-4333-816d-3d6bcb84f9ec results : 
	consistencylist: [ONE], simpleset: [1.0], simplemap: {1=one}, value: id - date1, simplemap: {1=one}
	consistencylist: [TWO], simpleset: [2.0], simplemap: {2=two}, value: id - date2, simplemap: {2=two}
	consistencylist: [THREE], simpleset: [3.0], simplemap: {3=three}, value: id - date3, simplemap: {3=three}
	consistencylist: [QUORUM], simpleset: [4.0], simplemap: {4=four}, value: id - date4, simplemap: {4=four}
	consistencylist: [ALL], simpleset: [5.0], simplemap: {5=five}, value: id - date5, simplemap: {5=five}
	consistencylist: [LOCAL_ONE], simpleset: [6.0], simplemap: {6=six}, value: id - date6, simplemap: {6=six}
	consistencylist: [LOCAL_QUORUM], simpleset: [7.0], simplemap: {7=seven}, value: id - date7, simplemap: {7=seven}
	consistencylist: [EACH_QUORUM], simpleset: [8.0], simplemap: {8=eight}, value: id - date8, simplemap: {8=eight}

13:06:24.392 [achilles-default-executor-38] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID adc50bb1-4436-4333-816d-3d6bcb84f9ec at host localhost/127.0.0.1:9042 with achieved consistency level ONE 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Executing single-partition query on simple                                       | /127.0.0.1       | 560                      | ReadStage-1         
Acquiring sstable references                                                     | /127.0.0.1       | 663                      | ReadStage-1         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 988                      | ReadStage-1         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 1406                     | ReadStage-1         
Read 8 live rows and 0 tombstone cells                                           | /127.0.0.1       | 1633                     | ReadStage-1         
****************************


13:06:24.395 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:24.460 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:24.462 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:24.467 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:24.469 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:24.533 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS achilles_embedded.update_dsl_with_schema_name( id bigint, date timestamp, consistencylist list<text>, simplemap map<int, text>, simpleset set<double>, value text, PRIMARY KEY(id, date)) WITH CLUSTERING ORDER BY(date ASC);

13:06:24.765 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.update_dsl_with_schema_name(id, date, consistencylist, simpleset, simplemap, value) VALUES(830094557082766336, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:24.770 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 50fc89b9-5701-4193-8c2e-65226a6c78ea : [UPDATE achilles_embedded.update_dsl_with_schema_name SET value=:value WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [new value, 830094557082766336, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [new value, 830094557082766336, Wed Sep 30 19:00:00 CDT 2015]
13:06:24.775 [achilles-default-executor-39] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 50fc89b9-5701-4193-8c2e-65226a6c78ea at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 261                      | Native-Transport-Requests-1
Adding to update_dsl_with_schema_name memtable                                   | /127.0.0.1       | 463                      | MutationStage-2     
****************************


13:06:24.776 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:24.858 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:24.859 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:24.864 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:24.866 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:24.928 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(1813935408865321984, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:24.947 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 7ce88087-b41e-4371-9749-b6ef0369f6ff : [UPDATE achilles_embedded.simple SET value=:value WHERE id=:id AND date=:date IF value=:value;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [new value, 1813935408865321984, Wed Sep 30 19:00:00 CDT 2015, 0 AM]
	 Encoded bound values : [new value, 1813935408865321984, Wed Sep 30 19:00:00 CDT 2015, 0 AM]
13:06:24.969 [achilles-default-executor-40] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 7ce88087-b41e-4371-9749-b6ef0369f6ff at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Preparing c8377740-29f4-11ec-edc8-c19917df4342                                   | /127.0.0.1       | 563                      | Native-Transport-Requests-1
Sending PAXOS_PREPARE message to localhost/127.0.0.1                             | /127.0.0.1       | 731                      | MessagingService-Outgoing-localhost/127.0.0.1-Small
PAXOS_PREPARE message received from /127.0.0.1                                   | /127.0.0.1       | 1079                     | MessagingService-Incoming-/127.0.0.1
Executing single-partition query on paxos                                        | /127.0.0.1       | 1468                     | MutationStage-3     
Acquiring sstable references                                                     | /127.0.0.1       | 1526                     | MutationStage-3     
Merging memtable contents                                                        | /127.0.0.1       | 1557                     | MutationStage-3     
Read 0 live rows and 0 tombstone cells                                           | /127.0.0.1       | 1692                     | MutationStage-3     
Promising ballot c8377740-29f4-11ec-edc8-c19917df4342                            | /127.0.0.1       | 1740                     | MutationStage-3     
Appending to commitlog                                                           | /127.0.0.1       | 1835                     | MutationStage-3     
Adding to paxos memtable                                                         | /127.0.0.1       | 1907                     | MutationStage-3     
Sending REQUEST_RESPONSE message to localhost/127.0.0.1                          | /127.0.0.1       | 2033                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
REQUEST_RESPONSE message received from /127.0.0.1                                | /127.0.0.1       | 2310                     | MessagingService-Incoming-/127.0.0.1
Processing response from /127.0.0.1                                              | /127.0.0.1       | 2519                     | RequestResponseStage-4
Reading existing values for CAS precondition                                     | /127.0.0.1       | 2609                     | Native-Transport-Requests-1
Executing single-partition query on simple                                       | /127.0.0.1       | 2769                     | ReadStage-2         
Acquiring sstable references                                                     | /127.0.0.1       | 2813                     | ReadStage-2         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 2876                     | ReadStage-2         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 3017                     | ReadStage-2         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 3067                     | ReadStage-2         
CAS precondition is met; proposing client-requested updates for c8377740-29f4-11ec-edc8-c19917df4342 | /127.0.0.1       | 5994                     | Native-Transport-Requests-1
Sending PAXOS_PROPOSE message to localhost/127.0.0.1                             | /127.0.0.1       | 6220                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
PAXOS_PROPOSE message received from /127.0.0.1                                   | /127.0.0.1       | 6640                     | MessagingService-Incoming-/127.0.0.1
Executing single-partition query on paxos                                        | /127.0.0.1       | 7004                     | MutationStage-3     
Acquiring sstable references                                                     | /127.0.0.1       | 7065                     | MutationStage-3     
Merging memtable contents                                                        | /127.0.0.1       | 7093                     | MutationStage-3     
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 7259                     | MutationStage-3     
Accepting proposal Commit(c8377740-29f4-11ec-edc8-c19917df4342, [achilles_embedded.simple] key=1813935408865321984 partition_deletion=deletedAt=-9223372036854775808, localDeletion=2147483647 columns=[[] | [value]]
    Row[info=[ts=-9223372036854775808] ]: date=2015-09-30 19:00-0500 | [value=new value ts=1633889184948000]) | /127.0.0.1       | 7670                     | MutationStage-3     
Appending to commitlog                                                           | /127.0.0.1       | 7851                     | MutationStage-3     
Adding to paxos memtable                                                         | /127.0.0.1       | 7920                     | MutationStage-3     
Sending REQUEST_RESPONSE message to localhost/127.0.0.1                          | /127.0.0.1       | 8064                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
REQUEST_RESPONSE message received from /127.0.0.1                                | /127.0.0.1       | 8409                     | MessagingService-Incoming-/127.0.0.1
Processing response from /127.0.0.1                                              | /127.0.0.1       | 8491                     | RequestResponseStage-4
Parsing SELECT truncated_at FROM system.local WHERE key = 'local'                | /127.0.0.1       | 9121                     | MutationStage-3     
Preparing statement                                                              | /127.0.0.1       | 9244                     | MutationStage-3     
Executing single-partition query on local                                        | /127.0.0.1       | 9436                     | MutationStage-3     
Acquiring sstable references                                                     | /127.0.0.1       | 9479                     | MutationStage-3     
Skipped 0/3 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 9545                     | MutationStage-3     
Key cache hit for sstable 145                                                    | /127.0.0.1       | 9651                     | MutationStage-3     
Key cache hit for sstable 146                                                    | /127.0.0.1       | 9842                     | MutationStage-3     
Partition index with 0 entries found for sstable 147                             | /127.0.0.1       | 9993                     | MutationStage-3     
Merged data from memtables and 3 sstables                                        | /127.0.0.1       | 10332                    | MutationStage-3     
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 10399                    | MutationStage-3     
Committing proposal Commit(c8377740-29f4-11ec-edc8-c19917df4342, [achilles_embedded.simple] key=1813935408865321984 partition_deletion=deletedAt=-9223372036854775808, localDeletion=2147483647 columns=[[] | [value]]
    Row[info=[ts=-9223372036854775808] ]: date=2015-09-30 19:00-0500 | [value=new value ts=1633889184948000]) | /127.0.0.1       | 10674                    | MutationStage-3     
Appending to commitlog                                                           | /127.0.0.1       | 10736                    | MutationStage-3     
Adding to simple memtable                                                        | /127.0.0.1       | 10800                    | MutationStage-3     
Parsing UPDATE system.paxos USING TIMESTAMP ? AND TTL ? SET proposal_ballot = null, proposal = null, most_recent_commit_at = ?, most_recent_commit = ?, most_recent_commit_version = ? WHERE row_key = ? AND cf_id = ? | /127.0.0.1       | 10951                    | MutationStage-3     
Preparing statement                                                              | /127.0.0.1       | 11161                    | MutationStage-3     
Appending to commitlog                                                           | /127.0.0.1       | 11400                    | MutationStage-3     
Adding to paxos memtable                                                         | /127.0.0.1       | 11474                    | MutationStage-3     
CAS applied successfully                                                         | /127.0.0.1       | 11598                    | Native-Transport-Requests-1
****************************


13:06:24.972 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:25.035 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:25.041 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_bytebuffer(
		id bigint,
		value blob,
		PRIMARY KEY(id));

13:06:25.292 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 2ae7444c-e0b1-4d76-ad88-fac2678e43d4 : [INSERT INTO achilles_embedded.table_with_bytebuffer (id,value) VALUES (:id,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [587394883774248960, 0xc5deafe478301ebe3c9f7637ed947e52... (100), 0]
	 Encoded bound values : [587394883774248960, 0xc5deafe478301ebe3c9f7637ed947e52... (100), 0]
13:06:25.298 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:25.303 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:25.305 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:25.368 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(1869289701378583552, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:25.371 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 74d6de36-0f25-4c54-aef5-18d415672cba : [SELECT id,date,consistencylist,simplemap,simpleset,value FROM achilles_embedded.simple WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [1869289701378583552, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [1869289701378583552, Wed Sep 30 19:00:00 CDT 2015]
13:06:25.376 [achilles-default-executor-42] DEBUG i.a.a.i.entities.SimpleEntity - ResultSet[ exhausted: false, Columns[id(bigint), date(timestamp), consistencylist(list<varchar>), simplemap(map<int, varchar>), simpleset(set<double>), value(varchar)]]
13:06:25.377 [achilles-default-executor-42] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 74d6de36-0f25-4c54-aef5-18d415672cba results : 
	id: 1869289701378583552, date: Wed Sep 30 19:00:00 CDT 2015, consistencylist: [QUORUM, LOCAL_ONE], simplemap: {10=ten, 20=twenty}, simpleset: [1.0, 2.0], value: 0 AM

13:06:25.379 [achilles-default-executor-42] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 74d6de36-0f25-4c54-aef5-18d415672cba at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Executing single-partition query on simple                                       | /127.0.0.1       | 553                      | ReadStage-3         
Acquiring sstable references                                                     | /127.0.0.1       | 625                      | ReadStage-3         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 693                      | ReadStage-3         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 864                      | ReadStage-3         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 914                      | ReadStage-3         
****************************


13:06:25.381 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:25.445 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:25.451 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:25.452 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:25.515 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(5733421652857360384, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:25.520 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 453b3b16-e9bb-43c4-affc-d9efcefb0dae : [DELETE FROM achilles_embedded.simple WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [5733421652857360384, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [5733421652857360384, Wed Sep 30 19:00:00 CDT 2015]
13:06:25.530 [achilles-default-executor-43] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 453b3b16-e9bb-43c4-affc-d9efcefb0dae at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 1329                     | Native-Transport-Requests-3
Adding to simple memtable                                                        | /127.0.0.1       | 1590                     | MutationStage-5     
****************************


13:06:25.530 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:25.611 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:25.618 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:25.620 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:25.692 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 6f472b7c-1795-426c-9ed3-52e8a7a7d6aa : [INSERT INTO achilles_embedded.simple (id,date,consistencylist,simplemap,simpleset,value) VALUES (:id,:date,:consistencylist,:simplemap,:simpleset,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [6878576195805747200, Sun Oct 10 13:06:25 CDT 2021, null, null, null, value, 0]
	 Encoded bound values : [6878576195805747200, Sun Oct 10 13:06:25 CDT 2021, null, null, null, value, 0]
13:06:25.698 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:25.700 [achilles-default-executor-44] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 6f472b7c-1795-426c-9ed3-52e8a7a7d6aa at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 333                      | Native-Transport-Requests-4
Adding to simple memtable                                                        | /127.0.0.1       | 435                      | Native-Transport-Requests-4
****************************


13:06:25.761 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:25.768 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:25.770 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:25.857 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 468e732f-2af3-459f-8f28-375f99d40633 : [INSERT INTO achilles_embedded.simple (id,date,consistencylist,simplemap,simpleset,value) VALUES (:id,:date,:consistencylist,:simplemap,:simpleset,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [7889166598002758656, Sun Oct 10 13:06:25 CDT 2021, null, null, null, val, 0]
	 Encoded bound values : [7889166598002758656, Sun Oct 10 13:06:25 CDT 2021, null, null, null, val, 0]
13:06:25.862 [achilles-default-executor-45] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 468e732f-2af3-459f-8f28-375f99d40633 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 370                      | Native-Transport-Requests-5
Adding to simple memtable                                                        | /127.0.0.1       | 479                      | Native-Transport-Requests-5
****************************


13:06:25.863 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID b7aee31e-01a4-4bcc-adda-d18207c6ef5b : [INSERT INTO achilles_embedded.simple (id,date,consistencylist,simplemap,simpleset,value) VALUES (:id,:date,:consistencylist,:simplemap,:simpleset,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [3477209560360878080, Sun Oct 10 13:06:25 CDT 2021, null, null, null, val, 0]
	 Encoded bound values : [3477209560360878080, Sun Oct 10 13:06:25 CDT 2021, null, null, null, val, 0]
13:06:25.877 [achilles-default-executor-46] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID b7aee31e-01a4-4bcc-adda-d18207c6ef5b at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 364                      | Native-Transport-Requests-2
Adding to simple memtable                                                        | /127.0.0.1       | 461                      | Native-Transport-Requests-2
****************************


13:06:25.877 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 2625bc74-7b8e-43aa-9254-19811d9dc160 : [INSERT INTO achilles_embedded.simple (id,date,consistencylist,simplemap,simpleset,value) VALUES (:id,:date,:consistencylist,:simplemap,:simpleset,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [2101654578524866560, Sun Oct 10 13:06:25 CDT 2021, null, null, null, val, 0]
	 Encoded bound values : [2101654578524866560, Sun Oct 10 13:06:25 CDT 2021, null, null, null, val, 0]
13:06:25.881 [achilles-default-executor-47] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 2625bc74-7b8e-43aa-9254-19811d9dc160 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 257                      | Native-Transport-Requests-1
Adding to simple memtable                                                        | /127.0.0.1       | 330                      | Native-Transport-Requests-1
****************************


13:06:25.887 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 3f9f6680-7080-4a4b-9258-783424fc7adb : [SELECT * FROM achilles_embedded.simple;] with CONSISTENCY LEVEL [null]
13:06:25.890 [achilles-default-executor-48] DEBUG i.a.a.i.entities.SimpleEntity - ResultSet[ exhausted: false, Columns[id(bigint), date(timestamp), consistencylist(list<varchar>), simplemap(map<int, varchar>), simpleset(set<double>), value(varchar)]]
13:06:25.890 [achilles-default-executor-48] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 3f9f6680-7080-4a4b-9258-783424fc7adb results : 
	id: 2101654578524866560, date: Sun Oct 10 13:06:25 CDT 2021, consistencylist: [], simplemap: {}, simpleset: [], value: val

13:06:25.890 [achilles-default-executor-48] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 3f9f6680-7080-4a4b-9258-783424fc7adb at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
****************************


13:06:25.891 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:25.960 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:25.984 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:25.986 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:25.997 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.custom_constructor_declared_fields_udt(
		idx bigint,
		value text);

13:06:26.156 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.custom_constructor_declared_fields(
		id bigint,
		name text,
		udt frozen<achilles_embedded.custom_constructor_declared_fields_udt>,
		value double,
		PRIMARY KEY(id));

13:06:26.407 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.custom_constructor_declared_fields
13:06:26.504 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.custom_constructor_declared_fields(id, name, value, udt) VALUES(8407634036026882048, 'my_name', 3.0, {idx: 4, value: 'my_value_udt'});

13:06:26.509 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 6ff1b29b-9fbb-4290-9022-b47c8115ac8e : [SELECT id,value,udt FROM achilles_embedded.custom_constructor_declared_fields WHERE id=?] with CONSISTENCY LEVEL [null]
13:06:26.511 [achilles-default-executor-49] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), value(double), udt(achilles_embedded.custom_constructor_declared_fields_udt)]]
13:06:26.512 [achilles-default-executor-49] DEBUG ACHILLES_DML_STATEMENT - Query ID 6ff1b29b-9fbb-4290-9022-b47c8115ac8e results : 
	id: 8407634036026882048, value: 3.0, udt: {idx:4,value:'my_value_udt'}

13:06:26.516 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.custom_constructor_declared_fields
13:06:26.589 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:26.591 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:26.595 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.custom_constructor_declared_fields_udt(
		idx bigint,
		value text);

13:06:26.597 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.custom_constructor_declared_fields(
		id bigint,
		name text,
		udt frozen<achilles_embedded.custom_constructor_declared_fields_udt>,
		value double,
		PRIMARY KEY(id));

13:06:26.598 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.custom_constructor_declared_fields
13:06:26.671 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.custom_constructor_declared_fields(id, name, value, udt) VALUES(1104830573932401664, 'my_name', 3.0, {idx: 4, value: 'my_value_udt'});

13:06:26.677 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID d0e16b43-82bf-4c57-8ca6-a9ba6719c5d1 : [SELECT * FROM achilles_embedded.custom_constructor_declared_fields WHERE id=:id;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [1104830573932401664]
	 Encoded bound values : [1104830573932401664]
13:06:26.681 [achilles-default-executor-50] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), name(varchar), udt(achilles_embedded.custom_constructor_declared_fields_udt), value(double)]]
13:06:26.682 [achilles-default-executor-50] DEBUG ACHILLES_DML_STATEMENT - Query ID d0e16b43-82bf-4c57-8ca6-a9ba6719c5d1 results : 
	id: 1104830573932401664, name: my_name, udt: {idx:4,value:'my_value_udt'}, value: 3.0

13:06:26.682 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.custom_constructor_declared_fields
13:06:26.758 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:26.760 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:26.768 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.custom_constructor_declared_fields_udt(
		idx bigint,
		value text);

13:06:26.769 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.custom_constructor_declared_fields(
		id bigint,
		name text,
		udt frozen<achilles_embedded.custom_constructor_declared_fields_udt>,
		value double,
		PRIMARY KEY(id));

13:06:26.771 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.custom_constructor_declared_fields
13:06:26.856 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.custom_constructor_declared_fields(id, name, value, udt) VALUES(4744191074293900288, 'my_name', 3.0, {idx: 4, value: 'my_value_udt'});

13:06:26.858 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID e613cdd1-178f-4cce-9ea2-313cd9b8e10e : [SELECT id,name,udt,value FROM achilles_embedded.custom_constructor_declared_fields WHERE id=:id;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [4744191074293900288]
	 Encoded bound values : [4744191074293900288]
13:06:26.860 [achilles-default-executor-51] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), name(varchar), udt(achilles_embedded.custom_constructor_declared_fields_udt), value(double)]]
13:06:26.860 [achilles-default-executor-51] DEBUG ACHILLES_DML_STATEMENT - Query ID e613cdd1-178f-4cce-9ea2-313cd9b8e10e results : 
	id: 4744191074293900288, name: my_name, udt: {idx:4,value:'my_value_udt'}, value: 3.0

13:06:26.860 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.custom_constructor_declared_fields
13:06:26.926 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:26.934 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:27.086 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_case_sensitive_pk(
		"partitionKey" bigint,
		"clusteringColumn" bigint,
		priority int,
		"listString" list<text>,
		"mapIntString" map<int, text>,
		"setString" set<text>,
		"udtWithNoKeyspace" frozen<achilles_embedded.no_ks>,
		PRIMARY KEY("partitionKey", "clusteringColumn", priority))
	WITH CLUSTERING ORDER BY("clusteringColumn" ASC, priority ASC);

13:06:27.314 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:06:27.377 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_case_sensitive_pk("partitionKey", "clusteringColumn", priority, "listString", "setString", "mapIntString", "udtWithNoKeyspace") VALUES (3597150914161674240, 10, 1, ['1', '2'], {'1', '2'}, {1: '1', 2: '2'}, {id: 1, "VALUE": 'test'});

13:06:27.394 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 31ed9288-2cf7-46c8-b229-07f320bd3401 : [SELECT "listString","setString","mapIntString","udtWithNoKeyspace" FROM achilles_embedded.entity_with_case_sensitive_pk WHERE "partitionKey"=:"partitionKey" AND ("clusteringColumn",priority)>=(:"clusteringColumn",:priority) AND ("clusteringColumn",priority)<=(:"clusteringColumn",:priority);] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [3597150914161674240, 9, 1, 11, 1]
	 Encoded bound values : [3597150914161674240, 9, 1, 11, 1]
13:06:27.398 [achilles-default-executor-52] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[listString(list<varchar>), setString(set<varchar>), mapIntString(map<int, varchar>), udtWithNoKeyspace(achilles_embedded.no_ks)]]
13:06:27.399 [achilles-default-executor-52] DEBUG ACHILLES_DML_STATEMENT - Query ID 31ed9288-2cf7-46c8-b229-07f320bd3401 results : 
	listString: [1, 2], setString: [1, 2], mapIntString: {1=1, 2=2}, udtWithNoKeyspace: {id:1,"VALUE":'test'}

13:06:27.400 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:06:27.472 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:27.477 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:27.479 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_case_sensitive_pk(
		"partitionKey" bigint,
		"clusteringColumn" bigint,
		priority int,
		"listString" list<text>,
		"mapIntString" map<int, text>,
		"setString" set<text>,
		"udtWithNoKeyspace" frozen<achilles_embedded.no_ks>,
		PRIMARY KEY("partitionKey", "clusteringColumn", priority))
	WITH CLUSTERING ORDER BY("clusteringColumn" ASC, priority ASC);

13:06:27.480 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:06:27.553 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 65f298e1-fc13-4682-9b60-e8f64d023980 : [INSERT INTO achilles_embedded.entity_with_case_sensitive_pk ("partitionKey","clusteringColumn",priority,"listString","mapIntString","setString","udtWithNoKeyspace") VALUES (:"partitionKey",:"clusteringColumn",:priority,:"listString",:"mapIntString",:"setString",:"udtWithNoKeyspace") USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [971826005764134912, 406352719791395840, 1, null, null, null, null, 0]
	 Encoded bound values : [971826005764134912, 406352719791395840, 1, null, null, null, null, 0]
13:06:27.555 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID a0934e36-438a-4c4a-95e4-46699fa0d283 : [DELETE FROM achilles_embedded.entity_with_case_sensitive_pk WHERE "partitionKey"=:"partitionKey" AND "clusteringColumn"=:"clusteringColumn" AND priority=:priority;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [971826005764134912, 406352719791395840, 1]
	 Encoded bound values : [971826005764134912, 406352719791395840, 1]
13:06:27.557 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 02eba1da-480a-41d6-90a4-dd9f0ab53a1e : [SELECT "partitionKey","clusteringColumn",priority,"listString","mapIntString","setString","udtWithNoKeyspace" FROM achilles_embedded.entity_with_case_sensitive_pk WHERE "partitionKey"=:"partitionKey" AND "clusteringColumn"=:"clusteringColumn" AND priority=:priority;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [971826005764134912, 406352719791395840, 1]
	 Encoded bound values : [971826005764134912, 406352719791395840, 1]
13:06:27.559 [achilles-default-executor-55] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: true, Columns[partitionKey(bigint), clusteringColumn(bigint), priority(int), listString(list<varchar>), mapIntString(map<int, varchar>), setString(set<varchar>), udtWithNoKeyspace(achilles_embedded.no_ks)]]
13:06:27.559 [achilles-default-executor-55] DEBUG ACHILLES_DML_STATEMENT - Query ID 02eba1da-480a-41d6-90a4-dd9f0ab53a1e results : 

13:06:27.559 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:06:27.622 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:27.627 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:27.628 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_case_sensitive_pk(
		"partitionKey" bigint,
		"clusteringColumn" bigint,
		priority int,
		"listString" list<text>,
		"mapIntString" map<int, text>,
		"setString" set<text>,
		"udtWithNoKeyspace" frozen<achilles_embedded.no_ks>,
		PRIMARY KEY("partitionKey", "clusteringColumn", priority))
	WITH CLUSTERING ORDER BY("clusteringColumn" ASC, priority ASC);

13:06:27.630 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:06:27.710 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_case_sensitive_pk("partitionKey", "clusteringColumn", priority, "listString", "setString", "mapIntString", "udtWithNoKeyspace") VALUES (4068393286448871424, 10, 1, ['1', '2'], {'1', '2'}, {1: '1', 2: '2'}, {id: 1, "VALUE": 'test'});

13:06:27.716 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID f10dde2c-a006-4a4a-957c-959daf338bfc : [DELETE "listString","mapIntString","setString","udtWithNoKeyspace" FROM achilles_embedded.entity_with_case_sensitive_pk WHERE "partitionKey"=:"partitionKey" AND "clusteringColumn"=:"clusteringColumn" AND priority=:priority;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [4068393286448871424, 10, 1]
	 Encoded bound values : [4068393286448871424, 10, 1]
13:06:27.718 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 4b455320-186c-43fa-9e40-8b22fde8f1f8 : [SELECT "partitionKey","clusteringColumn",priority,"listString","mapIntString","setString","udtWithNoKeyspace" FROM achilles_embedded.entity_with_case_sensitive_pk WHERE "partitionKey"=:"partitionKey" AND "clusteringColumn"=:"clusteringColumn" AND priority=:priority;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [4068393286448871424, 10, 1]
	 Encoded bound values : [4068393286448871424, 10, 1]
13:06:27.719 [achilles-default-executor-57] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[partitionKey(bigint), clusteringColumn(bigint), priority(int), listString(list<varchar>), mapIntString(map<int, varchar>), setString(set<varchar>), udtWithNoKeyspace(achilles_embedded.no_ks)]]
13:06:27.720 [achilles-default-executor-57] DEBUG ACHILLES_DML_STATEMENT - Query ID 4b455320-186c-43fa-9e40-8b22fde8f1f8 results : 
	partitionKey: 4068393286448871424, clusteringColumn: 10, priority: 1, listString: [], mapIntString: {}, setString: [], udtWithNoKeyspace: null

13:06:27.720 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:06:27.788 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:27.793 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:27.794 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_case_sensitive_pk(
		"partitionKey" bigint,
		"clusteringColumn" bigint,
		priority int,
		"listString" list<text>,
		"mapIntString" map<int, text>,
		"setString" set<text>,
		"udtWithNoKeyspace" frozen<achilles_embedded.no_ks>,
		PRIMARY KEY("partitionKey", "clusteringColumn", priority))
	WITH CLUSTERING ORDER BY("clusteringColumn" ASC, priority ASC);

13:06:27.796 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:06:27.857 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_case_sensitive_pk("partitionKey", "clusteringColumn", priority, "listString", "setString", "mapIntString", "udtWithNoKeyspace") VALUES (1914758781992130560, 10, 1, ['1', '2'], {'1', '2'}, {1: '1', 2: '2'}, {id: 1, "VALUE": 'test'});

13:06:27.866 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID ac7a72a8-dc01-4f06-b988-1eeca848ad95 : [UPDATE achilles_embedded.entity_with_case_sensitive_pk SET "listString"="listString"+:"listString","mapIntString"[:map_key]=:map_value WHERE "partitionKey"=:"partitionKey" AND "clusteringColumn"=:"clusteringColumn" AND priority=:priority;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [[3], 3, 3, 1914758781992130560, 10, 1]
	 Encoded bound values : [[3], 3, 3, 1914758781992130560, 10, 1]
13:06:27.867 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID fae61166-ba83-484f-9084-ff99c5f55088 : [SELECT "partitionKey","clusteringColumn",priority,"listString","mapIntString","setString","udtWithNoKeyspace" FROM achilles_embedded.entity_with_case_sensitive_pk WHERE "partitionKey"=:"partitionKey" AND "clusteringColumn"=:"clusteringColumn" AND priority=:priority;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [1914758781992130560, 10, 1]
	 Encoded bound values : [1914758781992130560, 10, 1]
13:06:27.869 [achilles-default-executor-59] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[partitionKey(bigint), clusteringColumn(bigint), priority(int), listString(list<varchar>), mapIntString(map<int, varchar>), setString(set<varchar>), udtWithNoKeyspace(achilles_embedded.no_ks)]]
13:06:27.869 [achilles-default-executor-59] DEBUG ACHILLES_DML_STATEMENT - Query ID fae61166-ba83-484f-9084-ff99c5f55088 results : 
	partitionKey: 1914758781992130560, clusteringColumn: 10, priority: 1, listString: [1, 2, 3], mapIntString: {1=1, 2=2, 3=3}, setString: [1, 2], udtWithNoKeyspace: {id:1,"VALUE":'test'}

13:06:27.870 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:06:27.942 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:27.948 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:27.950 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_case_sensitive_pk(
		"partitionKey" bigint,
		"clusteringColumn" bigint,
		priority int,
		"listString" list<text>,
		"mapIntString" map<int, text>,
		"setString" set<text>,
		"udtWithNoKeyspace" frozen<achilles_embedded.no_ks>,
		PRIMARY KEY("partitionKey", "clusteringColumn", priority))
	WITH CLUSTERING ORDER BY("clusteringColumn" ASC, priority ASC);

13:06:27.951 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:06:28.023 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_case_sensitive_pk("partitionKey", "clusteringColumn", priority, "listString", "setString", "mapIntString", "udtWithNoKeyspace") VALUES (524012478012959744, 10, 1, ['1', '2'], {'1', '2'}, {1: '1', 2: '2'}, {id: 1, "VALUE": 'test'});

13:06:28.026 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID a7be990f-4926-41d8-8599-4e9827314e18 : [SELECT "listString","setString","mapIntString","udtWithNoKeyspace" FROM achilles_embedded.entity_with_case_sensitive_pk WHERE "partitionKey"=:"partitionKey";] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [524012478012959744]
	 Encoded bound values : [524012478012959744]
13:06:28.031 [achilles-default-executor-60] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[listString(list<varchar>), setString(set<varchar>), mapIntString(map<int, varchar>), udtWithNoKeyspace(achilles_embedded.no_ks)]]
13:06:28.031 [achilles-default-executor-60] DEBUG ACHILLES_DML_STATEMENT - Query ID a7be990f-4926-41d8-8599-4e9827314e18 results : 
	listString: [1, 2], setString: [1, 2], mapIntString: {1=1, 2=2}, udtWithNoKeyspace: {id:1,"VALUE":'test'}

13:06:28.033 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:06:28.096 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:28.101 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:28.102 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_case_sensitive_pk(
		"partitionKey" bigint,
		"clusteringColumn" bigint,
		priority int,
		"listString" list<text>,
		"mapIntString" map<int, text>,
		"setString" set<text>,
		"udtWithNoKeyspace" frozen<achilles_embedded.no_ks>,
		PRIMARY KEY("partitionKey", "clusteringColumn", priority))
	WITH CLUSTERING ORDER BY("clusteringColumn" ASC, priority ASC);

13:06:28.104 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:06:28.182 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_case_sensitive_pk("partitionKey", "clusteringColumn", priority, "listString", "setString", "mapIntString", "udtWithNoKeyspace") VALUES (211955277684783104, 10, 1, ['1', '2'], {'1', '2'}, {1: '1', 2: '2'}, {id: 1, "VALUE": 'test'});

13:06:28.187 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 1e5307c3-a742-4ad2-ba5b-03863a250521 : [SELECT "listString","setString","mapIntString","udtWithNoKeyspace" FROM achilles_embedded.entity_with_case_sensitive_pk WHERE token("partitionKey")>:tokenValue;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [-9223372036854775808]
	 Encoded bound values : [-9223372036854775808]
13:06:28.189 [achilles-default-executor-61] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[listString(list<varchar>), setString(set<varchar>), mapIntString(map<int, varchar>), udtWithNoKeyspace(achilles_embedded.no_ks)]]
13:06:28.190 [achilles-default-executor-61] DEBUG ACHILLES_DML_STATEMENT - Query ID 1e5307c3-a742-4ad2-ba5b-03863a250521 results : 
	listString: [1, 2], setString: [1, 2], mapIntString: {1=1, 2=2}, udtWithNoKeyspace: {id:1,"VALUE":'test'}

13:06:28.191 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:06:28.261 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:28.265 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:28.266 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_case_sensitive_pk(
		"partitionKey" bigint,
		"clusteringColumn" bigint,
		priority int,
		"listString" list<text>,
		"mapIntString" map<int, text>,
		"setString" set<text>,
		"udtWithNoKeyspace" frozen<achilles_embedded.no_ks>,
		PRIMARY KEY("partitionKey", "clusteringColumn", priority))
	WITH CLUSTERING ORDER BY("clusteringColumn" ASC, priority ASC);

13:06:28.267 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:06:28.330 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 27778126-f50c-4eee-a08f-c843d27874be : [INSERT INTO achilles_embedded.entity_with_case_sensitive_pk ("partitionKey","clusteringColumn",priority,"listString","mapIntString","setString","udtWithNoKeyspace") VALUES (:"partitionKey",:"clusteringColumn",:priority,:"listString",:"mapIntString",:"setString",:"udtWithNoKeyspace") USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [6338907427903380480, 2537935842890116096, 1, [1, 2], {1=1, 2=2}, [1, 2], info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@2003d09b, 0]
	 Encoded bound values : [6338907427903380480, 2537935842890116096, 1, [1, 2], {1=1, 2=2}, [1, 2], {id:6338907427903380480,"VALUE":'test'}, 0]
13:06:28.331 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 72f63b81-2b89-47b0-b3c1-cf4e64275f28 : [SELECT "partitionKey","clusteringColumn",priority,"listString","mapIntString","setString","udtWithNoKeyspace" FROM achilles_embedded.entity_with_case_sensitive_pk WHERE "partitionKey"=:"partitionKey" AND "clusteringColumn"=:"clusteringColumn" AND priority=:priority;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [6338907427903380480, 2537935842890116096, 1]
	 Encoded bound values : [6338907427903380480, 2537935842890116096, 1]
13:06:28.334 [achilles-default-executor-63] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[partitionKey(bigint), clusteringColumn(bigint), priority(int), listString(list<varchar>), mapIntString(map<int, varchar>), setString(set<varchar>), udtWithNoKeyspace(achilles_embedded.no_ks)]]
13:06:28.334 [achilles-default-executor-63] DEBUG ACHILLES_DML_STATEMENT - Query ID 72f63b81-2b89-47b0-b3c1-cf4e64275f28 results : 
	partitionKey: 6338907427903380480, clusteringColumn: 2537935842890116096, priority: 1, listString: [1, 2], mapIntString: {1=1, 2=2}, setString: [1, 2], udtWithNoKeyspace: {id:6338907427903380480,"VALUE":'test'}

13:06:28.334 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:06:28.413 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:28.418 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:28.420 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:28.499 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(300, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:28.500 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID bd30008b-edd0-4d58-8a85-1056e687e7df : [DELETE FROM achilles_embedded.simple WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [THREE]
	 Java bound values : [300, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [300, Wed Sep 30 19:00:00 CDT 2015]
13:06:28.506 [achilles-default-executor-64] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID bd30008b-edd0-4d58-8a85-1056e687e7df at host localhost/127.0.0.1:9042 with achieved consistency level ONE 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 163                      | Native-Transport-Requests-1
Adding to simple memtable                                                        | /127.0.0.1       | 246                      | Native-Transport-Requests-1
****************************


13:06:28.506 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:28.510 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:28.512 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:28.574 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS achilles_embedded.simple_find_with_schema_name( id bigint, date timestamp, consistencylist list<text>, simplemap map<int, text>, simpleset set<double>, value text, PRIMARY KEY(id, date)) WITH CLUSTERING ORDER BY(date ASC);

13:06:28.802 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple_find_with_schema_name(id, date, consistencylist, simpleset, simplemap, value) VALUES(1750966925725390848, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:28.807 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 5ca25b35-4cc6-4c3e-b653-f1c81525a0b1 : [SELECT id,date,consistencylist,simplemap,simpleset,value FROM achilles_embedded.simple_find_with_schema_name WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [1750966925725390848, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [1750966925725390848, Wed Sep 30 19:00:00 CDT 2015]
13:06:28.811 [achilles-default-executor-65] DEBUG i.a.a.i.entities.SimpleEntity - ResultSet[ exhausted: false, Columns[id(bigint), date(timestamp), consistencylist(list<varchar>), simplemap(map<int, varchar>), simpleset(set<double>), value(varchar)]]
13:06:28.811 [achilles-default-executor-65] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 5ca25b35-4cc6-4c3e-b653-f1c81525a0b1 results : 
	id: 1750966925725390848, date: Wed Sep 30 19:00:00 CDT 2015, consistencylist: [QUORUM, LOCAL_ONE], simplemap: {10=ten, 20=twenty}, simpleset: [1.0, 2.0], value: 0 AM

13:06:28.814 [achilles-default-executor-65] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 5ca25b35-4cc6-4c3e-b653-f1c81525a0b1 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Executing single-partition query on simple_find_with_schema_name                 | /127.0.0.1       | 268                      | ReadStage-2         
Acquiring sstable references                                                     | /127.0.0.1       | 321                      | ReadStage-2         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 412                      | ReadStage-2         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 540                      | ReadStage-2         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 578                      | ReadStage-2         
****************************


13:06:28.815 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:28.819 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:28.821 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:28.893 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:28.898 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:28.899 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:28.963 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 83e4d876-96f2-4023-8342-e10a4ce36711 : [INSERT INTO achilles_embedded.simple (id,date,consistencylist,simplemap,simpleset,value) VALUES (:id,:date,:consistencylist,:simplemap,:simpleset,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [TWO]
	 Java bound values : [6026013629188243456, Wed Sep 30 19:00:00 CDT 2015, null, null, null, value, 0]
	 Encoded bound values : [6026013629188243456, Wed Sep 30 19:00:00 CDT 2015, null, null, null, value, 0]
13:06:28.971 [achilles-default-executor-66] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 83e4d876-96f2-4023-8342-e10a4ce36711 at host localhost/127.0.0.1:9042 with achieved consistency level ONE 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 190                      | Native-Transport-Requests-4
Adding to simple memtable                                                        | /127.0.0.1       | 247                      | Native-Transport-Requests-4
****************************


13:06:28.973 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:28.977 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:28.979 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:29.041 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 3d2a163c-11c0-49fd-9d40-81868b490fbf : [INSERT INTO achilles_embedded.simple (id,date,consistencylist,simplemap,simpleset,value) VALUES (:id,:date,:consistencylist,:simplemap,:simpleset,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [4340134530923426816, Wed Sep 30 19:00:00 CDT 2015, null, null, null, value, 1]
	 Encoded bound values : [4340134530923426816, Wed Sep 30 19:00:00 CDT 2015, null, null, null, value, 1]
13:06:29.045 [achilles-default-executor-67] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 3d2a163c-11c0-49fd-9d40-81868b490fbf at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 243                      | Native-Transport-Requests-2
Adding to simple memtable                                                        | /127.0.0.1       | 369                      | MutationStage-3     
****************************


13:06:30.048 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:30.053 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:30.055 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:30.117 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(7720196113490590720, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:30.119 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID adc4a396-37c9-42fa-8cd7-a141f82530c1 : [SELECT id,date,consistencylist,simplemap,simpleset,value FROM achilles_embedded.simple WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [7720196113490590720, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [7720196113490590720, Wed Sep 30 19:00:00 CDT 2015]
13:06:30.121 [achilles-default-executor-68] DEBUG i.a.a.i.entities.SimpleEntity - ResultSet[ exhausted: false, Columns[id(bigint), date(timestamp), consistencylist(list<varchar>), simplemap(map<int, varchar>), simpleset(set<double>), value(varchar)]]
13:06:30.122 [achilles-default-executor-68] DEBUG i.a.a.i.entities.SimpleEntity - Query ID adc4a396-37c9-42fa-8cd7-a141f82530c1 results : 
	id: 7720196113490590720, date: Wed Sep 30 19:00:00 CDT 2015, consistencylist: [QUORUM, LOCAL_ONE], simplemap: {10=ten, 20=twenty}, simpleset: [1.0, 2.0], value: 0 AM

13:06:30.123 [achilles-default-executor-68] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID adc4a396-37c9-42fa-8cd7-a141f82530c1 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Executing single-partition query on simple                                       | /127.0.0.1       | 406                      | ReadStage-3         
Acquiring sstable references                                                     | /127.0.0.1       | 469                      | ReadStage-3         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 531                      | ReadStage-3         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 673                      | ReadStage-3         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 716                      | ReadStage-3         
****************************


13:06:30.124 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:30.129 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:30.130 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:30.193 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(100, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:30.196 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID eb72bda8-59eb-46d3-a29a-a088c9053bc2 : [INSERT INTO achilles_embedded.simple (id,date,consistencylist,simplemap,simpleset,value) VALUES (:id,:date,:consistencylist,:simplemap,:simpleset,:value) IF NOT EXISTS USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [100, Wed Sep 30 19:00:00 CDT 2015, null, null, null, value, 0]
	 Encoded bound values : [100, Wed Sep 30 19:00:00 CDT 2015, null, null, null, value, 0]
13:06:30.207 [achilles-default-executor-69] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID eb72bda8-59eb-46d3-a29a-a088c9053bc2 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Preparing cb586650-29f4-11ec-7127-f9b00080bc40                                   | /127.0.0.1       | 327                      | Native-Transport-Requests-1
Sending PAXOS_PREPARE message to localhost/127.0.0.1                             | /127.0.0.1       | 486                      | MessagingService-Outgoing-localhost/127.0.0.1-Small
PAXOS_PREPARE message received from /127.0.0.1                                   | /127.0.0.1       | 680                      | MessagingService-Incoming-/127.0.0.1
Executing single-partition query on paxos                                        | /127.0.0.1       | 913                      | MutationStage-2     
Acquiring sstable references                                                     | /127.0.0.1       | 968                      | MutationStage-2     
Merging memtable contents                                                        | /127.0.0.1       | 994                      | MutationStage-2     
Read 0 live rows and 0 tombstone cells                                           | /127.0.0.1       | 1116                     | MutationStage-2     
Promising ballot cb586650-29f4-11ec-7127-f9b00080bc40                            | /127.0.0.1       | 1156                     | MutationStage-2     
Appending to commitlog                                                           | /127.0.0.1       | 1254                     | MutationStage-2     
Adding to paxos memtable                                                         | /127.0.0.1       | 1309                     | MutationStage-2     
Sending REQUEST_RESPONSE message to localhost/127.0.0.1                          | /127.0.0.1       | 1428                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
REQUEST_RESPONSE message received from /127.0.0.1                                | /127.0.0.1       | 1626                     | MessagingService-Incoming-/127.0.0.1
Processing response from /127.0.0.1                                              | /127.0.0.1       | 1692                     | RequestResponseStage-3
Reading existing values for CAS precondition                                     | /127.0.0.1       | 1757                     | Native-Transport-Requests-1
Executing single-partition query on simple                                       | /127.0.0.1       | 1869                     | ReadStage-3         
Acquiring sstable references                                                     | /127.0.0.1       | 1904                     | ReadStage-3         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 1947                     | ReadStage-3         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 2057                     | ReadStage-3         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 2102                     | ReadStage-3         
CAS precondition does not match current values [achilles_embedded.simple] key=100 partition_deletion=deletedAt=-9223372036854775808, localDeletion=2147483647 columns=[[] | [value consistencylist simplemap simpleset]]
    Row[info=[ts=1633889190193199] ]: date=2015-09-30 19:00-0500 | [value=0 AM ts=1633889190193199], , [consistencylist[cb57f120-29f4-11ec-be04-0324707fbce8]=QUORUM ts=1633889190193199], [consistencylist[cb57f121-29f4-11ec-be04-0324707fbce8]=LOCAL_ONE ts=1633889190193199], , [simplemap[10]=ten ts=1633889190193199], [simplemap[20]=twenty ts=1633889190193199], , [simpleset[1.0]= ts=1633889190193199], [simpleset[2.0]= ts=1633889190193199] | /127.0.0.1       | 2584                     | Native-Transport-Requests-1
CAS precondition is met; proposing client-requested updates for cb586650-29f4-11ec-7127-f9b00080bc40 | /127.0.0.1       | 2655                     | Native-Transport-Requests-1
Sending PAXOS_PROPOSE message to localhost/127.0.0.1                             | /127.0.0.1       | 2747                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
PAXOS_PROPOSE message received from /127.0.0.1                                   | /127.0.0.1       | 2872                     | MessagingService-Incoming-/127.0.0.1
Executing single-partition query on paxos                                        | /127.0.0.1       | 2973                     | MutationStage-3     
Acquiring sstable references                                                     | /127.0.0.1       | 3001                     | MutationStage-3     
Merging memtable contents                                                        | /127.0.0.1       | 3044                     | MutationStage-3     
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 3177                     | MutationStage-3     
Accepting proposal Commit(cb586650-29f4-11ec-7127-f9b00080bc40, [achilles_embedded.simple] key=100 partition_deletion=deletedAt=-9223372036854775808, localDeletion=2147483647 columns=[[] | []]) | /127.0.0.1       | 3262                     | MutationStage-3     
Appending to commitlog                                                           | /127.0.0.1       | 3340                     | MutationStage-3     
Adding to paxos memtable                                                         | /127.0.0.1       | 3398                     | MutationStage-3     
Sending REQUEST_RESPONSE message to localhost/127.0.0.1                          | /127.0.0.1       | 3522                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
REQUEST_RESPONSE message received from /127.0.0.1                                | /127.0.0.1       | 3636                     | MessagingService-Incoming-/127.0.0.1
Processing response from /127.0.0.1                                              | /127.0.0.1       | 3720                     | RequestResponseStage-2
CAS did not apply                                                                | /127.0.0.1       | 3783                     | Native-Transport-Requests-1
****************************


13:06:30.208 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:30.212 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:30.214 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:30.278 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(4197511086100064256, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:30.282 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID e1dd8467-67d0-4e17-a0e2-1f1b8b4af497 : [DELETE FROM achilles_embedded.simple WHERE id=:id AND date=:date IF simpleset=:simpleset;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [4197511086100064256, Wed Sep 30 19:00:00 CDT 2015, [1.0, 2.0]]
	 Encoded bound values : [4197511086100064256, Wed Sep 30 19:00:00 CDT 2015, [1.0, 2.0]]
13:06:30.303 [achilles-default-executor-70] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID e1dd8467-67d0-4e17-a0e2-1f1b8b4af497 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Preparing cb6585b0-29f4-11ec-498a-f3a5b88de1ed                                   | /127.0.0.1       | 872                      | Native-Transport-Requests-2
Sending PAXOS_PREPARE message to localhost/127.0.0.1                             | /127.0.0.1       | 1079                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
PAXOS_PREPARE message received from /127.0.0.1                                   | /127.0.0.1       | 1313                     | MessagingService-Incoming-/127.0.0.1
Executing single-partition query on paxos                                        | /127.0.0.1       | 2008                     | MutationStage-3     
Acquiring sstable references                                                     | /127.0.0.1       | 2067                     | MutationStage-3     
Merging memtable contents                                                        | /127.0.0.1       | 2090                     | MutationStage-3     
Read 0 live rows and 0 tombstone cells                                           | /127.0.0.1       | 2176                     | MutationStage-3     
Promising ballot cb6585b0-29f4-11ec-498a-f3a5b88de1ed                            | /127.0.0.1       | 2214                     | MutationStage-3     
Appending to commitlog                                                           | /127.0.0.1       | 2318                     | MutationStage-3     
Adding to paxos memtable                                                         | /127.0.0.1       | 2375                     | MutationStage-3     
Sending REQUEST_RESPONSE message to localhost/127.0.0.1                          | /127.0.0.1       | 2621                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
REQUEST_RESPONSE message received from /127.0.0.1                                | /127.0.0.1       | 2796                     | MessagingService-Incoming-/127.0.0.1
Processing response from /127.0.0.1                                              | /127.0.0.1       | 3838                     | RequestResponseStage-3
Reading existing values for CAS precondition                                     | /127.0.0.1       | 4091                     | Native-Transport-Requests-2
Executing single-partition query on simple                                       | /127.0.0.1       | 4299                     | ReadStage-3         
Acquiring sstable references                                                     | /127.0.0.1       | 4340                     | ReadStage-3         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 4395                     | ReadStage-3         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 4510                     | ReadStage-3         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 4546                     | ReadStage-3         
CAS precondition is met; proposing client-requested updates for cb6585b0-29f4-11ec-498a-f3a5b88de1ed | /127.0.0.1       | 5468                     | Native-Transport-Requests-2
Sending PAXOS_PROPOSE message to localhost/127.0.0.1                             | /127.0.0.1       | 5618                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
PAXOS_PROPOSE message received from /127.0.0.1                                   | /127.0.0.1       | 5930                     | MessagingService-Incoming-/127.0.0.1
Executing single-partition query on paxos                                        | /127.0.0.1       | 6045                     | MutationStage-3     
Acquiring sstable references                                                     | /127.0.0.1       | 6093                     | MutationStage-3     
Merging memtable contents                                                        | /127.0.0.1       | 6109                     | MutationStage-3     
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 6260                     | MutationStage-3     
Accepting proposal Commit(cb6585b0-29f4-11ec-498a-f3a5b88de1ed, [achilles_embedded.simple] key=4197511086100064256 partition_deletion=deletedAt=-9223372036854775808, localDeletion=2147483647 columns=[[] | []]
    Row[info=[ts=-9223372036854775808] del=deletedAt=1633889190282999, localDeletion=1633889190 ]: date=2015-09-30 19:00-0500 | ) | /127.0.0.1       | 6414                     | MutationStage-3     
Appending to commitlog                                                           | /127.0.0.1       | 6515                     | MutationStage-3     
Adding to paxos memtable                                                         | /127.0.0.1       | 6561                     | MutationStage-3     
Sending REQUEST_RESPONSE message to localhost/127.0.0.1                          | /127.0.0.1       | 6681                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
REQUEST_RESPONSE message received from /127.0.0.1                                | /127.0.0.1       | 6797                     | MessagingService-Incoming-/127.0.0.1
Processing response from /127.0.0.1                                              | /127.0.0.1       | 6881                     | RequestResponseStage-3
Executing single-partition query on local                                        | /127.0.0.1       | 7095                     | Native-Transport-Requests-2
Acquiring sstable references                                                     | /127.0.0.1       | 7130                     | Native-Transport-Requests-2
Skipped 0/4 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 7170                     | Native-Transport-Requests-2
Key cache hit for sstable 193                                                    | /127.0.0.1       | 7271                     | Native-Transport-Requests-2
Key cache hit for sstable 194                                                    | /127.0.0.1       | 7406                     | Native-Transport-Requests-2
Key cache hit for sstable 195                                                    | /127.0.0.1       | 7452                     | Native-Transport-Requests-2
Partition index with 0 entries found for sstable 196                             | /127.0.0.1       | 7545                     | Native-Transport-Requests-2
Merged data from memtables and 4 sstables                                        | /127.0.0.1       | 7727                     | Native-Transport-Requests-2
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 7772                     | Native-Transport-Requests-2
Committing proposal Commit(cb6585b0-29f4-11ec-498a-f3a5b88de1ed, [achilles_embedded.simple] key=4197511086100064256 partition_deletion=deletedAt=-9223372036854775808, localDeletion=2147483647 columns=[[] | []]
    Row[info=[ts=-9223372036854775808] del=deletedAt=1633889190282999, localDeletion=1633889190 ]: date=2015-09-30 19:00-0500 | ) | /127.0.0.1       | 7955                     | Native-Transport-Requests-2
Appending to commitlog                                                           | /127.0.0.1       | 7999                     | Native-Transport-Requests-2
Adding to simple memtable                                                        | /127.0.0.1       | 8035                     | Native-Transport-Requests-2
Appending to commitlog                                                           | /127.0.0.1       | 8163                     | Native-Transport-Requests-2
Adding to paxos memtable                                                         | /127.0.0.1       | 8209                     | Native-Transport-Requests-2
CAS applied successfully                                                         | /127.0.0.1       | 8277                     | Native-Transport-Requests-2
****************************


13:06:30.305 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:30.309 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:30.311 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:30.373 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:30.378 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:30.400 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:30.476 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(2751773965439657984, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:30.478 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 7e1e8ed8-3165-4e86-81bb-2b6e248d48f3 : [INSERT INTO achilles_embedded.simple (id,date,consistencylist,simplemap,simpleset,value) VALUES (:id,:date,:consistencylist,:simplemap,:simpleset,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [2751773965439657984, Wed Sep 30 19:00:00 CDT 2015, null, null, null, null, 0]
	 Encoded bound values : [2751773965439657984, Wed Sep 30 19:00:00 CDT 2015, null, null, null, null, 0]
13:06:30.481 [Native-Transport-Requests-2] ERROR o.a.c.t.messages.ErrorMessage - Unexpected exception during request
java.nio.BufferUnderflowException: null
	at java.nio.Buffer.nextGetIndex(Buffer.java:510)
	at java.nio.HeapByteBuffer.getInt(HeapByteBuffer.java:375)
	at org.apache.cassandra.serializers.CollectionSerializer.readCollectionSize(CollectionSerializer.java:79)
	at org.apache.cassandra.cql3.CQL3Type$Collection.toCQLLiteral(CQL3Type.java:194)
	at org.apache.cassandra.transport.messages.ExecuteMessage.execute(ExecuteMessage.java:129)
	at org.apache.cassandra.transport.Message$Dispatcher.processRequest(Message.java:685)
	at org.apache.cassandra.transport.Message$Dispatcher.lambda$channelRead0$0(Message.java:591)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at org.apache.cassandra.concurrent.AbstractLocalAwareExecutorService$FutureTask.run(AbstractLocalAwareExecutorService.java:162)
	at org.apache.cassandra.concurrent.SEPWorker.run(SEPWorker.java:113)
	at java.lang.Thread.run(Thread.java:748)
13:06:30.482 [Achilles Embedded Cassandra Cluster-nio-worker-0] WARN  c.d.driver.core.RequestHandler - localhost/127.0.0.1:9042 replied with server error (java.nio.BufferUnderflowException), defuncting connection.
com.datastax.driver.core.exceptions.NoHostAvailableException: All host(s) tried for query failed (tried: localhost/127.0.0.1:9042 (com.datastax.driver.core.exceptions.ServerError: An unexpected error occurred server side on localhost/127.0.0.1:9042: java.nio.BufferUnderflowException))
	at com.datastax.driver.core.exceptions.NoHostAvailableException.copy(NoHostAvailableException.java:83)
	at com.datastax.driver.core.exceptions.NoHostAvailableException.copy(NoHostAvailableException.java:37)
	at info.archinnov.achilles.internals.dsl.AsyncAware.extractCauseFromExecutionException(AsyncAware.java:34)
	at info.archinnov.achilles.internals.dsl.action.MutationAction.execute(MutationAction.java:37)
	at info.archinnov.achilles.it.TestCRUDSimpleEntity.should_insert_with_insert_strategy_non_null_fields(TestCRUDSimpleEntity.java:267)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:54)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at edu.illinois.cs.testrunner.execution.JUnitTestExecutor.execute(JUnitTestExecutor.java:259)
	at edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeWithJUnit4Runner(JUnitTestExecutor.java:327)
	at edu.illinois.cs.testrunner.execution.JUnitTestExecutor.runOrder(JUnitTestExecutor.java:49)
	at edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:30)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at scala.util.Try$.apply(Try.scala:209)
	at edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)
	at edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)
	at edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)
Caused by: com.datastax.driver.core.exceptions.NoHostAvailableException: All host(s) tried for query failed (tried: localhost/127.0.0.1:9042 (com.datastax.driver.core.exceptions.ServerError: An unexpected error occurred server side on localhost/127.0.0.1:9042: java.nio.BufferUnderflowException))
	at com.datastax.driver.core.RequestHandler.reportNoMoreHosts(RequestHandler.java:283)
	at com.datastax.driver.core.RequestHandler.access$1200(RequestHandler.java:61)
	at com.datastax.driver.core.RequestHandler$SpeculativeExecution.findNextHostAndQuery(RequestHandler.java:375)
	at com.datastax.driver.core.RequestHandler$SpeculativeExecution.retry(RequestHandler.java:563)
	at com.datastax.driver.core.RequestHandler$SpeculativeExecution.processRetryDecision(RequestHandler.java:545)
	at com.datastax.driver.core.RequestHandler$SpeculativeExecution.onSet(RequestHandler.java:816)
	at com.datastax.driver.core.Connection$Dispatcher.channelRead0(Connection.java:1290)
	at com.datastax.driver.core.Connection$Dispatcher.channelRead0(Connection.java:1208)
	at com.datastax.shaded.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:335)
	at com.datastax.shaded.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:335)
	at com.datastax.shaded.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:335)
	at com.datastax.shaded.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:312)
	at com.datastax.shaded.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:286)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:335)
	at com.datastax.shaded.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)
	at com.datastax.driver.core.InboundTrafficMeter.channelRead(InboundTrafficMeter.java:38)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:335)
	at com.datastax.shaded.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1304)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)
	at com.datastax.shaded.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:921)
	at com.datastax.shaded.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:135)
	at com.datastax.shaded.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:646)
	at com.datastax.shaded.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581)
	at com.datastax.shaded.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498)
	at com.datastax.shaded.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460)
	at com.datastax.shaded.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:131)
	at com.datastax.shaded.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
13:06:30.490 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:30.495 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:30.496 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:30.562 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:30.566 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:30.567 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:30.657 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(200, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:30.659 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(200, '2015-10-01 01:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '1 AM');

13:06:30.661 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID bd5ee1aa-35bf-44ff-ae05-143955000ef6 : [DELETE FROM achilles_embedded.simple WHERE id=:id;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [200]
	 Encoded bound values : [200]
13:06:30.665 [achilles-default-executor-72] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID bd5ee1aa-35bf-44ff-ae05-143955000ef6 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 159                      | Native-Transport-Requests-1
Adding to simple memtable                                                        | /127.0.0.1       | 493                      | MutationStage-2     
****************************


13:06:30.666 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:30.671 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:30.672 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:30.746 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:30.751 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:30.752 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:30.815 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(4800748324068725760, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:30.817 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID c4a2cb03-3690-47d7-84fc-03444b2bfbdf : [SELECT id,date,consistencylist,simplemap,simpleset,value FROM achilles_embedded.simple WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [TWO]
	 Java bound values : [4800748324068725760, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [4800748324068725760, Wed Sep 30 19:00:00 CDT 2015]
13:06:30.820 [achilles-default-executor-73] DEBUG i.a.a.i.entities.SimpleEntity - ResultSet[ exhausted: false, Columns[id(bigint), date(timestamp), consistencylist(list<varchar>), simplemap(map<int, varchar>), simpleset(set<double>), value(varchar)]]
13:06:30.822 [achilles-default-executor-73] DEBUG i.a.a.i.entities.SimpleEntity - Query ID c4a2cb03-3690-47d7-84fc-03444b2bfbdf results : 
	id: 4800748324068725760, date: Wed Sep 30 19:00:00 CDT 2015, consistencylist: [QUORUM, LOCAL_ONE], simplemap: {10=ten, 20=twenty}, simpleset: [1.0, 2.0], value: 0 AM

13:06:30.825 [achilles-default-executor-73] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID c4a2cb03-3690-47d7-84fc-03444b2bfbdf at host localhost/127.0.0.1:9042 with achieved consistency level ONE 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Executing single-partition query on simple                                       | /127.0.0.1       | 365                      | ReadStage-1         
Acquiring sstable references                                                     | /127.0.0.1       | 440                      | ReadStage-1         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 497                      | ReadStage-1         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 636                      | ReadStage-1         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 681                      | ReadStage-1         
****************************


13:06:30.826 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:30.830 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:30.831 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:30.911 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS achilles_embedded.simple_delete_with_schema_name( id bigint, date timestamp, consistencylist list<text>, simplemap map<int, text>, simpleset set<double>, value text, PRIMARY KEY(id, date)) WITH CLUSTERING ORDER BY(date ASC);

13:06:31.147 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple_delete_with_schema_name(id, date, consistencylist, simpleset, simplemap, value) VALUES(4707160033629002752, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:31.151 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 8f0069e8-2933-4eb5-8bf0-5fc5535caf09 : [DELETE FROM achilles_embedded.simple_delete_with_schema_name WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [4707160033629002752, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [4707160033629002752, Wed Sep 30 19:00:00 CDT 2015]
13:06:31.160 [achilles-default-executor-74] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 8f0069e8-2933-4eb5-8bf0-5fc5535caf09 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 198                      | Native-Transport-Requests-5
Adding to simple_delete_with_schema_name memtable                                | /127.0.0.1       | 303                      | MutationStage-2     
****************************


13:06:31.163 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:31.167 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:31.172 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:31.242 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID ca92ec53-ab34-423e-bd04-991a135274ff : [INSERT INTO achilles_embedded.simple (id,date,consistencylist,simplemap,simpleset,value) VALUES (:id,:date,:consistencylist,:simplemap,:simpleset,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [6973608855230366720, Wed Sep 30 19:00:00 CDT 2015, null, null, null, value, 0]
	 Encoded bound values : [6973608855230366720, Wed Sep 30 19:00:00 CDT 2015, null, null, null, value, 0]
13:06:31.249 [achilles-default-executor-75] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID ca92ec53-ab34-423e-bd04-991a135274ff at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 282                      | Native-Transport-Requests-2
Adding to simple memtable                                                        | /127.0.0.1       | 357                      | Native-Transport-Requests-2
****************************


13:06:31.252 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:31.256 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:31.257 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:31.320 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(4250843833486992384, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:31.322 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID b3de9a7d-fd3a-484c-9fa9-0bc3a846de31 : [DELETE FROM achilles_embedded.simple WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [4250843833486992384, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [4250843833486992384, Wed Sep 30 19:00:00 CDT 2015]
13:06:31.326 [achilles-default-executor-76] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID b3de9a7d-fd3a-484c-9fa9-0bc3a846de31 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 211                      | Native-Transport-Requests-2
Adding to simple memtable                                                        | /127.0.0.1       | 266                      | Native-Transport-Requests-2
****************************


13:06:31.328 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:31.333 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:31.334 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:31.409 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 516ff6d2-085f-41e9-a2ae-8ac8b131ed2f : [INSERT INTO achilles_embedded.simple (id,date,consistencylist,simplemap,simpleset,value) VALUES (:id,:date,:consistencylist,:simplemap,:simpleset,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [1088227536279056384, Sun Oct 10 13:06:31 CDT 2021, [EACH_QUORUM, LOCAL_QUORUM], {1=one, 2=two}, [10.0, 11.0], value, 0]
	 Encoded bound values : [1088227536279056384, Sun Oct 10 13:06:31 CDT 2021, [EACH_QUORUM, LOCAL_QUORUM], {1=one, 2=two}, [10.0, 11.0], value, 0]
13:06:31.413 [achilles-default-executor-77] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 516ff6d2-085f-41e9-a2ae-8ac8b131ed2f at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 395                      | Native-Transport-Requests-1
Adding to simple memtable                                                        | /127.0.0.1       | 520                      | MutationStage-3     
****************************


13:06:31.415 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:31.419 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:31.420 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:31.490 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(1873373814359410688, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:31.495 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 840e8251-368f-489e-8ecf-932701c5e73d : [SELECT id,date,consistencylist,simplemap,simpleset,value FROM achilles_embedded.simple WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [1873373814359410688, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [1873373814359410688, Wed Sep 30 19:00:00 CDT 2015]
13:06:31.497 [achilles-default-executor-78] DEBUG i.a.a.i.entities.SimpleEntity - ResultSet[ exhausted: false, Columns[id(bigint), date(timestamp), consistencylist(list<varchar>), simplemap(map<int, varchar>), simpleset(set<double>), value(varchar)]]
13:06:31.497 [achilles-default-executor-78] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 840e8251-368f-489e-8ecf-932701c5e73d results : 
	id: 1873373814359410688, date: Wed Sep 30 19:00:00 CDT 2015, consistencylist: [QUORUM, LOCAL_ONE], simplemap: {10=ten, 20=twenty}, simpleset: [1.0, 2.0], value: 0 AM

13:06:31.499 [achilles-default-executor-78] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 840e8251-368f-489e-8ecf-932701c5e73d at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Executing single-partition query on simple                                       | /127.0.0.1       | 283                      | ReadStage-1         
Acquiring sstable references                                                     | /127.0.0.1       | 339                      | ReadStage-1         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 384                      | ReadStage-1         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 549                      | ReadStage-1         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 593                      | ReadStage-1         
****************************


13:06:31.501 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:31.506 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:31.507 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:31.572 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID d8964160-f9a8-48ae-a198-10bd9428cf2c : [DELETE FROM achilles_embedded.simple WHERE id=:id AND date=:date IF EXISTS;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [2658239476804400128, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [2658239476804400128, Wed Sep 30 19:00:00 CDT 2015]
13:06:31.584 [achilles-default-executor-79] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID d8964160-f9a8-48ae-a198-10bd9428cf2c at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Preparing cc2a3540-29f4-11ec-1ab0-bb05b29ed529                                   | /127.0.0.1       | 330                      | Native-Transport-Requests-2
Sending PAXOS_PREPARE message to localhost/127.0.0.1                             | /127.0.0.1       | 488                      | MessagingService-Outgoing-localhost/127.0.0.1-Small
PAXOS_PREPARE message received from /127.0.0.1                                   | /127.0.0.1       | 718                      | MessagingService-Incoming-/127.0.0.1
Executing single-partition query on paxos                                        | /127.0.0.1       | 1019                     | MutationStage-3     
Acquiring sstable references                                                     | /127.0.0.1       | 1063                     | MutationStage-3     
Merging memtable contents                                                        | /127.0.0.1       | 1082                     | MutationStage-3     
Read 0 live rows and 0 tombstone cells                                           | /127.0.0.1       | 1162                     | MutationStage-3     
Promising ballot cc2a3540-29f4-11ec-1ab0-bb05b29ed529                            | /127.0.0.1       | 1201                     | MutationStage-3     
Appending to commitlog                                                           | /127.0.0.1       | 1294                     | MutationStage-3     
Adding to paxos memtable                                                         | /127.0.0.1       | 1348                     | MutationStage-3     
Sending REQUEST_RESPONSE message to localhost/127.0.0.1                          | /127.0.0.1       | 1477                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
REQUEST_RESPONSE message received from /127.0.0.1                                | /127.0.0.1       | 1666                     | MessagingService-Incoming-/127.0.0.1
Processing response from /127.0.0.1                                              | /127.0.0.1       | 1741                     | RequestResponseStage-3
Reading existing values for CAS precondition                                     | /127.0.0.1       | 1859                     | Native-Transport-Requests-2
Executing single-partition query on simple                                       | /127.0.0.1       | 2045                     | ReadStage-1         
Acquiring sstable references                                                     | /127.0.0.1       | 2083                     | ReadStage-1         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 2109                     | ReadStage-1         
Read 0 live rows and 0 tombstone cells                                           | /127.0.0.1       | 2164                     | ReadStage-1         
CAS precondition does not match current values [achilles_embedded.simple] key=2658239476804400128 partition_deletion=deletedAt=-9223372036854775808, localDeletion=2147483647 columns=[[] | []] | /127.0.0.1       | 2327                     | Native-Transport-Requests-2
CAS precondition is met; proposing client-requested updates for cc2a3540-29f4-11ec-1ab0-bb05b29ed529 | /127.0.0.1       | 2391                     | Native-Transport-Requests-2
Sending PAXOS_PROPOSE message to localhost/127.0.0.1                             | /127.0.0.1       | 2482                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
PAXOS_PROPOSE message received from /127.0.0.1                                   | /127.0.0.1       | 2653                     | MessagingService-Incoming-/127.0.0.1
Executing single-partition query on paxos                                        | /127.0.0.1       | 2752                     | MutationStage-1     
Acquiring sstable references                                                     | /127.0.0.1       | 2784                     | MutationStage-1     
Merging memtable contents                                                        | /127.0.0.1       | 2800                     | MutationStage-1     
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 2921                     | MutationStage-1     
Accepting proposal Commit(cc2a3540-29f4-11ec-1ab0-bb05b29ed529, [achilles_embedded.simple] key=2658239476804400128 partition_deletion=deletedAt=-9223372036854775808, localDeletion=2147483647 columns=[[] | []]) | /127.0.0.1       | 2998                     | MutationStage-1     
Appending to commitlog                                                           | /127.0.0.1       | 3076                     | MutationStage-1     
Adding to paxos memtable                                                         | /127.0.0.1       | 3125                     | MutationStage-1     
Sending REQUEST_RESPONSE message to localhost/127.0.0.1                          | /127.0.0.1       | 3248                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
REQUEST_RESPONSE message received from /127.0.0.1                                | /127.0.0.1       | 3361                     | MessagingService-Incoming-/127.0.0.1
Processing response from /127.0.0.1                                              | /127.0.0.1       | 3410                     | RequestResponseStage-1
CAS did not apply                                                                | /127.0.0.1       | 3442                     | Native-Transport-Requests-2
****************************


13:06:31.584 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:31.589 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:31.590 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:31.669 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(3483403172378235904, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:31.674 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID d59ccf46-f0d2-4dd7-8e94-a8462dfbc8df : [DELETE FROM achilles_embedded.simple WHERE id=:id AND date=:date IF value<:value;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [3483403172378235904, Wed Sep 30 19:00:00 CDT 2015, _]
	 Encoded bound values : [3483403172378235904, Wed Sep 30 19:00:00 CDT 2015, _]
13:06:31.687 [achilles-default-executor-80] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID d59ccf46-f0d2-4dd7-8e94-a8462dfbc8df at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Preparing cc39c5a0-29f4-11ec-1f9c-ac18175a0aad                                   | /127.0.0.1       | 297                      | Native-Transport-Requests-1
Sending PAXOS_PREPARE message to localhost/127.0.0.1                             | /127.0.0.1       | 427                      | MessagingService-Outgoing-localhost/127.0.0.1-Small
PAXOS_PREPARE message received from /127.0.0.1                                   | /127.0.0.1       | 582                      | MessagingService-Incoming-/127.0.0.1
Executing single-partition query on paxos                                        | /127.0.0.1       | 739                      | MutationStage-2     
Acquiring sstable references                                                     | /127.0.0.1       | 792                      | MutationStage-2     
Merging memtable contents                                                        | /127.0.0.1       | 816                      | MutationStage-2     
Read 0 live rows and 0 tombstone cells                                           | /127.0.0.1       | 905                      | MutationStage-2     
Promising ballot cc39c5a0-29f4-11ec-1f9c-ac18175a0aad                            | /127.0.0.1       | 941                      | MutationStage-2     
Appending to commitlog                                                           | /127.0.0.1       | 1081                     | MutationStage-2     
Adding to paxos memtable                                                         | /127.0.0.1       | 1137                     | MutationStage-2     
Sending REQUEST_RESPONSE message to localhost/127.0.0.1                          | /127.0.0.1       | 1260                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
REQUEST_RESPONSE message received from /127.0.0.1                                | /127.0.0.1       | 1447                     | MessagingService-Incoming-/127.0.0.1
Processing response from /127.0.0.1                                              | /127.0.0.1       | 1515                     | RequestResponseStage-4
Reading existing values for CAS precondition                                     | /127.0.0.1       | 1685                     | Native-Transport-Requests-1
Read-repair DC_LOCAL                                                             | /127.0.0.1       | 1754                     | Native-Transport-Requests-1
Executing single-partition query on simple                                       | /127.0.0.1       | 1877                     | ReadStage-2         
Acquiring sstable references                                                     | /127.0.0.1       | 2002                     | ReadStage-2         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 2050                     | ReadStage-2         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 2166                     | ReadStage-2         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 2197                     | ReadStage-2         
CAS precondition is met; proposing client-requested updates for cc39c5a0-29f4-11ec-1f9c-ac18175a0aad | /127.0.0.1       | 2426                     | Native-Transport-Requests-1
Sending PAXOS_PROPOSE message to localhost/127.0.0.1                             | /127.0.0.1       | 2553                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
PAXOS_PROPOSE message received from /127.0.0.1                                   | /127.0.0.1       | 2814                     | MessagingService-Incoming-/127.0.0.1
Executing single-partition query on paxos                                        | /127.0.0.1       | 2941                     | MutationStage-4     
Acquiring sstable references                                                     | /127.0.0.1       | 2971                     | MutationStage-4     
Merging memtable contents                                                        | /127.0.0.1       | 2989                     | MutationStage-4     
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 3103                     | MutationStage-4     
Accepting proposal Commit(cc39c5a0-29f4-11ec-1f9c-ac18175a0aad, [achilles_embedded.simple] key=3483403172378235904 partition_deletion=deletedAt=-9223372036854775808, localDeletion=2147483647 columns=[[] | []]
    Row[info=[ts=-9223372036854775808] del=deletedAt=1633889191673999, localDeletion=1633889191 ]: date=2015-09-30 19:00-0500 | ) | /127.0.0.1       | 3280                     | MutationStage-4     
Appending to commitlog                                                           | /127.0.0.1       | 3429                     | MutationStage-4     
Adding to paxos memtable                                                         | /127.0.0.1       | 3506                     | MutationStage-4     
Sending REQUEST_RESPONSE message to localhost/127.0.0.1                          | /127.0.0.1       | 3628                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
REQUEST_RESPONSE message received from /127.0.0.1                                | /127.0.0.1       | 3741                     | MessagingService-Incoming-/127.0.0.1
Processing response from /127.0.0.1                                              | /127.0.0.1       | 3848                     | RequestResponseStage-2
Executing single-partition query on local                                        | /127.0.0.1       | 3993                     | Native-Transport-Requests-1
Acquiring sstable references                                                     | /127.0.0.1       | 4026                     | Native-Transport-Requests-1
Skipped 0/2 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 4058                     | Native-Transport-Requests-1
Key cache hit for sstable 213                                                    | /127.0.0.1       | 4242                     | Native-Transport-Requests-1
Partition index with 0 entries found for sstable 214                             | /127.0.0.1       | 4552                     | Native-Transport-Requests-1
Merged data from memtables and 2 sstables                                        | /127.0.0.1       | 4777                     | Native-Transport-Requests-1
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 4826                     | Native-Transport-Requests-1
Committing proposal Commit(cc39c5a0-29f4-11ec-1f9c-ac18175a0aad, [achilles_embedded.simple] key=3483403172378235904 partition_deletion=deletedAt=-9223372036854775808, localDeletion=2147483647 columns=[[] | []]
    Row[info=[ts=-9223372036854775808] del=deletedAt=1633889191673999, localDeletion=1633889191 ]: date=2015-09-30 19:00-0500 | ) | /127.0.0.1       | 5018                     | Native-Transport-Requests-1
Appending to commitlog                                                           | /127.0.0.1       | 5054                     | Native-Transport-Requests-1
Adding to simple memtable                                                        | /127.0.0.1       | 5093                     | Native-Transport-Requests-1
Appending to commitlog                                                           | /127.0.0.1       | 5222                     | Native-Transport-Requests-1
Adding to paxos memtable                                                         | /127.0.0.1       | 5275                     | Native-Transport-Requests-1
CAS applied successfully                                                         | /127.0.0.1       | 5352                     | Native-Transport-Requests-1
****************************


13:06:31.689 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:31.693 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:31.694 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:31.767 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 1b5dd4fc-363c-4c79-8a46-771c9bd693ae : [INSERT INTO achilles_embedded.simple (id,date,consistencylist,simplemap,simpleset,value) VALUES (:id,:date,:consistencylist,:simplemap,:simpleset,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [1782873000171638784, Sun Oct 10 13:06:31 CDT 2021, [EACH_QUORUM, LOCAL_QUORUM], {1=one, 2=two}, [10.0, 11.0], value, 0]
	 Encoded bound values : [1782873000171638784, Sun Oct 10 13:06:31 CDT 2021, [EACH_QUORUM, LOCAL_QUORUM], {1=one, 2=two}, [10.0, 11.0], value, 0]
13:06:31.771 [achilles-default-executor-81] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 1b5dd4fc-363c-4c79-8a46-771c9bd693ae at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 333                      | Native-Transport-Requests-1
Adding to simple memtable                                                        | /127.0.0.1       | 734                      | MutationStage-4     
****************************


13:06:31.771 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:31.776 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:31.777 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:31.841 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS achilles_embedded.simple_insert_with_schema_name( id bigint, date timestamp, consistencylist list<text>, simplemap map<int, text>, simpleset set<double>, value text, PRIMARY KEY(id, date)) WITH CLUSTERING ORDER BY(date ASC);

13:06:32.079 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 485db540-aa24-4751-bf54-556295ec6e32 : [INSERT INTO achilles_embedded.simple_insert_with_schema_name (id,date,consistencylist,simplemap,simpleset,value) VALUES (:id,:date,:consistencylist,:simplemap,:simpleset,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [929854795922697216, Wed Sep 30 19:00:00 CDT 2015, null, null, null, value_tenant3, 0]
	 Encoded bound values : [929854795922697216, Wed Sep 30 19:00:00 CDT 2015, null, null, null, value_tenant3, 0]
13:06:32.083 [achilles-default-executor-82] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 485db540-aa24-4751-bf54-556295ec6e32 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 245                      | Native-Transport-Requests-4
Adding to simple_insert_with_schema_name memtable                                | /127.0.0.1       | 543                      | MutationStage-5     
****************************


13:06:32.084 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:32.088 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:32.090 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:32.151 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(8922865131328672768, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:32.155 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID fecd9da9-4923-41fa-83c0-cf199bb407a7 : [DELETE FROM achilles_embedded.simple WHERE id=:id AND date=:date IF consistencylist!=:consistencylist;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [8922865131328672768, Wed Sep 30 19:00:00 CDT 2015, [ALL]]
	 Encoded bound values : [8922865131328672768, Wed Sep 30 19:00:00 CDT 2015, [ALL]]
13:06:32.165 [achilles-default-executor-83] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID fecd9da9-4923-41fa-83c0-cf199bb407a7 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Preparing cc8351c0-29f4-11ec-392b-87480e444add                                   | /127.0.0.1       | 309                      | Native-Transport-Requests-4
Sending PAXOS_PREPARE message to localhost/127.0.0.1                             | /127.0.0.1       | 445                      | MessagingService-Outgoing-localhost/127.0.0.1-Small
PAXOS_PREPARE message received from /127.0.0.1                                   | /127.0.0.1       | 617                      | MessagingService-Incoming-/127.0.0.1
Executing single-partition query on paxos                                        | /127.0.0.1       | 808                      | MutationStage-1     
Acquiring sstable references                                                     | /127.0.0.1       | 852                      | MutationStage-1     
Merging memtable contents                                                        | /127.0.0.1       | 872                      | MutationStage-1     
Read 0 live rows and 0 tombstone cells                                           | /127.0.0.1       | 948                      | MutationStage-1     
Promising ballot cc8351c0-29f4-11ec-392b-87480e444add                            | /127.0.0.1       | 980                      | MutationStage-1     
Appending to commitlog                                                           | /127.0.0.1       | 1042                     | MutationStage-1     
Adding to paxos memtable                                                         | /127.0.0.1       | 1087                     | MutationStage-1     
Sending REQUEST_RESPONSE message to localhost/127.0.0.1                          | /127.0.0.1       | 1196                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
REQUEST_RESPONSE message received from /127.0.0.1                                | /127.0.0.1       | 1414                     | MessagingService-Incoming-/127.0.0.1
Processing response from /127.0.0.1                                              | /127.0.0.1       | 1590                     | RequestResponseStage-2
Reading existing values for CAS precondition                                     | /127.0.0.1       | 1660                     | Native-Transport-Requests-4
Executing single-partition query on simple                                       | /127.0.0.1       | 1809                     | ReadStage-2         
Acquiring sstable references                                                     | /127.0.0.1       | 1840                     | ReadStage-2         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 1886                     | ReadStage-2         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 2006                     | ReadStage-2         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 2038                     | ReadStage-2         
CAS precondition is met; proposing client-requested updates for cc8351c0-29f4-11ec-392b-87480e444add | /127.0.0.1       | 2303                     | Native-Transport-Requests-4
Sending PAXOS_PROPOSE message to localhost/127.0.0.1                             | /127.0.0.1       | 2439                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
PAXOS_PROPOSE message received from /127.0.0.1                                   | /127.0.0.1       | 2636                     | MessagingService-Incoming-/127.0.0.1
Executing single-partition query on paxos                                        | /127.0.0.1       | 3335                     | MutationStage-2     
Acquiring sstable references                                                     | /127.0.0.1       | 3378                     | MutationStage-2     
Merging memtable contents                                                        | /127.0.0.1       | 3395                     | MutationStage-2     
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 3499                     | MutationStage-2     
Accepting proposal Commit(cc8351c0-29f4-11ec-392b-87480e444add, [achilles_embedded.simple] key=8922865131328672768 partition_deletion=deletedAt=-9223372036854775808, localDeletion=2147483647 columns=[[] | []]
    Row[info=[ts=-9223372036854775808] del=deletedAt=1633889192155999, localDeletion=1633889192 ]: date=2015-09-30 19:00-0500 | ) | /127.0.0.1       | 3650                     | MutationStage-2     
Appending to commitlog                                                           | /127.0.0.1       | 3738                     | MutationStage-2     
Adding to paxos memtable                                                         | /127.0.0.1       | 3785                     | MutationStage-2     
Sending REQUEST_RESPONSE message to localhost/127.0.0.1                          | /127.0.0.1       | 3901                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
REQUEST_RESPONSE message received from /127.0.0.1                                | /127.0.0.1       | 4035                     | MessagingService-Incoming-/127.0.0.1
Processing response from /127.0.0.1                                              | /127.0.0.1       | 4092                     | RequestResponseStage-2
Executing single-partition query on local                                        | /127.0.0.1       | 4255                     | MutationStage-2     
Acquiring sstable references                                                     | /127.0.0.1       | 4283                     | MutationStage-2     
Skipped 0/2 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 4310                     | MutationStage-2     
Key cache hit for sstable 217                                                    | /127.0.0.1       | 4372                     | MutationStage-2     
Partition index with 0 entries found for sstable 218                             | /127.0.0.1       | 4529                     | MutationStage-2     
Merged data from memtables and 2 sstables                                        | /127.0.0.1       | 4762                     | MutationStage-2     
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 4801                     | MutationStage-2     
Committing proposal Commit(cc8351c0-29f4-11ec-392b-87480e444add, [achilles_embedded.simple] key=8922865131328672768 partition_deletion=deletedAt=-9223372036854775808, localDeletion=2147483647 columns=[[] | []]
    Row[info=[ts=-9223372036854775808] del=deletedAt=1633889192155999, localDeletion=1633889192 ]: date=2015-09-30 19:00-0500 | ) | /127.0.0.1       | 4924                     | MutationStage-2     
Appending to commitlog                                                           | /127.0.0.1       | 4944                     | MutationStage-2     
Adding to simple memtable                                                        | /127.0.0.1       | 4971                     | MutationStage-2     
Appending to commitlog                                                           | /127.0.0.1       | 5074                     | MutationStage-2     
Adding to paxos memtable                                                         | /127.0.0.1       | 5116                     | MutationStage-2     
CAS applied successfully                                                         | /127.0.0.1       | 5199                     | Native-Transport-Requests-4
****************************


13:06:32.167 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:32.171 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithcomplexindices(
		id bigint,
		clust1 int,
		clust2 int,
		clust3 text,
		collectionindex list<text>,
		fullindexoncollection frozen<set<text>>,
		indexonmapentry map<int, text>,
		indexonmapkey map<text, text>,
		indexonmapvalue map<int, text>,
		simpleindex text,
		PRIMARY KEY(id, clust1, clust2, clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, clust2 ASC, clust3 ASC);

13:06:32.410 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS collectionindex_index ON achilles_embedded.entitywithcomplexindices ( collectionindex );

13:06:32.769 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS fullindexoncollection_index ON achilles_embedded.entitywithcomplexindices ( FULL(fullindexoncollection) );

13:06:33.050 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapentry_index ON achilles_embedded.entitywithcomplexindices ( ENTRIES(indexonmapentry) );

13:06:33.352 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapkey_index ON achilles_embedded.entitywithcomplexindices ( KEYS(indexonmapkey) );

13:06:33.646 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapvalue_index ON achilles_embedded.entitywithcomplexindices ( indexonmapvalue );

13:06:33.944 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS simpleindex_index ON achilles_embedded.entitywithcomplexindices ( simpleindex );

13:06:34.257 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:06:34.331 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6816451063377705984, 1, 1, '1', '111', ['1', '1', '1'], {'111'}, {'111': '111'}, {111: '111'}, {111 : '111'});

13:06:34.341 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6816451063377705984, 1, 1, '2', '112', ['1', '1', '2'], {'112'}, {'112': '112'}, {112: '112'}, {112 : '112'});

13:06:34.343 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6816451063377705984, 1, 1, '3', '113', ['1', '1', '3'], {'113'}, {'113': '113'}, {113: '113'}, {113 : '113'});

13:06:34.350 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6816451063377705984, 2, 1, '1', '211', ['2', '1', '1'], {'211'}, {'211': '211'}, {211: '211'}, {211 : '211'});

13:06:34.351 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6816451063377705984, 2, 1, '2', '212', ['2', '1', '2'], {'212'}, {'212': '212'}, {212: '212'}, {212 : '212'});

13:06:34.352 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6816451063377705984, 2, 1, '3', '213', ['2', '1', '3'], {'213'}, {'213': '213'}, {213: '213'}, {213 : '213'});

13:06:34.353 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6816451063377705984, 3, 1, '1', '311', ['3', '1', '1'], {'311'}, {'311': '311'}, {311: '311'}, {311 : '311'});

13:06:34.354 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6816451063377705984, 3, 1, '2', '312', ['3', '1', '2'], {'312'}, {'312': '312'}, {312: '312'}, {312 : '312'});

13:06:34.355 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6816451063377705984, 3, 1, '3', '313', ['3', '1', '3'], {'313'}, {'313': '313'}, {313: '313'}, {313 : '313'});

13:06:34.356 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6816451063377705984, 4, 1, '1', '411', ['4', '1', '1'], {'411'}, {'411': '411'}, {411: '411'}, {411 : '411'});

13:06:34.371 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID d94c6dc4-5e89-4d3e-a503-a54091728f6b : [SELECT * FROM achilles_embedded.entitywithcomplexindices WHERE simpleindex=:simpleindex AND clust1=:clust1 AND clust3=:clust3 ALLOW FILTERING;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [312, 3, 2]
	 Encoded bound values : [312, 3, 2]
13:06:34.382 [achilles-default-executor-84] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), clust1(int), clust2(int), clust3(varchar), collectionindex(list<varchar>), fullindexoncollection(set<varchar>), indexonmapentry(map<int, varchar>), indexonmapkey(map<varchar, varchar>), indexonmapvalue(map<int, varchar>), simpleindex(varchar)]]
13:06:34.382 [achilles-default-executor-84] DEBUG ACHILLES_DML_STATEMENT - Query ID d94c6dc4-5e89-4d3e-a503-a54091728f6b results : 
	id: 6816451063377705984, clust1: 3, clust2: 1, clust3: 2, collectionindex: [3, 1, 2], fullindexoncollection: [312], indexonmapentry: {312=312}, indexonmapkey: {312=312}, indexonmapvalue: {312=312}, simpleindex: 312

13:06:34.383 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:06:34.445 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:34.449 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithcomplexindices(
		id bigint,
		clust1 int,
		clust2 int,
		clust3 text,
		collectionindex list<text>,
		fullindexoncollection frozen<set<text>>,
		indexonmapentry map<int, text>,
		indexonmapkey map<text, text>,
		indexonmapvalue map<int, text>,
		simpleindex text,
		PRIMARY KEY(id, clust1, clust2, clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, clust2 ASC, clust3 ASC);

13:06:34.450 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS collectionindex_index ON achilles_embedded.entitywithcomplexindices ( collectionindex );

13:06:34.451 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS fullindexoncollection_index ON achilles_embedded.entitywithcomplexindices ( FULL(fullindexoncollection) );

13:06:34.451 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapentry_index ON achilles_embedded.entitywithcomplexindices ( ENTRIES(indexonmapentry) );

13:06:34.452 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapkey_index ON achilles_embedded.entitywithcomplexindices ( KEYS(indexonmapkey) );

13:06:34.452 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapvalue_index ON achilles_embedded.entitywithcomplexindices ( indexonmapvalue );

13:06:34.453 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS simpleindex_index ON achilles_embedded.entitywithcomplexindices ( simpleindex );

13:06:34.454 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:06:34.532 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(3734046561441239040, 1, 1, '1', '111', ['1', '1', '1'], {'111'}, {'111': '111'}, {111: '111'}, {111 : '111'});

13:06:34.535 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(3734046561441239040, 1, 1, '2', '112', ['1', '1', '2'], {'112'}, {'112': '112'}, {112: '112'}, {112 : '112'});

13:06:34.536 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(3734046561441239040, 1, 1, '3', '113', ['1', '1', '3'], {'113'}, {'113': '113'}, {113: '113'}, {113 : '113'});

13:06:34.537 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(3734046561441239040, 2, 1, '1', '211', ['2', '1', '1'], {'211'}, {'211': '211'}, {211: '211'}, {211 : '211'});

13:06:34.538 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(3734046561441239040, 2, 1, '2', '212', ['2', '1', '2'], {'212'}, {'212': '212'}, {212: '212'}, {212 : '212'});

13:06:34.539 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(3734046561441239040, 2, 1, '3', '213', ['2', '1', '3'], {'213'}, {'213': '213'}, {213: '213'}, {213 : '213'});

13:06:34.540 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(3734046561441239040, 3, 1, '1', '311', ['3', '1', '1'], {'311'}, {'311': '311'}, {311: '311'}, {311 : '311'});

13:06:34.541 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(3734046561441239040, 3, 1, '2', '312', ['3', '1', '2'], {'312'}, {'312': '312'}, {312: '312'}, {312 : '312'});

13:06:34.542 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(3734046561441239040, 3, 1, '3', '313', ['3', '1', '3'], {'313'}, {'313': '313'}, {313: '313'}, {313 : '313'});

13:06:34.543 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(3734046561441239040, 4, 1, '1', '411', ['4', '1', '1'], {'411'}, {'411': '411'}, {411: '411'}, {411 : '411'});

13:06:34.545 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 67b443ae-e8fd-4d54-b675-75604e5a8c50 : [SELECT * FROM achilles_embedded.entitywithcomplexindices WHERE simpleindex=:simpleindex AND clust1>=:clust1 ALLOW FILTERING;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [312, 5]
	 Encoded bound values : [312, 5]
13:06:34.550 [achilles-default-executor-85] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: true, Columns[id(bigint), clust1(int), clust2(int), clust3(varchar), collectionindex(list<varchar>), fullindexoncollection(set<varchar>), indexonmapentry(map<int, varchar>), indexonmapkey(map<varchar, varchar>), indexonmapvalue(map<int, varchar>), simpleindex(varchar)]]
13:06:34.550 [achilles-default-executor-85] DEBUG ACHILLES_DML_STATEMENT - Query ID 67b443ae-e8fd-4d54-b675-75604e5a8c50 results : 

13:06:34.550 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:06:34.620 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:34.625 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithcomplexindices(
		id bigint,
		clust1 int,
		clust2 int,
		clust3 text,
		collectionindex list<text>,
		fullindexoncollection frozen<set<text>>,
		indexonmapentry map<int, text>,
		indexonmapkey map<text, text>,
		indexonmapvalue map<int, text>,
		simpleindex text,
		PRIMARY KEY(id, clust1, clust2, clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, clust2 ASC, clust3 ASC);

13:06:34.626 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS collectionindex_index ON achilles_embedded.entitywithcomplexindices ( collectionindex );

13:06:34.626 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS fullindexoncollection_index ON achilles_embedded.entitywithcomplexindices ( FULL(fullindexoncollection) );

13:06:34.626 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapentry_index ON achilles_embedded.entitywithcomplexindices ( ENTRIES(indexonmapentry) );

13:06:34.627 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapkey_index ON achilles_embedded.entitywithcomplexindices ( KEYS(indexonmapkey) );

13:06:34.627 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapvalue_index ON achilles_embedded.entitywithcomplexindices ( indexonmapvalue );

13:06:34.628 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS simpleindex_index ON achilles_embedded.entitywithcomplexindices ( simpleindex );

13:06:34.629 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:06:34.691 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(2510826844387279872, 1, 1, '1', '111', ['1', '1', '1'], {'111'}, {'111': '111'}, {111: '111'}, {111 : '111'});

13:06:34.713 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(2510826844387279872, 1, 1, '2', '112', ['1', '1', '2'], {'112'}, {'112': '112'}, {112: '112'}, {112 : '112'});

13:06:34.715 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(2510826844387279872, 1, 1, '3', '113', ['1', '1', '3'], {'113'}, {'113': '113'}, {113: '113'}, {113 : '113'});

13:06:34.716 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(2510826844387279872, 2, 1, '1', '211', ['2', '1', '1'], {'211'}, {'211': '211'}, {211: '211'}, {211 : '211'});

13:06:34.717 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(2510826844387279872, 2, 1, '2', '212', ['2', '1', '2'], {'212'}, {'212': '212'}, {212: '212'}, {212 : '212'});

13:06:34.718 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(2510826844387279872, 2, 1, '3', '213', ['2', '1', '3'], {'213'}, {'213': '213'}, {213: '213'}, {213 : '213'});

13:06:34.719 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(2510826844387279872, 3, 1, '1', '311', ['3', '1', '1'], {'311'}, {'311': '311'}, {311: '311'}, {311 : '311'});

13:06:34.720 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(2510826844387279872, 3, 1, '2', '312', ['3', '1', '2'], {'312'}, {'312': '312'}, {312: '312'}, {312 : '312'});

13:06:34.721 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(2510826844387279872, 3, 1, '3', '313', ['3', '1', '3'], {'313'}, {'313': '313'}, {313: '313'}, {313 : '313'});

13:06:34.722 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(2510826844387279872, 4, 1, '1', '411', ['4', '1', '1'], {'411'}, {'411': '411'}, {411: '411'}, {411 : '411'});

13:06:34.727 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 1cba6278-470b-4fc9-aeff-433d14dae1ca : [SELECT * FROM achilles_embedded.entitywithcomplexindices WHERE indexonmapentry[:indexOnMapEntry_key] = :indexOnMapEntry_value ALLOW FILTERING;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [212, 212]
	 Encoded bound values : [212, 212]
13:06:34.729 [achilles-default-executor-86] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), clust1(int), clust2(int), clust3(varchar), collectionindex(list<varchar>), fullindexoncollection(set<varchar>), indexonmapentry(map<int, varchar>), indexonmapkey(map<varchar, varchar>), indexonmapvalue(map<int, varchar>), simpleindex(varchar)]]
13:06:34.729 [achilles-default-executor-86] DEBUG ACHILLES_DML_STATEMENT - Query ID 1cba6278-470b-4fc9-aeff-433d14dae1ca results : 
	id: 2510826844387279872, clust1: 2, clust2: 1, clust3: 2, collectionindex: [2, 1, 2], fullindexoncollection: [212], indexonmapentry: {212=212}, indexonmapkey: {212=212}, indexonmapvalue: {212=212}, simpleindex: 212

13:06:34.730 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:06:34.800 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:34.804 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithcomplexindices(
		id bigint,
		clust1 int,
		clust2 int,
		clust3 text,
		collectionindex list<text>,
		fullindexoncollection frozen<set<text>>,
		indexonmapentry map<int, text>,
		indexonmapkey map<text, text>,
		indexonmapvalue map<int, text>,
		simpleindex text,
		PRIMARY KEY(id, clust1, clust2, clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, clust2 ASC, clust3 ASC);

13:06:34.805 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS collectionindex_index ON achilles_embedded.entitywithcomplexindices ( collectionindex );

13:06:34.806 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS fullindexoncollection_index ON achilles_embedded.entitywithcomplexindices ( FULL(fullindexoncollection) );

13:06:34.807 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapentry_index ON achilles_embedded.entitywithcomplexindices ( ENTRIES(indexonmapentry) );

13:06:34.807 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapkey_index ON achilles_embedded.entitywithcomplexindices ( KEYS(indexonmapkey) );

13:06:34.808 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapvalue_index ON achilles_embedded.entitywithcomplexindices ( indexonmapvalue );

13:06:34.808 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS simpleindex_index ON achilles_embedded.entitywithcomplexindices ( simpleindex );

13:06:34.809 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:06:34.880 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6544651702438373376, 1, 1, '1', '111', ['1', '1', '1'], {'111'}, {'111': '111'}, {111: '111'}, {111 : '111'});

13:06:34.882 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6544651702438373376, 1, 1, '2', '112', ['1', '1', '2'], {'112'}, {'112': '112'}, {112: '112'}, {112 : '112'});

13:06:34.883 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6544651702438373376, 1, 1, '3', '113', ['1', '1', '3'], {'113'}, {'113': '113'}, {113: '113'}, {113 : '113'});

13:06:34.884 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6544651702438373376, 2, 1, '1', '211', ['2', '1', '1'], {'211'}, {'211': '211'}, {211: '211'}, {211 : '211'});

13:06:34.885 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6544651702438373376, 2, 1, '2', '212', ['2', '1', '2'], {'212'}, {'212': '212'}, {212: '212'}, {212 : '212'});

13:06:34.886 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6544651702438373376, 2, 1, '3', '213', ['2', '1', '3'], {'213'}, {'213': '213'}, {213: '213'}, {213 : '213'});

13:06:34.887 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6544651702438373376, 3, 1, '1', '311', ['3', '1', '1'], {'311'}, {'311': '311'}, {311: '311'}, {311 : '311'});

13:06:34.888 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6544651702438373376, 3, 1, '2', '312', ['3', '1', '2'], {'312'}, {'312': '312'}, {312: '312'}, {312 : '312'});

13:06:34.889 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6544651702438373376, 3, 1, '3', '313', ['3', '1', '3'], {'313'}, {'313': '313'}, {313: '313'}, {313 : '313'});

13:06:34.889 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(6544651702438373376, 4, 1, '1', '411', ['4', '1', '1'], {'411'}, {'411': '411'}, {411: '411'}, {411 : '411'});

13:06:34.892 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID c5c2df1c-dfc5-45d9-b8fd-e7ee3bb5456e : [SELECT * FROM achilles_embedded.entitywithcomplexindices WHERE simpleindex=:simpleindex AND clust1>=:clust1_Lte AND clust1<=:clust1_Lte ALLOW FILTERING;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [312, 1, 4]
	 Encoded bound values : [312, 1, 4]
13:06:34.899 [achilles-default-executor-87] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), clust1(int), clust2(int), clust3(varchar), collectionindex(list<varchar>), fullindexoncollection(set<varchar>), indexonmapentry(map<int, varchar>), indexonmapkey(map<varchar, varchar>), indexonmapvalue(map<int, varchar>), simpleindex(varchar)]]
13:06:34.899 [achilles-default-executor-87] DEBUG ACHILLES_DML_STATEMENT - Query ID c5c2df1c-dfc5-45d9-b8fd-e7ee3bb5456e results : 
	id: 6544651702438373376, clust1: 3, clust2: 1, clust3: 2, collectionindex: [3, 1, 2], fullindexoncollection: [312], indexonmapentry: {312=312}, indexonmapkey: {312=312}, indexonmapvalue: {312=312}, simpleindex: 312

13:06:34.899 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:06:34.960 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:34.966 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithcomplexindices(
		id bigint,
		clust1 int,
		clust2 int,
		clust3 text,
		collectionindex list<text>,
		fullindexoncollection frozen<set<text>>,
		indexonmapentry map<int, text>,
		indexonmapkey map<text, text>,
		indexonmapvalue map<int, text>,
		simpleindex text,
		PRIMARY KEY(id, clust1, clust2, clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, clust2 ASC, clust3 ASC);

13:06:34.967 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS collectionindex_index ON achilles_embedded.entitywithcomplexindices ( collectionindex );

13:06:34.967 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS fullindexoncollection_index ON achilles_embedded.entitywithcomplexindices ( FULL(fullindexoncollection) );

13:06:34.968 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapentry_index ON achilles_embedded.entitywithcomplexindices ( ENTRIES(indexonmapentry) );

13:06:34.968 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapkey_index ON achilles_embedded.entitywithcomplexindices ( KEYS(indexonmapkey) );

13:06:34.969 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapvalue_index ON achilles_embedded.entitywithcomplexindices ( indexonmapvalue );

13:06:34.969 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS simpleindex_index ON achilles_embedded.entitywithcomplexindices ( simpleindex );

13:06:34.970 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:06:35.049 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8426203616990431232, 1, 1, '1', '111', ['1', '1', '1'], {'111'}, {'111': '111'}, {111: '111'}, {111 : '111'});

13:06:35.051 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8426203616990431232, 1, 1, '2', '112', ['1', '1', '2'], {'112'}, {'112': '112'}, {112: '112'}, {112 : '112'});

13:06:35.052 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8426203616990431232, 1, 1, '3', '113', ['1', '1', '3'], {'113'}, {'113': '113'}, {113: '113'}, {113 : '113'});

13:06:35.053 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8426203616990431232, 2, 1, '1', '211', ['2', '1', '1'], {'211'}, {'211': '211'}, {211: '211'}, {211 : '211'});

13:06:35.054 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8426203616990431232, 2, 1, '2', '212', ['2', '1', '2'], {'212'}, {'212': '212'}, {212: '212'}, {212 : '212'});

13:06:35.055 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8426203616990431232, 2, 1, '3', '213', ['2', '1', '3'], {'213'}, {'213': '213'}, {213: '213'}, {213 : '213'});

13:06:35.056 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8426203616990431232, 3, 1, '1', '311', ['3', '1', '1'], {'311'}, {'311': '311'}, {311: '311'}, {311 : '311'});

13:06:35.057 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8426203616990431232, 3, 1, '2', '312', ['3', '1', '2'], {'312'}, {'312': '312'}, {312: '312'}, {312 : '312'});

13:06:35.058 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8426203616990431232, 3, 1, '3', '313', ['3', '1', '3'], {'313'}, {'313': '313'}, {313: '313'}, {313 : '313'});

13:06:35.059 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8426203616990431232, 4, 1, '1', '411', ['4', '1', '1'], {'411'}, {'411': '411'}, {411: '411'}, {411 : '411'});

13:06:35.067 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID e504160e-988b-4e6a-b30e-01c1ad34010a : [SELECT * FROM achilles_embedded.entitywithcomplexindices WHERE indexonmapvalue CONTAINS :indexonmapvalue ALLOW FILTERING;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [211]
	 Encoded bound values : [211]
13:06:35.071 [achilles-default-executor-88] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), clust1(int), clust2(int), clust3(varchar), collectionindex(list<varchar>), fullindexoncollection(set<varchar>), indexonmapentry(map<int, varchar>), indexonmapkey(map<varchar, varchar>), indexonmapvalue(map<int, varchar>), simpleindex(varchar)]]
13:06:35.071 [achilles-default-executor-88] DEBUG ACHILLES_DML_STATEMENT - Query ID e504160e-988b-4e6a-b30e-01c1ad34010a results : 
	id: 8426203616990431232, clust1: 2, clust2: 1, clust3: 1, collectionindex: [2, 1, 1], fullindexoncollection: [211], indexonmapentry: {211=211}, indexonmapkey: {211=211}, indexonmapvalue: {211=211}, simpleindex: 211

13:06:35.072 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:06:35.145 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:35.150 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithcomplexindices(
		id bigint,
		clust1 int,
		clust2 int,
		clust3 text,
		collectionindex list<text>,
		fullindexoncollection frozen<set<text>>,
		indexonmapentry map<int, text>,
		indexonmapkey map<text, text>,
		indexonmapvalue map<int, text>,
		simpleindex text,
		PRIMARY KEY(id, clust1, clust2, clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, clust2 ASC, clust3 ASC);

13:06:35.151 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS collectionindex_index ON achilles_embedded.entitywithcomplexindices ( collectionindex );

13:06:35.151 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS fullindexoncollection_index ON achilles_embedded.entitywithcomplexindices ( FULL(fullindexoncollection) );

13:06:35.152 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapentry_index ON achilles_embedded.entitywithcomplexindices ( ENTRIES(indexonmapentry) );

13:06:35.152 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapkey_index ON achilles_embedded.entitywithcomplexindices ( KEYS(indexonmapkey) );

13:06:35.153 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapvalue_index ON achilles_embedded.entitywithcomplexindices ( indexonmapvalue );

13:06:35.153 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS simpleindex_index ON achilles_embedded.entitywithcomplexindices ( simpleindex );

13:06:35.154 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:06:35.217 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(72333134605369344, 1, 1, '1', '111', ['1', '1', '1'], {'111'}, {'111': '111'}, {111: '111'}, {111 : '111'});

13:06:35.220 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(72333134605369344, 1, 1, '2', '112', ['1', '1', '2'], {'112'}, {'112': '112'}, {112: '112'}, {112 : '112'});

13:06:35.221 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(72333134605369344, 1, 1, '3', '113', ['1', '1', '3'], {'113'}, {'113': '113'}, {113: '113'}, {113 : '113'});

13:06:35.221 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(72333134605369344, 2, 1, '1', '211', ['2', '1', '1'], {'211'}, {'211': '211'}, {211: '211'}, {211 : '211'});

13:06:35.222 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(72333134605369344, 2, 1, '2', '212', ['2', '1', '2'], {'212'}, {'212': '212'}, {212: '212'}, {212 : '212'});

13:06:35.223 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(72333134605369344, 2, 1, '3', '213', ['2', '1', '3'], {'213'}, {'213': '213'}, {213: '213'}, {213 : '213'});

13:06:35.224 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(72333134605369344, 3, 1, '1', '311', ['3', '1', '1'], {'311'}, {'311': '311'}, {311: '311'}, {311 : '311'});

13:06:35.225 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(72333134605369344, 3, 1, '2', '312', ['3', '1', '2'], {'312'}, {'312': '312'}, {312: '312'}, {312 : '312'});

13:06:35.226 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(72333134605369344, 3, 1, '3', '313', ['3', '1', '3'], {'313'}, {'313': '313'}, {313: '313'}, {313 : '313'});

13:06:35.227 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(72333134605369344, 4, 1, '1', '411', ['4', '1', '1'], {'411'}, {'411': '411'}, {411: '411'}, {411 : '411'});

13:06:35.233 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID e49f42f3-2e61-495f-a5f3-4be1f6b448f1 : [SELECT * FROM achilles_embedded.entitywithcomplexindices WHERE simpleindex=:simpleindex AND (clust1,clust2,clust3)>=(:clust1,:clust2,:clust3) AND (clust1,clust2)<=(:clust1,:clust2) ALLOW FILTERING;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [312, 1, 1, 1, 3, 2]
	 Encoded bound values : [312, 1, 1, 1, 3, 2]
13:06:35.235 [achilles-default-executor-89] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), clust1(int), clust2(int), clust3(varchar), collectionindex(list<varchar>), fullindexoncollection(set<varchar>), indexonmapentry(map<int, varchar>), indexonmapkey(map<varchar, varchar>), indexonmapvalue(map<int, varchar>), simpleindex(varchar)]]
13:06:35.235 [achilles-default-executor-89] DEBUG ACHILLES_DML_STATEMENT - Query ID e49f42f3-2e61-495f-a5f3-4be1f6b448f1 results : 
	id: 72333134605369344, clust1: 3, clust2: 1, clust3: 2, collectionindex: [3, 1, 2], fullindexoncollection: [312], indexonmapentry: {312=312}, indexonmapkey: {312=312}, indexonmapvalue: {312=312}, simpleindex: 312

13:06:35.236 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:06:35.313 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:35.317 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithcomplexindices(
		id bigint,
		clust1 int,
		clust2 int,
		clust3 text,
		collectionindex list<text>,
		fullindexoncollection frozen<set<text>>,
		indexonmapentry map<int, text>,
		indexonmapkey map<text, text>,
		indexonmapvalue map<int, text>,
		simpleindex text,
		PRIMARY KEY(id, clust1, clust2, clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, clust2 ASC, clust3 ASC);

13:06:35.318 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS collectionindex_index ON achilles_embedded.entitywithcomplexindices ( collectionindex );

13:06:35.318 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS fullindexoncollection_index ON achilles_embedded.entitywithcomplexindices ( FULL(fullindexoncollection) );

13:06:35.319 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapentry_index ON achilles_embedded.entitywithcomplexindices ( ENTRIES(indexonmapentry) );

13:06:35.319 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapkey_index ON achilles_embedded.entitywithcomplexindices ( KEYS(indexonmapkey) );

13:06:35.320 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapvalue_index ON achilles_embedded.entitywithcomplexindices ( indexonmapvalue );

13:06:35.320 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS simpleindex_index ON achilles_embedded.entitywithcomplexindices ( simpleindex );

13:06:35.321 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:06:35.397 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(935997585877479424, 1, 1, '1', '111', ['1', '1', '1'], {'111'}, {'111': '111'}, {111: '111'}, {111 : '111'});

13:06:35.400 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(935997585877479424, 1, 1, '2', '112', ['1', '1', '2'], {'112'}, {'112': '112'}, {112: '112'}, {112 : '112'});

13:06:35.401 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(935997585877479424, 1, 1, '3', '113', ['1', '1', '3'], {'113'}, {'113': '113'}, {113: '113'}, {113 : '113'});

13:06:35.402 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(935997585877479424, 2, 1, '1', '211', ['2', '1', '1'], {'211'}, {'211': '211'}, {211: '211'}, {211 : '211'});

13:06:35.403 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(935997585877479424, 2, 1, '2', '212', ['2', '1', '2'], {'212'}, {'212': '212'}, {212: '212'}, {212 : '212'});

13:06:35.404 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(935997585877479424, 2, 1, '3', '213', ['2', '1', '3'], {'213'}, {'213': '213'}, {213: '213'}, {213 : '213'});

13:06:35.404 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(935997585877479424, 3, 1, '1', '311', ['3', '1', '1'], {'311'}, {'311': '311'}, {311: '311'}, {311 : '311'});

13:06:35.405 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(935997585877479424, 3, 1, '2', '312', ['3', '1', '2'], {'312'}, {'312': '312'}, {312: '312'}, {312 : '312'});

13:06:35.406 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(935997585877479424, 3, 1, '3', '313', ['3', '1', '3'], {'313'}, {'313': '313'}, {313: '313'}, {313 : '313'});

13:06:35.407 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(935997585877479424, 4, 1, '1', '411', ['4', '1', '1'], {'411'}, {'411': '411'}, {411: '411'}, {411 : '411'});

13:06:35.411 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID caed2458-22b3-49b6-9828-adbc482f54eb : [SELECT * FROM achilles_embedded.entitywithcomplexindices WHERE indexonmapkey CONTAINS KEY :indexonmapkey ALLOW FILTERING;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [312]
	 Encoded bound values : [312]
13:06:35.412 [achilles-default-executor-90] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), clust1(int), clust2(int), clust3(varchar), collectionindex(list<varchar>), fullindexoncollection(set<varchar>), indexonmapentry(map<int, varchar>), indexonmapkey(map<varchar, varchar>), indexonmapvalue(map<int, varchar>), simpleindex(varchar)]]
13:06:35.413 [achilles-default-executor-90] DEBUG ACHILLES_DML_STATEMENT - Query ID caed2458-22b3-49b6-9828-adbc482f54eb results : 
	id: 935997585877479424, clust1: 3, clust2: 1, clust3: 2, collectionindex: [3, 1, 2], fullindexoncollection: [312], indexonmapentry: {312=312}, indexonmapkey: {312=312}, indexonmapvalue: {312=312}, simpleindex: 312

13:06:35.413 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:06:35.475 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:35.479 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithcomplexindices(
		id bigint,
		clust1 int,
		clust2 int,
		clust3 text,
		collectionindex list<text>,
		fullindexoncollection frozen<set<text>>,
		indexonmapentry map<int, text>,
		indexonmapkey map<text, text>,
		indexonmapvalue map<int, text>,
		simpleindex text,
		PRIMARY KEY(id, clust1, clust2, clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, clust2 ASC, clust3 ASC);

13:06:35.480 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS collectionindex_index ON achilles_embedded.entitywithcomplexindices ( collectionindex );

13:06:35.481 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS fullindexoncollection_index ON achilles_embedded.entitywithcomplexindices ( FULL(fullindexoncollection) );

13:06:35.481 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapentry_index ON achilles_embedded.entitywithcomplexindices ( ENTRIES(indexonmapentry) );

13:06:35.482 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapkey_index ON achilles_embedded.entitywithcomplexindices ( KEYS(indexonmapkey) );

13:06:35.482 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapvalue_index ON achilles_embedded.entitywithcomplexindices ( indexonmapvalue );

13:06:35.483 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS simpleindex_index ON achilles_embedded.entitywithcomplexindices ( simpleindex );

13:06:35.484 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:06:35.572 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7772198577826421760, 1, 1, '1', '111', ['1', '1', '1'], {'111'}, {'111': '111'}, {111: '111'}, {111 : '111'});

13:06:35.576 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7772198577826421760, 1, 1, '2', '112', ['1', '1', '2'], {'112'}, {'112': '112'}, {112: '112'}, {112 : '112'});

13:06:35.577 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7772198577826421760, 1, 1, '3', '113', ['1', '1', '3'], {'113'}, {'113': '113'}, {113: '113'}, {113 : '113'});

13:06:35.578 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7772198577826421760, 2, 1, '1', '211', ['2', '1', '1'], {'211'}, {'211': '211'}, {211: '211'}, {211 : '211'});

13:06:35.580 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7772198577826421760, 2, 1, '2', '212', ['2', '1', '2'], {'212'}, {'212': '212'}, {212: '212'}, {212 : '212'});

13:06:35.582 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7772198577826421760, 2, 1, '3', '213', ['2', '1', '3'], {'213'}, {'213': '213'}, {213: '213'}, {213 : '213'});

13:06:35.584 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7772198577826421760, 3, 1, '1', '311', ['3', '1', '1'], {'311'}, {'311': '311'}, {311: '311'}, {311 : '311'});

13:06:35.585 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7772198577826421760, 3, 1, '2', '312', ['3', '1', '2'], {'312'}, {'312': '312'}, {312: '312'}, {312 : '312'});

13:06:35.586 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7772198577826421760, 3, 1, '3', '313', ['3', '1', '3'], {'313'}, {'313': '313'}, {313: '313'}, {313 : '313'});

13:06:35.589 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(7772198577826421760, 4, 1, '1', '411', ['4', '1', '1'], {'411'}, {'411': '411'}, {411: '411'}, {411 : '411'});

13:06:35.594 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID b45a0acc-cca4-4f39-99f9-8cf425a4bf78 : [SELECT * FROM achilles_embedded.entitywithcomplexindices WHERE collectionindex CONTAINS :collectionindex ALLOW FILTERING;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [4]
	 Encoded bound values : [4]
13:06:35.597 [achilles-default-executor-91] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), clust1(int), clust2(int), clust3(varchar), collectionindex(list<varchar>), fullindexoncollection(set<varchar>), indexonmapentry(map<int, varchar>), indexonmapkey(map<varchar, varchar>), indexonmapvalue(map<int, varchar>), simpleindex(varchar)]]
13:06:35.597 [achilles-default-executor-91] DEBUG ACHILLES_DML_STATEMENT - Query ID b45a0acc-cca4-4f39-99f9-8cf425a4bf78 results : 
	id: 7772198577826421760, clust1: 4, clust2: 1, clust3: 1, collectionindex: [4, 1, 1], fullindexoncollection: [411], indexonmapentry: {411=411}, indexonmapkey: {411=411}, indexonmapvalue: {411=411}, simpleindex: 411

13:06:35.597 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:06:35.658 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:35.662 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithcomplexindices(
		id bigint,
		clust1 int,
		clust2 int,
		clust3 text,
		collectionindex list<text>,
		fullindexoncollection frozen<set<text>>,
		indexonmapentry map<int, text>,
		indexonmapkey map<text, text>,
		indexonmapvalue map<int, text>,
		simpleindex text,
		PRIMARY KEY(id, clust1, clust2, clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, clust2 ASC, clust3 ASC);

13:06:35.663 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS collectionindex_index ON achilles_embedded.entitywithcomplexindices ( collectionindex );

13:06:35.663 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS fullindexoncollection_index ON achilles_embedded.entitywithcomplexindices ( FULL(fullindexoncollection) );

13:06:35.664 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapentry_index ON achilles_embedded.entitywithcomplexindices ( ENTRIES(indexonmapentry) );

13:06:35.664 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapkey_index ON achilles_embedded.entitywithcomplexindices ( KEYS(indexonmapkey) );

13:06:35.664 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapvalue_index ON achilles_embedded.entitywithcomplexindices ( indexonmapvalue );

13:06:35.665 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS simpleindex_index ON achilles_embedded.entitywithcomplexindices ( simpleindex );

13:06:35.665 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:06:35.748 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(315203365063276544, 1, 1, '1', '111', ['1', '1', '1'], {'111'}, {'111': '111'}, {111: '111'}, {111 : '111'});

13:06:35.751 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(315203365063276544, 1, 1, '2', '112', ['1', '1', '2'], {'112'}, {'112': '112'}, {112: '112'}, {112 : '112'});

13:06:35.753 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(315203365063276544, 1, 1, '3', '113', ['1', '1', '3'], {'113'}, {'113': '113'}, {113: '113'}, {113 : '113'});

13:06:35.754 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(315203365063276544, 2, 1, '1', '211', ['2', '1', '1'], {'211'}, {'211': '211'}, {211: '211'}, {211 : '211'});

13:06:35.756 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(315203365063276544, 2, 1, '2', '212', ['2', '1', '2'], {'212'}, {'212': '212'}, {212: '212'}, {212 : '212'});

13:06:35.757 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(315203365063276544, 2, 1, '3', '213', ['2', '1', '3'], {'213'}, {'213': '213'}, {213: '213'}, {213 : '213'});

13:06:35.758 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(315203365063276544, 3, 1, '1', '311', ['3', '1', '1'], {'311'}, {'311': '311'}, {311: '311'}, {311 : '311'});

13:06:35.761 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(315203365063276544, 3, 1, '2', '312', ['3', '1', '2'], {'312'}, {'312': '312'}, {312: '312'}, {312 : '312'});

13:06:35.762 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(315203365063276544, 3, 1, '3', '313', ['3', '1', '3'], {'313'}, {'313': '313'}, {313: '313'}, {313 : '313'});

13:06:35.763 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(315203365063276544, 4, 1, '1', '411', ['4', '1', '1'], {'411'}, {'411': '411'}, {411: '411'}, {411 : '411'});

13:06:35.766 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 09da5328-1cab-4513-861a-bdb43f7e62a1 : [SELECT * FROM achilles_embedded.entitywithcomplexindices WHERE fullindexoncollection=:fullindexoncollection ALLOW FILTERING;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [[311]]
	 Encoded bound values : [[311]]
13:06:35.769 [achilles-default-executor-92] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), clust1(int), clust2(int), clust3(varchar), collectionindex(list<varchar>), fullindexoncollection(set<varchar>), indexonmapentry(map<int, varchar>), indexonmapkey(map<varchar, varchar>), indexonmapvalue(map<int, varchar>), simpleindex(varchar)]]
13:06:35.769 [achilles-default-executor-92] DEBUG ACHILLES_DML_STATEMENT - Query ID 09da5328-1cab-4513-861a-bdb43f7e62a1 results : 
	id: 315203365063276544, clust1: 3, clust2: 1, clust3: 1, collectionindex: [3, 1, 1], fullindexoncollection: [311], indexonmapentry: {311=311}, indexonmapkey: {311=311}, indexonmapvalue: {311=311}, simpleindex: 311

13:06:35.770 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:06:35.835 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:35.840 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithcomplexindices(
		id bigint,
		clust1 int,
		clust2 int,
		clust3 text,
		collectionindex list<text>,
		fullindexoncollection frozen<set<text>>,
		indexonmapentry map<int, text>,
		indexonmapkey map<text, text>,
		indexonmapvalue map<int, text>,
		simpleindex text,
		PRIMARY KEY(id, clust1, clust2, clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, clust2 ASC, clust3 ASC);

13:06:35.842 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS collectionindex_index ON achilles_embedded.entitywithcomplexindices ( collectionindex );

13:06:35.843 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS fullindexoncollection_index ON achilles_embedded.entitywithcomplexindices ( FULL(fullindexoncollection) );

13:06:35.843 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapentry_index ON achilles_embedded.entitywithcomplexindices ( ENTRIES(indexonmapentry) );

13:06:35.844 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapkey_index ON achilles_embedded.entitywithcomplexindices ( KEYS(indexonmapkey) );

13:06:35.844 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapvalue_index ON achilles_embedded.entitywithcomplexindices ( indexonmapvalue );

13:06:35.845 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS simpleindex_index ON achilles_embedded.entitywithcomplexindices ( simpleindex );

13:06:35.845 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:06:35.914 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(4318222139070001152, 1, 1, '1', '111', ['1', '1', '1'], {'111'}, {'111': '111'}, {111: '111'}, {111 : '111'});

13:06:35.916 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(4318222139070001152, 1, 1, '2', '112', ['1', '1', '2'], {'112'}, {'112': '112'}, {112: '112'}, {112 : '112'});

13:06:35.917 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(4318222139070001152, 1, 1, '3', '113', ['1', '1', '3'], {'113'}, {'113': '113'}, {113: '113'}, {113 : '113'});

13:06:35.918 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(4318222139070001152, 2, 1, '1', '211', ['2', '1', '1'], {'211'}, {'211': '211'}, {211: '211'}, {211 : '211'});

13:06:35.919 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(4318222139070001152, 2, 1, '2', '212', ['2', '1', '2'], {'212'}, {'212': '212'}, {212: '212'}, {212 : '212'});

13:06:35.920 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(4318222139070001152, 2, 1, '3', '213', ['2', '1', '3'], {'213'}, {'213': '213'}, {213: '213'}, {213 : '213'});

13:06:35.921 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(4318222139070001152, 3, 1, '1', '311', ['3', '1', '1'], {'311'}, {'311': '311'}, {311: '311'}, {311 : '311'});

13:06:35.921 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(4318222139070001152, 3, 1, '2', '312', ['3', '1', '2'], {'312'}, {'312': '312'}, {312: '312'}, {312 : '312'});

13:06:35.922 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(4318222139070001152, 3, 1, '3', '313', ['3', '1', '3'], {'313'}, {'313': '313'}, {313: '313'}, {313 : '313'});

13:06:35.923 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(4318222139070001152, 4, 1, '1', '411', ['4', '1', '1'], {'411'}, {'411': '411'}, {411: '411'}, {411 : '411'});

13:06:35.926 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID ae764563-ebc0-4157-90bb-6f9d450413e7 : [SELECT * FROM achilles_embedded.entitywithcomplexindices WHERE simpleindex=:simpleindex ALLOW FILTERING;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [313]
	 Encoded bound values : [313]
13:06:35.928 [achilles-default-executor-93] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), clust1(int), clust2(int), clust3(varchar), collectionindex(list<varchar>), fullindexoncollection(set<varchar>), indexonmapentry(map<int, varchar>), indexonmapkey(map<varchar, varchar>), indexonmapvalue(map<int, varchar>), simpleindex(varchar)]]
13:06:35.935 [achilles-default-executor-93] DEBUG ACHILLES_DML_STATEMENT - Query ID ae764563-ebc0-4157-90bb-6f9d450413e7 results : 
	id: 4318222139070001152, clust1: 3, clust2: 1, clust3: 3, collectionindex: [3, 1, 3], fullindexoncollection: [313], indexonmapentry: {313=313}, indexonmapkey: {313=313}, indexonmapvalue: {313=313}, simpleindex: 313

13:06:35.935 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:06:35.997 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:36.001 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithcomplexindices(
		id bigint,
		clust1 int,
		clust2 int,
		clust3 text,
		collectionindex list<text>,
		fullindexoncollection frozen<set<text>>,
		indexonmapentry map<int, text>,
		indexonmapkey map<text, text>,
		indexonmapvalue map<int, text>,
		simpleindex text,
		PRIMARY KEY(id, clust1, clust2, clust3))
	WITH CLUSTERING ORDER BY(clust1 ASC, clust2 ASC, clust3 ASC);

13:06:36.002 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS collectionindex_index ON achilles_embedded.entitywithcomplexindices ( collectionindex );

13:06:36.002 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS fullindexoncollection_index ON achilles_embedded.entitywithcomplexindices ( FULL(fullindexoncollection) );

13:06:36.002 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapentry_index ON achilles_embedded.entitywithcomplexindices ( ENTRIES(indexonmapentry) );

13:06:36.003 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapkey_index ON achilles_embedded.entitywithcomplexindices ( KEYS(indexonmapkey) );

13:06:36.003 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS indexonmapvalue_index ON achilles_embedded.entitywithcomplexindices ( indexonmapvalue );

13:06:36.004 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS simpleindex_index ON achilles_embedded.entitywithcomplexindices ( simpleindex );

13:06:36.005 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:06:36.090 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8625424924389553152, 1, 1, '1', '111', ['1', '1', '1'], {'111'}, {'111': '111'}, {111: '111'}, {111 : '111'});

13:06:36.093 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8625424924389553152, 1, 1, '2', '112', ['1', '1', '2'], {'112'}, {'112': '112'}, {112: '112'}, {112 : '112'});

13:06:36.094 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8625424924389553152, 1, 1, '3', '113', ['1', '1', '3'], {'113'}, {'113': '113'}, {113: '113'}, {113 : '113'});

13:06:36.094 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8625424924389553152, 2, 1, '1', '211', ['2', '1', '1'], {'211'}, {'211': '211'}, {211: '211'}, {211 : '211'});

13:06:36.095 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8625424924389553152, 2, 1, '2', '212', ['2', '1', '2'], {'212'}, {'212': '212'}, {212: '212'}, {212 : '212'});

13:06:36.096 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8625424924389553152, 2, 1, '3', '213', ['2', '1', '3'], {'213'}, {'213': '213'}, {213: '213'}, {213 : '213'});

13:06:36.097 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8625424924389553152, 3, 1, '1', '311', ['3', '1', '1'], {'311'}, {'311': '311'}, {311: '311'}, {311 : '311'});

13:06:36.097 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8625424924389553152, 3, 1, '2', '312', ['3', '1', '2'], {'312'}, {'312': '312'}, {312: '312'}, {312 : '312'});

13:06:36.098 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8625424924389553152, 3, 1, '3', '313', ['3', '1', '3'], {'313'}, {'313': '313'}, {313: '313'}, {313 : '313'});

13:06:36.099 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithcomplexindices(id, clust1, clust2, clust3, simpleindex, collectionindex, fullindexoncollection, indexonmapkey,indexonmapvalue, indexonmapentry) VALUES(8625424924389553152, 4, 1, '1', '411', ['4', '1', '1'], {'411'}, {'411': '411'}, {411: '411'}, {411 : '411'});

13:06:36.103 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID b479084c-21fd-4774-b285-73fdfc384a5b : [SELECT * FROM achilles_embedded.entitywithcomplexindices WHERE simpleindex=:simpleindex AND id=:id ALLOW FILTERING;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [313, 8625424924389553152]
	 Encoded bound values : [313, 8625424924389553152]
13:06:36.104 [achilles-default-executor-94] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), clust1(int), clust2(int), clust3(varchar), collectionindex(list<varchar>), fullindexoncollection(set<varchar>), indexonmapentry(map<int, varchar>), indexonmapkey(map<varchar, varchar>), indexonmapvalue(map<int, varchar>), simpleindex(varchar)]]
13:06:36.104 [achilles-default-executor-94] DEBUG ACHILLES_DML_STATEMENT - Query ID b479084c-21fd-4774-b285-73fdfc384a5b results : 
	id: 8625424924389553152, clust1: 3, clust2: 1, clust3: 3, collectionindex: [3, 1, 3], fullindexoncollection: [313], indexonmapentry: {313=313}, indexonmapkey: {313=313}, indexonmapvalue: {313=313}, simpleindex: 313

13:06:36.105 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithcomplexindices
13:06:36.170 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:36.172 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:36.173 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:06:36.254 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:06:36.391 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:06:36.633 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:36.634 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:06:36.882 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:36.948 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udt) VALUES(6669097840782246912,{id: 6669097840782246912, "VALUE": 'value'},{id: 6669097840782246912, "VALUE": 'value'});

13:06:36.953 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 5a092d3e-e8f4-4bf6-bc52-dcc63aafe446 : [SELECT id,clust,udt,udtlist,udtmapkey,udtmapvalue,udtset FROM dynamic_ks.dynamic_table WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [6669097840782246912, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@9b7cd8cc]
	 Encoded bound values : [6669097840782246912, {id:6669097840782246912,"VALUE":'value'}]
13:06:36.955 [achilles-default-executor-95] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), clust(dynamic_ks.no_ks), udt(dynamic_ks.no_ks), udtlist(list<dynamic_ks.no_ks>), udtmapkey(map<dynamic_ks.no_ks, varchar>), udtmapvalue(map<int, dynamic_ks.no_ks>), udtset(set<dynamic_ks.no_ks>)]]
13:06:36.956 [achilles-default-executor-95] DEBUG ACHILLES_DML_STATEMENT - Query ID 5a092d3e-e8f4-4bf6-bc52-dcc63aafe446 results : 
	id: 6669097840782246912, clust: {id:6669097840782246912,"VALUE":'value'}, udt: {id:6669097840782246912,"VALUE":'value'}, udtlist: [], udtmapkey: {}, udtmapvalue: {}, udtset: []

13:06:36.956 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:37.041 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:37.042 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:37.064 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:06:37.069 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:06:37.069 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:06:37.075 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:37.076 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:06:37.077 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:37.142 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udtmapvalue) VALUES(8850952546649837568,{id: 8850952546649837568, "VALUE": 'value'},{1: {id: 8850952546649837568, "VALUE": 'value1'}, 2: {id: 8850952546649837568, "VALUE": 'value2'}});

13:06:37.151 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 7b1af7ce-b792-4d56-97bc-afc561becfde : [UPDATE dynamic_ks.dynamic_table SET udtmapvalue[:udtMapValue_key]=:udtMapValue_value WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [1, null, 8850952546649837568, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@f4f76d00]
	 Encoded bound values : [1, null, 8850952546649837568, {id:8850952546649837568,"VALUE":'value'}]
13:06:37.159 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:37.225 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:37.226 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:37.227 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:06:37.228 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:06:37.228 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:06:37.233 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:37.234 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:06:37.236 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:37.319 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udtset) VALUES(1087050411705356288,{id: 1087050411705356288, "VALUE": 'value'},{{id: 1087050411705356288, "VALUE": 'value1'}, {id: 1087050411705356288, "VALUE": 'value2'}});

13:06:37.324 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 1ad40867-5175-4a6d-9bad-6c3f2c3c33b4 : [UPDATE dynamic_ks.dynamic_table SET udtset=udtset-:udtset WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [[info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@7ff4c8ea], 1087050411705356288, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@b7bbbd7b]
	 Encoded bound values : [[{id:1087050411705356288,"VALUE":'value1'}], 1087050411705356288, {id:1087050411705356288,"VALUE":'value'}]
13:06:37.334 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:37.398 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:37.399 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:37.400 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:06:37.400 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:06:37.401 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:06:37.406 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:37.407 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:06:37.408 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:37.470 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udtset) VALUES(4259656494120850432,{id: 4259656494120850432, "VALUE": 'value'},{{id: 4259656494120850432, "VALUE": 'value1'}, {id: 4259656494120850432, "VALUE": 'value2'}});

13:06:37.474 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID a3f09a4b-4cfd-44ac-8ef5-9f59d800984a : [UPDATE dynamic_ks.dynamic_table SET udtset=udtset+:udtset WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [[info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@3e8e4730], 4259656494120850432, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@542df28f]
	 Encoded bound values : [[{id:4259656494120850432,"VALUE":'new_value'}], 4259656494120850432, {id:4259656494120850432,"VALUE":'value'}]
13:06:37.477 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:37.555 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:37.557 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:37.557 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:06:37.558 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:06:37.558 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:06:37.562 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:37.564 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:06:37.566 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:37.635 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udtList) VALUES(2947804393671604224,{id: 2947804393671604224, "VALUE": 'value'},[{id: 2947804393671604224, "VALUE": 'value1'}, {id: 2947804393671604224, "VALUE": 'value2'}]);

13:06:37.639 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID e3bc9db4-76a0-49b9-843e-6f6a4c861c3f : [UPDATE dynamic_ks.dynamic_table SET udtlist=:udtlist WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [[info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@99656c99], 2947804393671604224, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@af0517f8]
	 Encoded bound values : [[{id:2947804393671604224,"VALUE":'new_value'}], 2947804393671604224, {id:2947804393671604224,"VALUE":'value'}]
13:06:37.642 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:37.703 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:37.705 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:37.706 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:06:37.706 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:06:37.707 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:06:37.713 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:37.714 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:06:37.715 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:37.798 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udtmapkey) VALUES(4772895592091681792,{id: 4772895592091681792, "VALUE": 'value'},{{id: 4772895592091681792, "VALUE": 'value1'}: '1', {id: 4772895592091681792, "VALUE": 'value2'}: '2'});

13:06:37.802 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 48e52eb2-8d1f-483a-b43e-e33db40712fe : [UPDATE dynamic_ks.dynamic_table SET udtmapkey[:udtMapKey_key]=:udtMapKey_value WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@13c1c961, null, 4772895592091681792, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@4b88bdf2]
	 Encoded bound values : [{id:4772895592091681792,"VALUE":'value1'}, null, 4772895592091681792, {id:4772895592091681792,"VALUE":'value'}]
13:06:37.804 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:37.875 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:37.877 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:37.880 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:06:37.881 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:06:37.881 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:06:37.885 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:37.887 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:06:37.888 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:37.950 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udt) VALUES(7112580714912215040,{id: 7112580714912215040, "VALUE": 'value'},{id: 7112580714912215040, "VALUE": 'value'});

13:06:37.957 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 8a4ef95c-22da-4907-abc9-2252fa46d437 : [SELECT * FROM dynamic_ks.dynamic_table WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [7112580714912215040, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@43575dd9]
	 Encoded bound values : [7112580714912215040, {id:7112580714912215040,"VALUE":'value'}]
13:06:37.959 [achilles-default-executor-101] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), clust(dynamic_ks.no_ks), udt(dynamic_ks.no_ks), udtlist(list<dynamic_ks.no_ks>), udtmapkey(map<dynamic_ks.no_ks, varchar>), udtmapvalue(map<int, dynamic_ks.no_ks>), udtset(set<dynamic_ks.no_ks>)]]
13:06:37.959 [achilles-default-executor-101] DEBUG ACHILLES_DML_STATEMENT - Query ID 8a4ef95c-22da-4907-abc9-2252fa46d437 results : 
	id: 7112580714912215040, clust: {id:7112580714912215040,"VALUE":'value'}, udt: {id:7112580714912215040,"VALUE":'value'}, udtlist: [], udtmapkey: {}, udtmapvalue: {}, udtset: []

13:06:37.960 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:38.044 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:38.045 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:38.046 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:06:38.046 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:06:38.048 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:06:38.055 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:38.056 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:06:38.058 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:38.123 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udt) VALUES(5028047881623150592,{id: 5028047881623150592, "VALUE": 'value'},{id: 5028047881623150592, "VALUE": 'value'});

13:06:38.128 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 651b1ada-915c-4713-8454-664f0fd5b335 : [UPDATE dynamic_ks.dynamic_table SET udt=:udt WHERE id=:id AND clust=:clust IF udt=:udt;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@96552feb, 5028047881623150592, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@abf4db4a, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@abf4db4a]
	 Encoded bound values : [{id:5028047881623150592,"VALUE":'new_value'}, 5028047881623150592, {id:5028047881623150592,"VALUE":'value'}, {id:5028047881623150592,"VALUE":'value'}]
13:06:38.134 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:38.198 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:38.199 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:38.200 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:06:38.201 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:06:38.201 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:06:38.206 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:38.207 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:06:38.208 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:38.292 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udtmapkey) VALUES(7580542855908595712,{id: 7580542855908595712, "VALUE": 'value'},{{id: 7580542855908595712, "VALUE": 'value1'}: '1', {id: 7580542855908595712, "VALUE": 'value2'}: '2'});

13:06:38.295 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID d8677a37-f560-43e7-b23d-5107bd68a72c : [UPDATE dynamic_ks.dynamic_table SET udtmapkey=:udtmapkey WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [{info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@2e8bf443=new_value}, 7580542855908595712, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@442b9fa2]
	 Encoded bound values : [{{id:7580542855908595712,"VALUE":'new_value'}=new_value}, 7580542855908595712, {id:7580542855908595712,"VALUE":'value'}]
13:06:38.298 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:38.362 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:38.363 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:38.364 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:06:38.365 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:06:38.365 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:06:38.369 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:38.370 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:06:38.372 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:38.433 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udt) VALUES(3748471011443338240,{id: 3748471011443338240, "VALUE": 'value'},{id: 3748471011443338240, "VALUE": 'value'});

13:06:38.436 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 7f1a4e9f-7101-444a-95f8-10e178f3ef42 : [DELETE FROM dynamic_ks.dynamic_table WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [3748471011443338240, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@7de136c]
	 Encoded bound values : [3748471011443338240, {id:3748471011443338240,"VALUE":'value'}]
13:06:38.438 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:38.509 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:38.510 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:38.511 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:06:38.511 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:06:38.512 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:06:38.517 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:38.518 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:06:38.519 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:38.590 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udt) VALUES(5216023520972856320,{id: 5216023520972856320, "VALUE": 'value'},{id: 5216023520972856320, "VALUE": 'value'});

13:06:38.593 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID c69c125f-230d-4d14-a2dc-2d6b2e04d298 : [DELETE FROM dynamic_ks.dynamic_table WHERE id=:id;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [5216023520972856320]
	 Encoded bound values : [5216023520972856320]
13:06:38.595 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:38.656 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:38.657 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:38.658 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:06:38.659 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:06:38.659 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:06:38.664 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:38.665 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:06:38.667 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:38.747 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udtmapkey) VALUES(8561707865896205312,{id: 8561707865896205312, "VALUE": 'value'},{{id: 8561707865896205312, "VALUE": 'value1'}: '1', {id: 8561707865896205312, "VALUE": 'value2'}: '2'});

13:06:38.749 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 70d136fd-879c-46b4-8407-09b50d793eab : [UPDATE dynamic_ks.dynamic_table SET udtmapkey[:udtMapKey_key]=:udtMapKey_value WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@a0637002, new_value, 8561707865896205312, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@b6031b61]
	 Encoded bound values : [{id:8561707865896205312,"VALUE":'new_value'}, new_value, 8561707865896205312, {id:8561707865896205312,"VALUE":'value'}]
13:06:38.754 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:38.826 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:38.827 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:38.828 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:06:38.828 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:06:38.829 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:06:38.834 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:38.835 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:06:38.838 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:38.900 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udt) VALUES(8667082249449482240,{id: 8667082249449482240, "VALUE": 'value'},{id: 8667082249449482240, "VALUE": 'value'});

13:06:38.906 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 6130b90f-06e3-4073-935b-7bc32d38ba00 : [DELETE udt FROM dynamic_ks.dynamic_table WHERE id=:id AND clust=:clust IF udt<:udt;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [8667082249449482240, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@f8ecc010, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@f8ecc011]
	 Encoded bound values : [8667082249449482240, {id:8667082249449482240,"VALUE":'value'}, {id:8667082249449482240,"VALUE":'valuf'}]
13:06:38.911 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:39.002 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:39.003 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:39.004 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:06:39.005 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:06:39.005 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:06:39.010 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:39.011 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:06:39.015 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:39.086 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID c5023f1d-6713-41ef-9cf0-6dc29c3b5bf1 : [INSERT INTO dynamic_ks.dynamic_table (id,clust,udt,udtlist,udtmapkey,udtmapvalue,udtset) VALUES (:id,:clust,:udt,:udtlist,:udtmapkey,:udtmapvalue,:udtset) USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [6666116896996193280, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@757bd0c3, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@757bd0c3, null, null, null, null, 0]
	 Encoded bound values : [6666116896996193280, {id:6666116896996193280,"VALUE":'val'}, {id:6666116896996193280,"VALUE":'val'}, null, null, null, null, 0]
13:06:39.093 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:39.154 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:39.155 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:39.157 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:06:39.157 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:06:39.158 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:06:39.163 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:39.166 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:06:39.168 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:39.241 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udt) VALUES(3847949707946303488,{id: 3847949707946303488, "VALUE": 'value'},{id: 3847949707946303488, "VALUE": 'value'});

13:06:39.244 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID ea8f2054-b195-48e2-b12d-5ddee699751a : [DELETE udt FROM dynamic_ks.dynamic_table WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [3847949707946303488, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@564a4733]
	 Encoded bound values : [3847949707946303488, {id:3847949707946303488,"VALUE":'value'}]
13:06:39.246 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:39.312 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:39.313 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:39.314 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:06:39.314 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:06:39.315 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:06:39.319 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:39.320 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:06:39.322 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:39.384 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udt) VALUES(8803101427718993920,{id: 8803101427718993920, "VALUE": 'value'},{id: 8803101427718993920, "VALUE": 'value'});

13:06:39.385 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 411b450f-08b4-4fce-94b7-2d2988cd2df7 : [DELETE FROM dynamic_ks.dynamic_table WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [8803101427718993920, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@74b1fa77]
	 Encoded bound values : [8803101427718993920, {id:8803101427718993920,"VALUE":'value'}]
13:06:39.388 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:39.459 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:39.460 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:39.461 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:06:39.462 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:06:39.462 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:06:39.466 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:39.467 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:06:39.469 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:39.539 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udtmapvalue) VALUES(4166619939687766016,{id: 4166619939687766016, "VALUE": 'value'},{1: {id: 4166619939687766016, "VALUE": 'value1'}, 2: {id: 4166619939687766016, "VALUE": 'value2'}});

13:06:39.541 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 9ad68bad-9074-40af-84b7-cb937ba89125 : [UPDATE dynamic_ks.dynamic_table SET udtmapvalue[:udtMapValue_key]=:udtMapValue_value WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [3, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@fcb2eb51, 4166619939687766016, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@125296b0]
	 Encoded bound values : [3, {id:4166619939687766016,"VALUE":'new_value'}, 4166619939687766016, {id:4166619939687766016,"VALUE":'value'}]
13:06:39.544 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:39.605 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:39.607 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:39.608 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:06:39.608 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:06:39.609 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:06:39.613 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:39.614 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:06:39.616 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:39.702 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udt) VALUES(1792049909980447744,{id: 1792049909980447744, "VALUE": 'value'},{id: 1792049909980447744, "VALUE": 'value'});

13:06:39.705 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID c96c631c-932a-4f3c-918e-07459b45f122 : [UPDATE dynamic_ks.dynamic_table SET udt=:udt WHERE id=:id AND clust=:clust IF udt<:udt;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@f7407ead, 1792049909980447744, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@ce02a0c, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@ce02a0d]
	 Encoded bound values : [{id:1792049909980447744,"VALUE":'new_value'}, 1792049909980447744, {id:1792049909980447744,"VALUE":'value'}, {id:1792049909980447744,"VALUE":'valuf'}]
13:06:39.710 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:39.782 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:39.783 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:39.784 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:06:39.785 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:06:39.785 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:06:39.790 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:39.792 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:06:39.793 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:39.854 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udt) VALUES(3582887207953982464,{id: 3582887207953982464, "VALUE": 'value'},{id: 3582887207953982464, "VALUE": 'value'});

13:06:39.856 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 254d2b8c-f637-4abb-b763-fffed11a9ba9 : [DELETE udt FROM dynamic_ks.dynamic_table WHERE id=:id AND clust=:clust IF udt=:udt;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [3582887207953982464, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@cc449604, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@cc449604]
	 Encoded bound values : [3582887207953982464, {id:3582887207953982464,"VALUE":'value'}, {id:3582887207953982464,"VALUE":'value'}]
13:06:39.861 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:39.948 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:39.949 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:39.950 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:06:39.951 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:06:39.951 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:06:39.956 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:39.957 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:06:39.958 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:40.029 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udtmapvalue) VALUES(1915036409316302848,{id: 1915036409316302848, "VALUE": 'value'},{1: {id: 1915036409316302848, "VALUE": 'value1'}, 2: {id: 1915036409316302848, "VALUE": 'value2'}});

13:06:40.033 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 6e904151-2bd0-437f-a9d4-80c209abd332 : [UPDATE dynamic_ks.dynamic_table SET udtmapvalue=:udtmapvalue WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [{3=info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@f4be53c}, 1915036409316302848, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@24eb909b]
	 Encoded bound values : [{3={id:1915036409316302848,"VALUE":'new_value'}}, 1915036409316302848, {id:1915036409316302848,"VALUE":'value'}]
13:06:40.035 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:40.097 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:40.099 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:40.100 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:06:40.100 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:06:40.101 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:06:40.105 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:40.107 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:06:40.108 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:40.184 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udtList) VALUES(6781101543148558336,{id: 6781101543148558336, "VALUE": 'value'},[{id: 6781101543148558336, "VALUE": 'value1'}, {id: 6781101543148558336, "VALUE": 'value2'}]);

13:06:40.187 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID c4100c1b-223b-490e-9f5d-95733301078d : [UPDATE dynamic_ks.dynamic_table SET udtlist=udtlist+:udtlist WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [[info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@2e358f67], 6781101543148558336, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@43d53ac6]
	 Encoded bound values : [[{id:6781101543148558336,"VALUE":'new_value'}], 6781101543148558336, {id:6781101543148558336,"VALUE":'value'}]
13:06:40.191 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:40.263 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:40.264 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:40.265 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:06:40.266 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:06:40.266 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:06:40.271 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:40.272 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:06:40.273 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:40.336 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udt) VALUES(7876387316999553024,{id: 7876387316999553024, "VALUE": 'value'},{id: 7876387316999553024, "VALUE": 'value'});

13:06:40.339 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID c88dbe90-f7ca-489d-bd7e-5c4587bde12a : [DELETE udt FROM dynamic_ks.dynamic_table WHERE id=:id AND clust=:clust IF udt>=:udt;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [7876387316999553024, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@914619aa, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@914619a9]
	 Encoded bound values : [7876387316999553024, {id:7876387316999553024,"VALUE":'value'}, {id:7876387316999553024,"VALUE":'valud'}]
13:06:40.345 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:40.429 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:40.430 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:40.431 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:06:40.432 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:06:40.432 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:06:40.437 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:40.438 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:06:40.441 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:40.510 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udt) VALUES(8784611584264680448,{id: 8784611584264680448, "VALUE": 'value'},{id: 8784611584264680448, "VALUE": 'value'});

13:06:40.513 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 460c1ea1-0a66-48b2-b03a-c322f84f75ea : [UPDATE dynamic_ks.dynamic_table SET udt=:udt WHERE id=:id AND clust=:clust IF udt>=:udt;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@e2339e42, 8784611584264680448, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@f7d349a1, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@f7d349a0]
	 Encoded bound values : [{id:8784611584264680448,"VALUE":'new_value'}, 8784611584264680448, {id:8784611584264680448,"VALUE":'value'}, {id:8784611584264680448,"VALUE":'valud'}]
13:06:40.523 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:40.586 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:40.587 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:40.588 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:06:40.588 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:06:40.589 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:06:40.597 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:40.598 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:06:40.600 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:40.681 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udt) VALUES(7075675155418615808,{id: 7075675155418615808, "VALUE": 'value'},{id: 7075675155418615808, "VALUE": 'value'});

13:06:40.685 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 3de5c955-1178-4368-ba45-69a220de720e : [UPDATE dynamic_ks.dynamic_table SET udt=:udt WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@753cc2c3, 7075675155418615808, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@8adc6e22]
	 Encoded bound values : [{id:7075675155418615808,"VALUE":'new_value'}, 7075675155418615808, {id:7075675155418615808,"VALUE":'value'}]
13:06:40.687 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:40.760 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:40.762 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:40.763 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:06:40.763 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:06:40.764 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:06:40.768 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:40.769 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:06:40.770 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:40.832 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udtList) VALUES(4252632683950581760,{id: 4252632683950581760, "VALUE": 'value'},[{id: 4252632683950581760, "VALUE": 'value1'}, {id: 4252632683950581760, "VALUE": 'value2'}]);

13:06:40.856 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 475c7e8f-6f3b-43c3-ab01-e374ab019529 : [UPDATE dynamic_ks.dynamic_table SET udtlist=:udtlist+udtlist WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [[info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@3762fb8e], 4252632683950581760, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@4d02a6ed]
	 Encoded bound values : [[{id:4252632683950581760,"VALUE":'new_value'}], 4252632683950581760, {id:4252632683950581760,"VALUE":'value'}]
13:06:40.863 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:06:40.937 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:40.942 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_complex_counters(
		id bigint,
		uuid uuid,
		static_count counter static,
		codec_count counter,
		count counter,
		PRIMARY KEY(id, uuid))
	WITH CLUSTERING ORDER BY(uuid ASC);

13:06:41.179 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_complex_counters
13:06:41.412 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID ddae7aaa-368f-4137-9f5f-cd267fe19612 : [UPDATE achilles_embedded.entity_complex_counters SET codec_count=codec_count+:codec_count WHERE id=:id AND uuid=:uuid;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [5631663709160297472, 609922807015237632, d205fe90-29f4-11ec-8990-6ff2462cade8]
	 Encoded bound values : [5631663709160297472, 609922807015237632, d205fe90-29f4-11ec-8990-6ff2462cade8]
13:06:41.430 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_complex_counters
13:06:41.496 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:41.501 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_complex_counters(
		id bigint,
		uuid uuid,
		static_count counter static,
		codec_count counter,
		count counter,
		PRIMARY KEY(id, uuid))
	WITH CLUSTERING ORDER BY(uuid ASC);

13:06:41.502 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_complex_counters
13:06:41.605 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : UPDATE achilles_embedded.entity_complex_counters SET count = count + 3470637001341493248, static_count = static_count + 4897610442864709632, codec_count = codec_count + 5251559660243617792 WHERE id = 5454055640644153344 AND uuid = d224f840-29f4-11ec-8990-6ff2462cade8;

13:06:41.608 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID cf42db5e-8c0f-49a8-84ac-696cd2107822 : [SELECT id,static_count,uuid,codec_count,count FROM achilles_embedded.entity_complex_counters WHERE id=:id AND uuid=:uuid;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [5454055640644153344, d224f840-29f4-11ec-8990-6ff2462cade8]
	 Encoded bound values : [5454055640644153344, d224f840-29f4-11ec-8990-6ff2462cade8]
13:06:41.613 [achilles-default-executor-121] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), static_count(counter), uuid(uuid), codec_count(counter), count(counter)]]
13:06:41.613 [achilles-default-executor-121] DEBUG ACHILLES_DML_STATEMENT - Query ID cf42db5e-8c0f-49a8-84ac-696cd2107822 results : 
	id: 5454055640644153344, static_count: 4897610442864709632, uuid: d224f840-29f4-11ec-8990-6ff2462cade8, codec_count: 5251559660243617792, count: 3470637001341493248

13:06:41.614 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_complex_counters
13:06:41.686 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:41.687 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:41.691 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:41.692 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:41.753 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(3671800486378529792, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:06:41.756 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 166f93c9-e2ef-461a-a7c4-e5da7e16093c : [UPDATE achilles_embedded.simple USING TTL :ttl SET value=:value,consistencylist=:consistencylist WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [1, new value, [ALL], 3671800486378529792, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [1, new value, [ALL], 3671800486378529792, Wed Sep 30 19:00:00 CDT 2015]
13:06:41.764 [achilles-default-executor-122] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 166f93c9-e2ef-461a-a7c4-e5da7e16093c at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 351                      | Native-Transport-Requests-2
Adding to simple memtable                                                        | /127.0.0.1       | 635                      | MutationStage-1     
****************************


13:06:43.767 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:06:43.829 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:43.836 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.my_type(
		name text,
		list list<text>,
		map map<text, text>);

13:06:43.986 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_complex_types(
		id bigint,
		ascii ascii,
		codec_on_class text,
		complex_nesting_map map<text, frozen<map<int, frozen<tuple<text, int, int>>>>>,
		consistencylevel text,
		doublearray frozen<list<double>>,
		encoding int,
		floatarray frozen<list<float>>,
		intarray frozen<list<int>>,
		integer text,
		intwrapper int,
		jdkinstant timestamp,
		jdklocaldate date,
		jdklocaltime time,
		jdkzoneddatetime frozen<tuple<timestamp, varchar>>,
		json_map text,
		list_nesting list<frozen<map<int, text>>>,
		list_udt list<frozen<achilles_embedded.my_type>>,
		listoflongarray list<frozen<list<bigint>>>,
		listofoptional list<text>,
		longarray frozen<list<bigint>>,
		map_udt map<int, frozen<achilles_embedded.my_type>>,
		map_with_nested_json map<int, text>,
		object_bool boolean,
		object_byte tinyint,
		object_byte_array blob,
		ok_set set<int>,
		optionalencodingasordinal int,
		optionalprotocolversion text,
		optionalstring text,
		primitive_bool boolean,
		primitive_byte tinyint,
		primitive_byte_array blob,
		protocolversion text,
		protocolversionasordinal int,
		simple_udt frozen<achilles_embedded.my_type>,
		time text,
		timeuuid timeuuid,
		tuple1 frozen<tuple<text>>,
		tuple2 frozen<tuple<text, text>>,
		tuple_nesting frozen<tuple<int, list<text>>>,
		value text,
		PRIMARY KEY(id));

13:06:44.265 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_complex_types
13:06:44.471 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 795dcb2d-04cc-4275-b88b-3ce81021ed95 : [INSERT INTO achilles_embedded.entity_complex_types (id,ascii,codec_on_class,complex_nesting_map,consistencylevel,doublearray,encoding,floatarray,intarray,integer,intwrapper,jdkinstant,jdklocaldate,jdklocaltime,jdkzoneddatetime,json_map,list_nesting,list_udt,listoflongarray,listofoptional,longarray,map_udt,map_with_nested_json,object_bool,object_byte,object_byte_array,ok_set,optionalencodingasordinal,optionalprotocolversion,optionalstring,primitive_bool,primitive_byte,primitive_byte_array,protocolversion,protocolversionasordinal,simple_udt,time,timeuuid,tuple1,tuple2,tuple_nesting,value) VALUES (:id,:ascii,:codec_on_class,:complex_nesting_map,:consistencylevel,:doublearray,:encoding,:floatarray,:intarray,:integer,:intwrapper,:jdkinstant,:jdklocaldate,:jdklocaltime,:jdkzoneddatetime,:json_map,:list_nesting,:list_udt,:listoflongarray,:listofoptional,:longarray,:map_udt,:map_with_nested_json,:object_bool,:object_byte,:object_byte_array,:ok_set,:optionalencodingasordinal,:optionalprotocolversion,:optionalstring,:primitive_bool,:primitive_byte,:primitive_byte_array,:protocolversion,:protocolversionasordinal,:simple_udt,:time,:timeuuid,:tuple1,:tuple2,:tuple_nesting,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [1013003960552835072, ascii_value, ClassAnnotatedByCodec{}, {info.archinnov.achilles.internals.entities.TestUDT@c762df3d={1=Tuple3{_1=1, _2=2, _3=ALL}}}, EACH_QUORUM, [D@4f8b4bd0, ORDINAL, [F@4e904fd5, [I@b18c4, 123, info.archinnov.achilles.internals.types.IntWrapper@9a, 2021-10-10T18:06:44.331Z, 2021-10-10, 13:06:44.339, 2021-10-10T13:06:44.339-05:00[America/Chicago], {1=[1, 2, 3]}, [{1=one}], [info.archinnov.achilles.internals.entities.TestUDT@c762df3d], [[J@4cbf4f53], [Optional[1], Optional[2]], [J@597f48df, {1=info.archinnov.achilles.internals.entities.TestUDT@c762df3d}, {1=[{1=one}]}, true, 5, [Ljava.lang.Byte;@15dd5ac2, [LOCAL_ONE, LOCAL_QUORUM], Optional[V2], Optional[V3], Optional.empty, true, 3, 0x04, V4, V2, info.archinnov.achilles.internals.entities.TestUDT@c762df3d, Wed Sep 30 19:00:00 CDT 2015, d3c513b0-29f4-11ec-8990-6ff2462cade8, Tuple1{_1=THREE}, Tuple2{_1=TWO, _2=2}, Tuple2{_1=1, _2=[1]}, val, 0]
	 Encoded bound values : [1013003960552835072, ascii_value, ClassAnnotatedByCodec{}, {{"list":["list"],"map":{"1":"1"},"name":"name"}={1=('1',2,5)}}, EACH_QUORUM, [D@4f8b4bd0, 1, [F@4e904fd5, [I@b18c4, 123, 123, 2021-10-10T18:06:44.331Z, 2021-10-10, 13:06:44.339, 2021-10-10T13:06:44.339-05:00[America/Chicago], {"1":[1,2,3]}, [{1=one}], [{name:'name',list:['list'],map:{'1':'1'}}], [[J@4cbf4f53], [1, 2], [J@597f48df, {1={name:'name',list:['list'],map:{'1':'1'}}}, {1=[{"1":"one"}]}, true, 5, 0x07, [6, 10], 1, V3, null, true, 3, 0x04, V4, 1, {name:'name',list:['list'],map:{'1':'1'}}, 1443657600000, d3c513b0-29f4-11ec-8990-6ff2462cade8, ('"THREE"'), ('"TWO"','2'), (1,['1']), val, 0]
13:06:44.513 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_complex_types
13:06:44.577 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:44.582 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.my_type(
		name text,
		list list<text>,
		map map<text, text>);

13:06:44.583 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_complex_types(
		id bigint,
		ascii ascii,
		codec_on_class text,
		complex_nesting_map map<text, frozen<map<int, frozen<tuple<text, int, int>>>>>,
		consistencylevel text,
		doublearray frozen<list<double>>,
		encoding int,
		floatarray frozen<list<float>>,
		intarray frozen<list<int>>,
		integer text,
		intwrapper int,
		jdkinstant timestamp,
		jdklocaldate date,
		jdklocaltime time,
		jdkzoneddatetime frozen<tuple<timestamp, varchar>>,
		json_map text,
		list_nesting list<frozen<map<int, text>>>,
		list_udt list<frozen<achilles_embedded.my_type>>,
		listoflongarray list<frozen<list<bigint>>>,
		listofoptional list<text>,
		longarray frozen<list<bigint>>,
		map_udt map<int, frozen<achilles_embedded.my_type>>,
		map_with_nested_json map<int, text>,
		object_bool boolean,
		object_byte tinyint,
		object_byte_array blob,
		ok_set set<int>,
		optionalencodingasordinal int,
		optionalprotocolversion text,
		optionalstring text,
		primitive_bool boolean,
		primitive_byte tinyint,
		primitive_byte_array blob,
		protocolversion text,
		protocolversionasordinal int,
		simple_udt frozen<achilles_embedded.my_type>,
		time text,
		timeuuid timeuuid,
		tuple1 frozen<tuple<text>>,
		tuple2 frozen<tuple<text, text>>,
		tuple_nesting frozen<tuple<int, list<text>>>,
		value text,
		PRIMARY KEY(id));

13:06:44.585 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_complex_types
13:06:44.670 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_complex_types(id, codec_on_class, complex_nesting_map, consistencylevel, integer, json_map, list_nesting, list_udt, map_udt, map_with_nested_json, object_bool, object_byte, object_byte_array, ok_set, primitive_bool, primitive_byte, primitive_byte_array, simple_udt, time, timeuuid, tuple1, tuple2, tuple_nesting, value, intwrapper, protocolversion, encoding, doublearray, floatarray, intarray, longarray, jdkinstant, jdklocaldate, jdklocaltime, jdkzoneddatetime, protocolversionasordinal, optionalstring, optionalprotocolversion, optionalencodingasordinal, listofoptional, ascii) VALUES(1244926164026970112, 'ClassAnnotatedByCodec', {'{"list":["list"],"map":{"1":"1"},"name":"name"}': {1:('1', 2, 5)}}, 'EACH_QUORUM', '123', '{"1":[1,2,3]}', [{1: 'one'}], [{name: 'name', list: ['list'], map: {'1':'1'}}], {1:{name: 'name', list: ['list'], map: {'1':'1'}}}, {1: '[{"1":"one"}]'}, true, 5, bigintAsBlob(7), {6, 10}, true, 3, bigintAsBlob(4), {name: 'name', list: ['list'], map: {'1':'1'}}, '1234567', 50554d6e-29bb-11e5-b345-feff819cdc9f, ('"THREE"'), ('"TWO"', '2'), (1, ['1']), 'val', 456, 'V2', 0, [1.0, 2.0], [3.0, 4.0], [5, 6], [7, 8], '2016-01-01 01:01:01+0000', '2016-01-01', '01:01:00', ('2016-01-01 01:01:01', 'GMT'),2, null, 'V3', 1, ['1','2'], 'ascii_value');

13:06:44.751 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 9b1baede-7706-4214-9780-a75c59c71678 : [SELECT id,ascii,codec_on_class,complex_nesting_map,consistencylevel,doublearray,encoding,floatarray,intarray,integer,intwrapper,jdkinstant,jdklocaldate,jdklocaltime,jdkzoneddatetime,json_map,list_nesting,list_udt,listoflongarray,listofoptional,longarray,map_udt,map_with_nested_json,object_bool,object_byte,object_byte_array,ok_set,optionalencodingasordinal,optionalprotocolversion,optionalstring,primitive_bool,primitive_byte,primitive_byte_array,protocolversion,protocolversionasordinal,simple_udt,time,timeuuid,tuple1,tuple2,tuple_nesting,value,writetime(value) AS write_time,writetime(value) AS write_time_2 FROM achilles_embedded.entity_complex_types WHERE id=:id;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [1244926164026970112]
	 Encoded bound values : [1244926164026970112]
13:06:44.753 [achilles-default-executor-124] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), ascii(ascii), codec_on_class(varchar), complex_nesting_map(map<varchar, map<int, frozen<tuple<varchar, int, int>>>>), consistencylevel(varchar), doublearray(list<double>), encoding(int), floatarray(list<float>), intarray(list<int>), integer(varchar), intwrapper(int), jdkinstant(timestamp), jdklocaldate(date), jdklocaltime(time), jdkzoneddatetime(frozen<tuple<timestamp, varchar>>), json_map(varchar), list_nesting(list<map<int, varchar>>), list_udt(list<achilles_embedded.my_type>), listoflongarray(list<list<bigint>>), listofoptional(list<varchar>), longarray(list<bigint>), map_udt(map<int, achilles_embedded.my_type>), map_with_nested_json(map<int, varchar>), object_bool(boolean), object_byte(tinyint), object_byte_array(blob), ok_set(set<int>), optionalencodingasordinal(int), optionalprotocolversion(varchar), optionalstring(varchar), primitive_bool(boolean), primitive_byte(tinyint), primitive_byte_array(blob), protocolversion(varchar), protocolversionasordinal(int), simple_udt(achilles_embedded.my_type), time(varchar), timeuuid(timeuuid), tuple1(frozen<tuple<varchar>>), tuple2(frozen<tuple<varchar, varchar>>), tuple_nesting(frozen<tuple<int, list<varchar>>>), value(varchar), write_time(bigint), write_time_2(bigint)]]
13:06:44.757 [achilles-default-executor-124] DEBUG ACHILLES_DML_STATEMENT - Query ID 9b1baede-7706-4214-9780-a75c59c71678 results : 
	id: 1244926164026970112, ascii: ascii_value, codec_on_class: ClassAnnotatedByCodec, complex_nesting_map: {{"list":["list"],"map":{"1":"1"},"name":"name"}={1=('1',2,5)}}, consistencylevel: EACH_QUORUM, doublearray: [D@7bcacded, encoding: 0, floatarray: [F@750d3ce4, intarray: [I@7132a69d, integer: 123, intwrapper: 456, jdkinstant: Thu Dec 31 19:01:01 CST 2015, jdklocaldate: 2016-01-01, jdklocaltime: 3660000000000, jdkzoneddatetime: 2016-01-01T07:01:01Z[GMT], json_map: {"1":[1,2,3]}, list_nesting: [{1=one}], list_udt: [{name:'name',list:['list'],map:{'1':'1'}}], listoflongarray: [], listofoptional: [1, 2], longarray: [J@343036df, map_udt: {1={name:'name',list:['list'],map:{'1':'1'}}}, map_with_nested_json: {1=[{"1":"one"}]}, object_bool: true, object_byte: 5, object_byte_array: java.nio.HeapByteBuffer[pos=0 lim=8 cap=8], ok_set: [6, 10], optionalencodingasordinal: 1, optionalprotocolversion: V3, optionalstring: null, primitive_bool: true, primitive_byte: 3, primitive_byte_array: java.nio.HeapByteBuffer[pos=0 lim=8 cap=8], protocolversion: V2, protocolversionasordinal: 2, simple_udt: {name:'name',list:['list'],map:{'1':'1'}}, time: 1234567, timeuuid: 50554d6e-29bb-11e5-b345-feff819cdc9f, tuple1: ('"THREE"'), tuple2: ('"TWO"','2'), tuple_nesting: (1,['1']), value: val, write_time: 1633889204670280, write_time_2: 1633889204670280

13:06:44.829 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_complex_types
13:06:44.890 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:44.899 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.my_type(
		name text,
		list list<text>,
		map map<text, text>);

13:06:44.901 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_complex_types(
		id bigint,
		ascii ascii,
		codec_on_class text,
		complex_nesting_map map<text, frozen<map<int, frozen<tuple<text, int, int>>>>>,
		consistencylevel text,
		doublearray frozen<list<double>>,
		encoding int,
		floatarray frozen<list<float>>,
		intarray frozen<list<int>>,
		integer text,
		intwrapper int,
		jdkinstant timestamp,
		jdklocaldate date,
		jdklocaltime time,
		jdkzoneddatetime frozen<tuple<timestamp, varchar>>,
		json_map text,
		list_nesting list<frozen<map<int, text>>>,
		list_udt list<frozen<achilles_embedded.my_type>>,
		listoflongarray list<frozen<list<bigint>>>,
		listofoptional list<text>,
		longarray frozen<list<bigint>>,
		map_udt map<int, frozen<achilles_embedded.my_type>>,
		map_with_nested_json map<int, text>,
		object_bool boolean,
		object_byte tinyint,
		object_byte_array blob,
		ok_set set<int>,
		optionalencodingasordinal int,
		optionalprotocolversion text,
		optionalstring text,
		primitive_bool boolean,
		primitive_byte tinyint,
		primitive_byte_array blob,
		protocolversion text,
		protocolversionasordinal int,
		simple_udt frozen<achilles_embedded.my_type>,
		time text,
		timeuuid timeuuid,
		tuple1 frozen<tuple<text>>,
		tuple2 frozen<tuple<text, text>>,
		tuple_nesting frozen<tuple<int, list<text>>>,
		value text,
		PRIMARY KEY(id));

13:06:44.903 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_complex_types
13:06:44.966 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_complex_types(id, codec_on_class, complex_nesting_map, consistencylevel, integer, json_map, list_nesting, list_udt, map_udt, map_with_nested_json, object_bool, object_byte, object_byte_array, ok_set, primitive_bool, primitive_byte, primitive_byte_array, simple_udt, time, timeuuid, tuple1, tuple2, tuple_nesting, value, intwrapper, protocolversion, encoding, doublearray, floatarray, intarray, longarray, jdkinstant, jdklocaldate, jdklocaltime, jdkzoneddatetime, protocolversionasordinal, optionalstring, optionalprotocolversion, optionalencodingasordinal, listofoptional, ascii) VALUES(1978339127488541696, 'ClassAnnotatedByCodec', {'{"list":["list"],"map":{"1":"1"},"name":"name"}': {1:('1', 2, 5)}}, 'EACH_QUORUM', '123', '{"1":[1,2,3]}', [{1: 'one'}], [{name: 'name', list: ['list'], map: {'1':'1'}}], {1:{name: 'name', list: ['list'], map: {'1':'1'}}}, {1: '[{"1":"one"}]'}, true, 5, bigintAsBlob(7), {6, 10}, true, 3, bigintAsBlob(4), {name: 'name', list: ['list'], map: {'1':'1'}}, '1234567', 50554d6e-29bb-11e5-b345-feff819cdc9f, ('"THREE"'), ('"TWO"', '2'), (1, ['1']), 'val', 456, 'V2', 0, [1.0, 2.0], [3.0, 4.0], [5, 6], [7, 8], '2016-01-01 01:01:01+0000', '2016-01-01', '01:01:00', ('2016-01-01 01:01:01', 'GMT'),2, null, 'V3', 1, ['1','2'], 'ascii_value');

13:06:44.974 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID f5d5b9af-b869-44ce-821d-5ebf4d6692c6 : [SELECT writetime(value) AS write_time,writetime(value) AS write_time_2 FROM achilles_embedded.entity_complex_types WHERE id=:id;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [1978339127488541696]
	 Encoded bound values : [1978339127488541696]
13:06:44.977 [achilles-default-executor-125] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[write_time(bigint), write_time_2(bigint)]]
13:06:44.977 [achilles-default-executor-125] DEBUG ACHILLES_DML_STATEMENT - Query ID f5d5b9af-b869-44ce-821d-5ebf4d6692c6 results : 
	write_time: 1633889204966100, write_time_2: 1633889204966100

13:06:44.978 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_complex_types
13:06:45.052 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:45.058 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.index_on_clustering(
		partition bigint,
		clustering int,
		value text,
		PRIMARY KEY(partition, clustering))
	WITH CLUSTERING ORDER BY(clustering ASC);

13:06:45.295 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE  INDEX IF NOT EXISTS clustering_index ON achilles_embedded.index_on_clustering ( clustering );

13:06:45.604 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.index_on_clustering
13:06:45.690 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.index_on_clustering(partition, clustering, value) VALUES(1, 1, 'val11');

13:06:45.691 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.index_on_clustering(partition, clustering, value) VALUES(1, 2, 'val12');

13:06:45.692 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.index_on_clustering(partition, clustering, value) VALUES(1, 3, 'val13');

13:06:45.692 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.index_on_clustering(partition, clustering, value) VALUES(2, 1, 'val21');

13:06:45.693 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.index_on_clustering(partition, clustering, value) VALUES(2, 2, 'val22');

13:06:45.693 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.index_on_clustering(partition, clustering, value) VALUES(3, 1, 'val31');

13:06:45.694 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.index_on_clustering(partition, clustering, value) VALUES(3, 2, 'val32');

13:06:45.698 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID b8348f95-065f-41b7-b40e-a5243b560799 : [SELECT * FROM achilles_embedded.index_on_clustering WHERE clustering=:clustering ALLOW FILTERING;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [1]
	 Encoded bound values : [1]
13:06:45.701 [achilles-default-executor-126] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[partition(bigint), clustering(int), value(varchar)]]
13:06:45.701 [achilles-default-executor-126] DEBUG ACHILLES_DML_STATEMENT - Query ID b8348f95-065f-41b7-b40e-a5243b560799 results : 
	partition: 2, clustering: 1, value: val21
	partition: 3, clustering: 1, value: val31
	partition: 1, clustering: 1, value: val11

13:06:45.702 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.index_on_clustering
13:06:45.771 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:45.777 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithstaticcolumn(
		id bigint,
		uuid uuid,
		another_static_col text static,
		static_col text static,
		value text,
		PRIMARY KEY(id, uuid))
	WITH CLUSTERING ORDER BY(uuid ASC);

13:06:46.070 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithstaticcolumn
13:06:46.142 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID b7eab42f-966f-43c7-8f27-ed41e859f8fc : [INSERT INTO achilles_embedded.entitywithstaticcolumn (id,another_static_col,static_col) VALUES (:id,:another_static_col,:static_col) USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [2193828542130008064, another_static_val1, static_val1, 0]
	 Encoded bound values : [2193828542130008064, another_static_val1, static_val1, 0]
13:06:46.144 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 0684f7b3-2828-46fb-8975-0de2b1597a52 : [INSERT INTO achilles_embedded.entitywithstaticcolumn (id,another_static_col,static_col) VALUES (:id,:another_static_col,:static_col) USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [2193828542130008064, another_static_val2, null, 0]
	 Encoded bound values : [2193828542130008064, another_static_val2, null, 0]
13:06:46.146 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithstaticcolumn
13:06:46.209 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:46.213 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithstaticcolumn(
		id bigint,
		uuid uuid,
		another_static_col text static,
		static_col text static,
		value text,
		PRIMARY KEY(id, uuid))
	WITH CLUSTERING ORDER BY(uuid ASC);

13:06:46.215 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithstaticcolumn
13:06:46.278 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithstaticcolumn(id, uuid, static_col, value) VALUES(2672265415233187840, d4ee0350-29f4-11ec-8990-6ff2462cade8, 'static_val', 'val');

13:06:46.283 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID ddc06ad5-e075-4e87-8fc4-5c28a72db108 : [SELECT value,static_col FROM achilles_embedded.entitywithstaticcolumn WHERE id=:id;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [2672265415233187840]
	 Encoded bound values : [2672265415233187840]
13:06:46.300 [achilles-default-executor-129] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[value(varchar), static_col(varchar)]]
13:06:46.300 [achilles-default-executor-129] DEBUG ACHILLES_DML_STATEMENT - Query ID ddc06ad5-e075-4e87-8fc4-5c28a72db108 results : 
	value: val, static_col: static_val

13:06:46.300 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithstaticcolumn
13:06:46.373 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:46.379 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithstaticcolumn(
		id bigint,
		uuid uuid,
		another_static_col text static,
		static_col text static,
		value text,
		PRIMARY KEY(id, uuid))
	WITH CLUSTERING ORDER BY(uuid ASC);

13:06:46.384 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithstaticcolumn
13:06:46.459 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID f5a13827-b922-4066-8c11-d13ed7466d87 : [INSERT INTO achilles_embedded.entitywithstaticcolumn (id,another_static_col,static_col) VALUES (:id,:another_static_col,:static_col) IF NOT EXISTS USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [8622381088296919040, null, static_val, 0]
	 Encoded bound values : [8622381088296919040, null, static_val, 0]
13:06:46.464 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID a78d8cda-80b8-4e90-885f-86b0d5cf8f50 : [INSERT INTO achilles_embedded.entitywithstaticcolumn (id,another_static_col,static_col) VALUES (:id,:another_static_col,:static_col) IF NOT EXISTS USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [8622381088296919040, null, static_val, 0]
	 Encoded bound values : [8622381088296919040, null, static_val, 0]
13:06:46.471 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithstaticcolumn
13:06:46.534 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:46.538 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithstaticcolumn(
		id bigint,
		uuid uuid,
		another_static_col text static,
		static_col text static,
		value text,
		PRIMARY KEY(id, uuid))
	WITH CLUSTERING ORDER BY(uuid ASC);

13:06:46.539 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithstaticcolumn
13:06:46.610 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithstaticcolumn(id, uuid, static_col, value) VALUES(2922527861860998144, d520ac10-29f4-11ec-8990-6ff2462cade8, 'static_val', 'val');

13:06:46.615 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 889615e2-7ece-44c4-b2ee-8686a5aa0c3e : [UPDATE achilles_embedded.entitywithstaticcolumn SET static_col=:static_col WHERE id=:id IF static_col=:static_col;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [updated_static, 2922527861860998144, static_val]
	 Encoded bound values : [updated_static, 2922527861860998144, static_val]
13:06:46.620 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithstaticcolumn
13:06:46.690 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:46.694 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithstaticcolumn(
		id bigint,
		uuid uuid,
		another_static_col text static,
		static_col text static,
		value text,
		PRIMARY KEY(id, uuid))
	WITH CLUSTERING ORDER BY(uuid ASC);

13:06:46.695 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithstaticcolumn
13:06:46.759 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithstaticcolumn(id, uuid, static_col, value) VALUES(3894056043840335872, d5376860-29f4-11ec-8990-6ff2462cade8, 'static_val', 'val');

13:06:46.765 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 84deefca-feba-4613-8c80-91abe899839c : [DELETE static_col FROM achilles_embedded.entitywithstaticcolumn WHERE id=:id;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [3894056043840335872]
	 Encoded bound values : [3894056043840335872]
13:06:46.768 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithstaticcolumn
13:06:46.846 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:46.851 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithstaticcolumn(
		id bigint,
		uuid uuid,
		another_static_col text static,
		static_col text static,
		value text,
		PRIMARY KEY(id, uuid))
	WITH CLUSTERING ORDER BY(uuid ASC);

13:06:46.852 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithstaticcolumn
13:06:46.920 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID b5f58d39-5b44-4dd5-b285-4e680a481d3e : [INSERT INTO achilles_embedded.entitywithstaticcolumn (id,another_static_col,static_col,uuid,value) VALUES (:id,:another_static_col,:static_col,:uuid,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [6532368015709248512, null, static_val, d54ff970-29f4-11ec-8990-6ff2462cade8, val, 0]
	 Encoded bound values : [6532368015709248512, null, static_val, d54ff970-29f4-11ec-8990-6ff2462cade8, val, 0]
13:06:46.922 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithstaticcolumn
13:06:46.989 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:46.992 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithstaticcolumn(
		id bigint,
		uuid uuid,
		another_static_col text static,
		static_col text static,
		value text,
		PRIMARY KEY(id, uuid))
	WITH CLUSTERING ORDER BY(uuid ASC);

13:06:46.994 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithstaticcolumn
13:06:47.093 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithstaticcolumn(id, uuid, static_col, value) VALUES(4085402036400523264, d56a8650-29f4-11ec-8990-6ff2462cade8, 'static_val', 'val');

13:06:47.101 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 9f9e3a94-7540-4e35-b5a9-bccf75c22c94 : [UPDATE achilles_embedded.entitywithstaticcolumn USING TTL :ttl SET static_col=:static_col,value=:value WHERE id=:id AND uuid=:uuid;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [4085402036400523264, null, new_static, d56a8650-29f4-11ec-8990-6ff2462cade8, new_val, 0]
	 Encoded bound values : [4085402036400523264, null, new_static, d56a8650-29f4-11ec-8990-6ff2462cade8, new_val, 0]
13:06:47.107 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithstaticcolumn
13:06:47.175 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:47.180 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithstaticcolumn(
		id bigint,
		uuid uuid,
		another_static_col text static,
		static_col text static,
		value text,
		PRIMARY KEY(id, uuid))
	WITH CLUSTERING ORDER BY(uuid ASC);

13:06:47.182 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithstaticcolumn
13:06:47.263 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 65c1d740-dd50-4dec-b648-21f1893ff477 : [INSERT INTO achilles_embedded.entitywithstaticcolumn (id,another_static_col,static_col) VALUES (:id,:another_static_col,:static_col) USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [85417878727703552, null, static_val, 0]
	 Encoded bound values : [85417878727703552, null, static_val, 0]
13:06:47.265 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithstaticcolumn
13:06:47.339 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:47.343 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithstaticcolumn(
		id bigint,
		uuid uuid,
		another_static_col text static,
		static_col text static,
		value text,
		PRIMARY KEY(id, uuid))
	WITH CLUSTERING ORDER BY(uuid ASC);

13:06:47.344 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithstaticcolumn
13:06:47.410 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithstaticcolumn(id, uuid, static_col, value) VALUES(2737267951445947392, d59abe10-29f4-11ec-8990-6ff2462cade8, 'static_val', 'val');

13:06:47.412 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 32d1bd48-0f41-4ab6-a0c3-275a4bac0b68 : [UPDATE achilles_embedded.entitywithstaticcolumn USING TTL :ttl SET static_col=:static_col WHERE id=:id;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [2737267951445947392, null, new_static, 0]
	 Encoded bound values : [2737267951445947392, null, new_static, 0]
13:06:47.414 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithstaticcolumn
13:06:47.477 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:47.481 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entitywithstaticcolumn(
		id bigint,
		uuid uuid,
		another_static_col text static,
		static_col text static,
		value text,
		PRIMARY KEY(id, uuid))
	WITH CLUSTERING ORDER BY(uuid ASC);

13:06:47.484 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithstaticcolumn
13:06:47.557 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entitywithstaticcolumn(id, uuid, static_col, value) VALUES(3716912408465116160, d5b12c40-29f4-11ec-8990-6ff2462cade8, 'static_val', 'val');

13:06:47.558 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID e5dcb936-8bd9-482c-9b64-e33799a6dd33 : [SELECT id,another_static_col,static_col,uuid,value FROM achilles_embedded.entitywithstaticcolumn WHERE id=:id AND uuid=:uuid;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [3716912408465116160, d5b12c40-29f4-11ec-8990-6ff2462cade8]
	 Encoded bound values : [3716912408465116160, d5b12c40-29f4-11ec-8990-6ff2462cade8]
13:06:47.559 [achilles-default-executor-138] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), another_static_col(varchar), static_col(varchar), uuid(uuid), value(varchar)]]
13:06:47.559 [achilles-default-executor-138] DEBUG ACHILLES_DML_STATEMENT - Query ID e5dcb936-8bd9-482c-9b64-e33799a6dd33 results : 
	id: 3716912408465116160, another_static_col: null, static_col: static_val, uuid: d5b12c40-29f4-11ec-8990-6ff2462cade8, value: val

13:06:47.560 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entitywithstaticcolumn
13:06:47.628 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:47.883 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.my_type(
		name text,
		list list<text>,
		map map<text, text>);

13:06:47.884 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.bean_validation(
		id bigint,
		list list<text>,
		udt frozen<achilles_embedded.my_type>,
		value text,
		PRIMARY KEY(id));

13:06:48.115 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.bean_validation
13:06:48.239 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.bean_validation
13:06:48.313 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:48.325 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.my_type(
		name text,
		list list<text>,
		map map<text, text>);

13:06:48.326 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.bean_validation(
		id bigint,
		list list<text>,
		udt frozen<achilles_embedded.my_type>,
		value text,
		PRIMARY KEY(id));

13:06:48.327 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.bean_validation
13:06:48.401 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 1a2ab670-ace2-4f0e-aeb2-40d65d2bc4c5 : [INSERT INTO achilles_embedded.bean_validation (id,list,udt,value) VALUES (:id,:list,:udt,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [976071526628017152, [], info.archinnov.achilles.internals.entities.TestUDT@316fb1a3, value, 0]
	 Encoded bound values : [976071526628017152, [], {name:'test@test.com',list:['1'],map:{'0':'default'}}, value, 0]
13:06:48.405 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.bean_validation
13:06:48.468 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:48.487 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.my_type(
		name text,
		list list<text>,
		map map<text, text>);

13:06:48.489 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.bean_validation(
		id bigint,
		list list<text>,
		udt frozen<achilles_embedded.my_type>,
		value text,
		PRIMARY KEY(id));

13:06:48.490 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.bean_validation
13:06:48.585 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.bean_validation
13:06:48.651 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:48.664 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.my_type(
		name text,
		list list<text>,
		map map<text, text>);

13:06:48.665 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.bean_validation(
		id bigint,
		list list<text>,
		udt frozen<achilles_embedded.my_type>,
		value text,
		PRIMARY KEY(id));

13:06:48.666 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.bean_validation
13:06:48.739 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.bean_validation
13:06:48.812 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:48.829 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.my_type(
		name text,
		list list<text>,
		map map<text, text>);

13:06:48.832 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.bean_validation(
		id bigint,
		list list<text>,
		udt frozen<achilles_embedded.my_type>,
		value text,
		PRIMARY KEY(id));

13:06:48.834 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.bean_validation
13:06:48.900 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.bean_validation(id, value) VALUES(251059248239978496, 'value');

13:06:48.930 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 16bfe662-86fa-4db9-a44d-b06e790f73ed : [SELECT id,list,udt,value FROM achilles_embedded.bean_validation WHERE id=:id;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [251059248239978496]
	 Encoded bound values : [251059248239978496]
13:06:48.934 [achilles-default-executor-140] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), list(list<varchar>), udt(achilles_embedded.my_type), value(varchar)]]
13:06:48.934 [achilles-default-executor-140] DEBUG ACHILLES_DML_STATEMENT - Query ID 16bfe662-86fa-4db9-a44d-b06e790f73ed results : 
	id: 251059248239978496, list: [], udt: null, value: value

13:06:48.937 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.bean_validation
13:06:48.998 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:49.009 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.my_type(
		name text,
		list list<text>,
		map map<text, text>);

13:06:49.010 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.bean_validation(
		id bigint,
		list list<text>,
		udt frozen<achilles_embedded.my_type>,
		value text,
		PRIMARY KEY(id));

13:06:49.012 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.bean_validation
13:06:49.088 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.bean_validation
13:06:49.156 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:49.161 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:49.163 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:49.164 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:49.164 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.having_nested_type(
		value text,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		nestedudt frozen<achilles_embedded.no_ks>,
		tuplewithudt frozen<tuple<int, no_ks>>);

13:06:49.311 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:06:49.314 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_nested_udt(
		id bigint,
		complexudt frozen<achilles_embedded.having_nested_type>,
		optionaludt achilles_embedded.no_ks,
		udt frozen<achilles_embedded.no_ks>,
		PRIMARY KEY(id));

13:06:49.558 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:49.562 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:06:49.803 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:06:49.878 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(177575353468122112, 00000000-0000-0000-0000-000000000000, '2015-10-01 00:00:00+0000', 'val1');

13:06:49.880 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(177575353468122112, 00000000-0000-0000-0000-000000000000, '2015-10-02 00:00:00+0000', 'val2');

13:06:49.881 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(177575353468122112, 00000000-0000-0000-0000-000000000000, '2015-10-03 00:00:00+0000', 'val3');

13:06:49.881 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(177575353468122112, 00000000-0000-0000-0000-000000000001, '2015-10-04 00:00:00+0000', 'val4');

13:06:49.882 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(177575353468122112, 00000000-0000-0000-0000-000000000001, '2015-10-05 00:00:00+0000', 'val5');

13:06:49.893 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 78ea09a4-9da2-4d8f-a62b-3b240d79c794 : [SELECT uuid,date,value FROM achilles_embedded.entity_with_clusterings WHERE id=:id AND uuid IN :uuid AND date IN :date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [177575353468122112, [00000000-0000-0000-0000-000000000000, 00000000-0000-0000-0000-000000000001], [Fri Oct 02 19:00:00 CDT 2015, Sun Oct 04 19:00:00 CDT 2015]]
	 Encoded bound values : [177575353468122112, [00000000-0000-0000-0000-000000000000, 00000000-0000-0000-0000-000000000001], [Fri Oct 02 19:00:00 CDT 2015, Sun Oct 04 19:00:00 CDT 2015]]
13:06:49.894 [achilles-default-executor-141] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[uuid(uuid), date(timestamp), value(varchar)]]
13:06:49.895 [achilles-default-executor-141] DEBUG ACHILLES_DML_STATEMENT - Query ID 78ea09a4-9da2-4d8f-a62b-3b240d79c794 results : 
	uuid: 00000000-0000-0000-0000-000000000000, date: Fri Oct 02 19:00:00 CDT 2015, value: val3
	uuid: 00000000-0000-0000-0000-000000000001, date: Sun Oct 04 19:00:00 CDT 2015, value: val5

13:06:49.896 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:06:49.973 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:49.976 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:06:49.977 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:06:50.042 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(7737143126802172928, 00000000-0000-0000-0000-000000000000, '2015-10-01 00:00:00+0000', 'val1');

13:06:50.044 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(7737143126802172928, 00000000-0000-0000-0000-000000000000, '2015-10-02 00:00:00+0000', 'val2');

13:06:50.044 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(7737143126802172928, 00000000-0000-0000-0000-000000000000, '2015-10-03 00:00:00+0000', 'val3');

13:06:50.045 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(7737143126802172928, 00000000-0000-0000-0000-000000000000, '2015-10-04 00:00:00+0000', 'val4');

13:06:50.046 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(7737143126802172928, 00000000-0000-0000-0000-000000000000, '2015-10-05 00:00:00+0000', 'val5');

13:06:50.051 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID baa049f6-5d46-4f99-aa9a-3df9a0ade8b2 : [DELETE value FROM achilles_embedded.entity_with_clusterings WHERE id=:id AND uuid=:uuid AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [7737143126802172928, 00000000-0000-0000-0000-000000000000, Thu Oct 01 19:00:00 CDT 2015]
	 Encoded bound values : [7737143126802172928, 00000000-0000-0000-0000-000000000000, Thu Oct 01 19:00:00 CDT 2015]
13:06:50.054 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:06:50.115 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:50.120 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:06:50.121 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:06:50.184 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(2923471865815251968, 00000000-0000-0000-0000-000000000000, '2015-10-01 00:00:00+0000', 'val1');

13:06:50.185 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(2923471865815251968, 00000000-0000-0000-0000-000000000000, '2015-10-02 00:00:00+0000', 'val2');

13:06:50.186 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(2923471865815251968, 00000000-0000-0000-0000-000000000000, '2015-10-03 00:00:00+0000', 'val3');

13:06:50.187 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(2923471865815251968, 00000000-0000-0000-0000-000000000001, '2015-10-04 00:00:00+0000', 'val4');

13:06:50.187 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(2923471865815251968, 00000000-0000-0000-0000-000000000001, '2015-10-05 00:00:00+0000', 'val5');

13:06:50.192 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 111a8b25-c59d-4aca-997d-c59ce08e6089 : [SELECT uuid,date,value FROM achilles_embedded.entity_with_clusterings WHERE id=:id AND (uuid,date)>=(:uuid,:date) AND (uuid,date)<(:uuid,:date);] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [2923471865815251968, 00000000-0000-0000-0000-000000000000, Thu Oct 01 19:00:00 CDT 2015, 00000000-0000-0000-0000-000000000001, Sat Oct 03 19:00:00 CDT 2015]
	 Encoded bound values : [2923471865815251968, 00000000-0000-0000-0000-000000000000, Thu Oct 01 19:00:00 CDT 2015, 00000000-0000-0000-0000-000000000001, Sat Oct 03 19:00:00 CDT 2015]
13:06:50.195 [achilles-default-executor-143] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[uuid(uuid), date(timestamp), value(varchar)]]
13:06:50.195 [achilles-default-executor-143] DEBUG ACHILLES_DML_STATEMENT - Query ID 111a8b25-c59d-4aca-997d-c59ce08e6089 results : 
	uuid: 00000000-0000-0000-0000-000000000000, date: Fri Oct 02 19:00:00 CDT 2015, value: val3
	uuid: 00000000-0000-0000-0000-000000000000, date: Thu Oct 01 19:00:00 CDT 2015, value: val2

13:06:50.197 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 6bf730fc-2417-4edd-a6a6-bc96f935912e : [SELECT value FROM achilles_embedded.entity_with_clusterings WHERE id=:id AND (uuid,date)>=(:uuid,:date);] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [2923471865815251968, 00000000-0000-0000-0000-000000000001, Sat Oct 03 19:00:00 CDT 2015]
	 Encoded bound values : [2923471865815251968, 00000000-0000-0000-0000-000000000001, Sat Oct 03 19:00:00 CDT 2015]
13:06:50.199 [achilles-default-executor-144] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[value(varchar)]]
13:06:50.199 [achilles-default-executor-144] DEBUG ACHILLES_DML_STATEMENT - Query ID 6bf730fc-2417-4edd-a6a6-bc96f935912e results : 
	value: val5
	value: val4

13:06:50.199 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:06:50.296 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:50.300 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:06:50.301 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:06:50.363 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(1947866097954198528, 00000000-0000-0000-0000-000000000000, '2015-10-01 00:00:00+0000', 'val1');

13:06:50.364 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(1947866097954198528, 00000000-0000-0000-0000-000000000000, '2015-10-02 00:00:00+0000', 'val2');

13:06:50.365 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(1947866097954198528, 00000000-0000-0000-0000-000000000000, '2015-10-03 00:00:00+0000', 'val3');

13:06:50.366 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(1947866097954198528, 00000000-0000-0000-0000-000000000001, '2015-10-04 00:00:00+0000', 'val4');

13:06:50.367 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(1947866097954198528, 00000000-0000-0000-0000-000000000001, '2015-10-05 00:00:00+0000', 'val5');

13:06:50.370 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 51e797b2-09f1-4ab4-be6b-c72691c47771 : [SELECT uuid,date,value FROM achilles_embedded.entity_with_clusterings WHERE id=:id AND (uuid,date)>(:uuid,:date) AND (uuid)<(:uuid);] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [1947866097954198528, 00000000-0000-0000-0000-000000000000, Thu Oct 01 19:00:00 CDT 2015, 00000000-0000-0000-0000-000000000001]
	 Encoded bound values : [1947866097954198528, 00000000-0000-0000-0000-000000000000, Thu Oct 01 19:00:00 CDT 2015, 00000000-0000-0000-0000-000000000001]
13:06:50.372 [achilles-default-executor-145] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[uuid(uuid), date(timestamp), value(varchar)]]
13:06:50.372 [achilles-default-executor-145] DEBUG ACHILLES_DML_STATEMENT - Query ID 51e797b2-09f1-4ab4-be6b-c72691c47771 results : 
	uuid: 00000000-0000-0000-0000-000000000000, date: Fri Oct 02 19:00:00 CDT 2015, value: val3

13:06:50.372 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:06:50.458 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:50.463 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:06:50.464 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:06:50.529 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(85751014097092608, 00000000-0000-0000-0000-000000000000, '2015-10-01 00:00:00+0000', 'val1');

13:06:50.530 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(85751014097092608, 00000000-0000-0000-0000-000000000000, '2015-10-02 00:00:00+0000', 'val2');

13:06:50.531 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(85751014097092608, 00000000-0000-0000-0000-000000000000, '2015-10-03 00:00:00+0000', 'val3');

13:06:50.532 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(832189460137024512, 00000000-0000-0000-0000-000000000000, '2015-10-04 00:00:00+0000', 'val4');

13:06:50.533 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(832189460137024512, 00000000-0000-0000-0000-000000000000, '2015-10-05 00:00:00+0000', 'val5');

13:06:50.536 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 82a66beb-38cd-4b7a-b9ce-50ea2a853e0b : [SELECT uuid,date,value FROM achilles_embedded.entity_with_clusterings WHERE id IN :id AND uuid=:uuid AND date IN :date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [[85751014097092608, 832189460137024512], 00000000-0000-0000-0000-000000000000, [Fri Oct 02 19:00:00 CDT 2015, Sun Oct 04 19:00:00 CDT 2015]]
	 Encoded bound values : [[85751014097092608, 832189460137024512], 00000000-0000-0000-0000-000000000000, [Fri Oct 02 19:00:00 CDT 2015, Sun Oct 04 19:00:00 CDT 2015]]
13:06:50.538 [achilles-default-executor-146] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[uuid(uuid), date(timestamp), value(varchar)]]
13:06:50.538 [achilles-default-executor-146] DEBUG ACHILLES_DML_STATEMENT - Query ID 82a66beb-38cd-4b7a-b9ce-50ea2a853e0b results : 
	uuid: 00000000-0000-0000-0000-000000000000, date: Fri Oct 02 19:00:00 CDT 2015, value: val3
	uuid: 00000000-0000-0000-0000-000000000000, date: Sun Oct 04 19:00:00 CDT 2015, value: val5

13:06:50.538 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:06:50.601 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:50.606 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:06:50.607 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:06:50.695 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(1752070294242941952, 00000000-0000-0000-0000-000000000000, '2015-10-01 00:00:00+0000', 'val1');

13:06:50.696 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(1752070294242941952, 00000000-0000-0000-0000-000000000000, '2015-10-02 00:00:00+0000', 'val2');

13:06:50.697 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(1752070294242941952, 00000000-0000-0000-0000-000000000000, '2015-10-03 00:00:00+0000', 'val3');

13:06:50.697 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(7432303860628719616, 00000000-0000-0000-0000-000000000000, '2015-10-01 00:00:00+0000', 'val4');

13:06:50.698 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(7432303860628719616, 00000000-0000-0000-0000-000000000000, '2015-10-02 00:00:00+0000', 'val5');

13:06:50.704 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:06:50.775 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:50.779 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:06:50.780 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:06:50.843 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(5983235669491572736, 00000000-0000-0000-0000-000000000000, '2015-10-01 00:00:00+0000', 'val1');

13:06:50.844 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(5983235669491572736, 00000000-0000-0000-0000-000000000000, '2015-10-02 00:00:00+0000', 'val2');

13:06:50.845 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(5983235669491572736, 00000000-0000-0000-0000-000000000000, '2015-10-03 00:00:00+0000', 'val3');

13:06:50.845 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(3897723470482827264, 00000000-0000-0000-0000-000000000000, '2015-10-01 00:00:00+0000', 'val4');

13:06:50.846 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(3897723470482827264, 00000000-0000-0000-0000-000000000000, '2015-10-02 00:00:00+0000', 'val5');

13:06:50.852 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID ad27004b-ac2a-4f99-ab22-7abc5db59c79 : [UPDATE achilles_embedded.entity_with_clusterings SET value=:value WHERE id IN :id AND uuid=:uuid AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [new_value, [5983235669491572736, 3897723470482827264], 00000000-0000-0000-0000-000000000000, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [new_value, [5983235669491572736, 3897723470482827264], 00000000-0000-0000-0000-000000000000, Wed Sep 30 19:00:00 CDT 2015]
13:06:50.855 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:06:50.943 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:50.947 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:06:50.948 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:06:51.017 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(3963130818541964288, 00000000-0000-0000-0000-000000000000, '2015-10-01 00:00:00+0000', 'val1');

13:06:51.018 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(3963130818541964288, 00000000-0000-0000-0000-000000000000, '2015-10-02 00:00:00+0000', 'val2');

13:06:51.018 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(3963130818541964288, 00000000-0000-0000-0000-000000000000, '2015-10-03 00:00:00+0000', 'val3');

13:06:51.019 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(3963130818541964288, 00000000-0000-0000-0000-000000000001, '2015-10-04 00:00:00+0000', 'val4');

13:06:51.020 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(3963130818541964288, 00000000-0000-0000-0000-000000000001, '2015-10-05 00:00:00+0000', 'val5');

13:06:51.022 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID f1dd43b6-d67f-4306-a7fa-44492c015f77 : [SELECT uuid,date,value FROM achilles_embedded.entity_with_clusterings WHERE id=:id AND uuid IN :uuid AND date>=:date_Lte AND date<=:date_Lte;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [3963130818541964288, [00000000-0000-0000-0000-000000000000, 00000000-0000-0000-0000-000000000001], Fri Oct 02 19:00:00 CDT 2015, Sun Oct 04 19:00:00 CDT 2015]
	 Encoded bound values : [3963130818541964288, [00000000-0000-0000-0000-000000000000, 00000000-0000-0000-0000-000000000001], Fri Oct 02 19:00:00 CDT 2015, Sun Oct 04 19:00:00 CDT 2015]
13:06:51.023 [achilles-default-executor-149] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[uuid(uuid), date(timestamp), value(varchar)]]
13:06:51.023 [achilles-default-executor-149] DEBUG ACHILLES_DML_STATEMENT - Query ID f1dd43b6-d67f-4306-a7fa-44492c015f77 results : 
	uuid: 00000000-0000-0000-0000-000000000000, date: Fri Oct 02 19:00:00 CDT 2015, value: val3
	uuid: 00000000-0000-0000-0000-000000000001, date: Sun Oct 04 19:00:00 CDT 2015, value: val5
	uuid: 00000000-0000-0000-0000-000000000001, date: Sat Oct 03 19:00:00 CDT 2015, value: val4

13:06:51.024 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:06:51.084 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:51.087 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:06:51.089 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:06:51.153 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(4757258229915248640, d7d5e100-29f4-11ec-8990-6ff2462cade8, '2015-10-01 00:00:00+0000', 'val');

13:06:51.155 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 0fcca326-c4ea-4b87-841d-3d64fdf68a2a : [SELECT value FROM achilles_embedded.entity_with_clusterings WHERE id=:id AND uuid=:uuid AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [4757258229915248640, d7d5e100-29f4-11ec-8990-6ff2462cade8, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [4757258229915248640, d7d5e100-29f4-11ec-8990-6ff2462cade8, Wed Sep 30 19:00:00 CDT 2015]
13:06:51.156 [achilles-default-executor-150] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[value(varchar)]]
13:06:51.156 [achilles-default-executor-150] DEBUG ACHILLES_DML_STATEMENT - Query ID 0fcca326-c4ea-4b87-841d-3d64fdf68a2a results : 
	value: val

13:06:51.157 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:06:51.226 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:51.227 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:51.313 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:51.399 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:06:51.539 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:06:51.788 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:06:51.942 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:06:52.155 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:06:52.218 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO overriden_schema_name.entitywithudts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(5476506802127721472, [{id: 5476506802127721472, value: 'val'}], {{id: 5476506802127721472, value: 'val'}: {id: 5476506802127721472, value: 'val'}}, {id: 5476506802127721472, value: 'val'}, {{id: 5476506802127721472, value: 'val'}}, (1, {id: 5476506802127721472, value: 'val'}));

13:06:52.228 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 94adf557-5b14-42ec-a242-da95afd40ed3 : [UPDATE overriden_schema_name.entitywithudts SET optionaludt=:optionaludt WHERE id=:id;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [Optional[info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@cdcfef38], 5476506802127721472]
	 Encoded bound values : [{id:5476506802127721472,value:'new_val'}, 5476506802127721472]
13:06:52.231 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:06:52.314 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:52.315 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:52.316 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:52.317 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:06:52.317 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:06:52.322 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:06:52.326 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:06:52.327 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:06:52.395 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO new_ks.entity_with_udts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(649842064347618304, [{id: 649842064347618304, value: 'val'}], {{id: 649842064347618304, value: 'val'}: {id: 649842064347618304, value: 'val'}}, {id: 649842064347618304, value: 'val'}, {{id: 649842064347618304, value: 'val'}}, (1, {id: 649842064347618304, value: 'val'}));

13:06:52.402 [Achilles Embedded Cassandra Cluster-worker-1] WARN  com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='DELETE FROM new_ks.entity_with_udts WHERE id=:id;'
13:06:52.402 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 99c5faaf-0d86-453e-aded-a04439542775 : [DELETE FROM new_ks.entity_with_udts WHERE id=:id;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [649842064347618304]
	 Encoded bound values : [649842064347618304]
13:06:52.404 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:06:52.464 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:52.466 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:52.466 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:52.467 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:06:52.467 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:06:52.472 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:06:52.474 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:06:52.475 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:06:52.555 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO overriden_schema_name.entitywithudts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(4796854403959823360, [{id: 4796854403959823360, value: 'val'}], {{id: 4796854403959823360, value: 'val'}: {id: 4796854403959823360, value: 'val'}}, {id: 4796854403959823360, value: 'val'}, {{id: 4796854403959823360, value: 'val'}}, (1, {id: 4796854403959823360, value: 'val'}));

13:06:52.561 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 0690a9ba-334a-4fa5-8742-699ca86ed47e : [SELECT * FROM overriden_schema_name.entitywithudts WHERE id=:id;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [4796854403959823360]
	 Encoded bound values : [4796854403959823360]
13:06:52.563 [achilles-default-executor-153] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), listudt(list<overriden_schema_name.udt_no_ks>), mapudt(map<overriden_schema_name.udt_no_ks, overriden_schema_name.udt_no_ks>), optionaludt(overriden_schema_name.udt_no_ks), setudt(set<overriden_schema_name.udt_no_ks>), tupleudt(frozen<tuple<int, udt_no_ks>>)]]
13:06:52.564 [achilles-default-executor-153] DEBUG ACHILLES_DML_STATEMENT - Query ID 0690a9ba-334a-4fa5-8742-699ca86ed47e results : 
	id: 4796854403959823360, listudt: [{id:4796854403959823360,value:'val'}], mapudt: {{id:4796854403959823360,value:'val'}={id:4796854403959823360,value:'val'}}, optionaludt: {id:4796854403959823360,value:'val'}, setudt: [{id:4796854403959823360,value:'val'}], tupleudt: (1,{id:4796854403959823360,value:'val'})

13:06:52.575 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:06:52.641 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:52.642 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:52.643 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:52.643 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:06:52.644 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:06:52.648 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:06:52.648 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:06:52.649 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:06:52.710 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO new_ks.entity_with_udts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(5261963935822877696, [{id: 5261963935822877696, value: 'val'}], {{id: 5261963935822877696, value: 'val'}: {id: 5261963935822877696, value: 'val'}}, {id: 5261963935822877696, value: 'val'}, {{id: 5261963935822877696, value: 'val'}}, (1, {id: 5261963935822877696, value: 'val'}));

13:06:52.713 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 989e8ac3-fe21-4ce0-acbd-9cb74586a030 : [SELECT * FROM new_ks.entity_with_udts WHERE id=:id;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [5261963935822877696]
	 Encoded bound values : [5261963935822877696]
13:06:52.718 [achilles-default-executor-154] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), listudt(list<new_ks.udt_no_ks>), mapudt(map<new_ks.udt_no_ks, new_ks.udt_no_ks>), optionaludt(new_ks.udt_no_ks), setudt(set<new_ks.udt_no_ks>), tupleudt(frozen<tuple<int, udt_no_ks>>)]]
13:06:52.719 [achilles-default-executor-154] DEBUG ACHILLES_DML_STATEMENT - Query ID 989e8ac3-fe21-4ce0-acbd-9cb74586a030 results : 
	id: 5261963935822877696, listudt: [{id:5261963935822877696,value:'val'}], mapudt: {{id:5261963935822877696,value:'val'}={id:5261963935822877696,value:'val'}}, optionaludt: {id:5261963935822877696,value:'val'}, setudt: [{id:5261963935822877696,value:'val'}], tupleudt: (1,{id:5261963935822877696,value:'val'})

13:06:52.721 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:06:52.797 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:52.798 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:52.798 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:52.799 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:06:52.799 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:06:52.803 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:06:52.804 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:06:52.805 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:06:52.877 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO overriden_schema_name.entitywithudts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(5111840150050231296, [{id: 5111840150050231296, value: 'val'}], {{id: 5111840150050231296, value: 'val'}: {id: 5111840150050231296, value: 'val'}}, {id: 5111840150050231296, value: 'val'}, {{id: 5111840150050231296, value: 'val'}}, (1, {id: 5111840150050231296, value: 'val'}));

13:06:52.880 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID a15c56b2-232d-4b04-a983-c5d3340196f8 : [DELETE FROM overriden_schema_name.entitywithudts WHERE id=:id;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [5111840150050231296]
	 Encoded bound values : [5111840150050231296]
13:06:52.882 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:06:52.944 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:52.946 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:52.946 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:52.946 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:06:52.947 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:06:52.950 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:06:52.952 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:06:52.953 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:06:53.033 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 2cde544d-dc86-4929-a271-e806f5100dcb : [INSERT INTO overriden_schema_name.entitywithudts (id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES (:id,:listudt,:mapudt,:optionaludt,:setudt,:tupleudt) USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [4783122006362461184, [info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@f5facaa3], {info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@f5facaa3=info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@f5facaa3}, Optional[info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@f5facaa3], [info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@f5facaa3], Tuple2{_1=1, _2=info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@f5facaa3}, 0]
	 Encoded bound values : [4783122006362461184, [{id:4783122006362461184,value:'val'}], {{id:4783122006362461184,value:'val'}={id:4783122006362461184,value:'val'}}, {id:4783122006362461184,value:'val'}, [{id:4783122006362461184,value:'val'}], (1,{id:4783122006362461184,value:'val'}), 0]
13:06:53.037 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:06:53.109 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:53.110 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:53.111 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:53.111 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:06:53.112 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:06:53.115 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:06:53.116 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:06:53.119 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:06:53.181 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO new_ks.entity_with_udts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(5255998872216406016, [{id: 5255998872216406016, value: 'val'}], {{id: 5255998872216406016, value: 'val'}: {id: 5255998872216406016, value: 'val'}}, {id: 5255998872216406016, value: 'val'}, {{id: 5255998872216406016, value: 'val'}}, (1, {id: 5255998872216406016, value: 'val'}));

13:06:53.182 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 2772fa69-243b-457c-83f8-72c82cd44dee : [DELETE FROM new_ks.entity_with_udts WHERE id=:id;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [5255998872216406016]
	 Encoded bound values : [5255998872216406016]
13:06:53.184 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:06:53.267 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:53.268 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:53.269 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:53.269 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:06:53.269 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:06:53.274 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:06:53.275 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:06:53.277 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:06:53.350 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID db092a46-6634-4a2c-af1a-8ff505d9ae27 : [INSERT INTO new_ks.entity_with_udts (id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES (:id,:listudt,:mapudt,:optionaludt,:setudt,:tupleudt) USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [1039110886820070400, [info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@1462180a], {info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@1462180a=info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@1462180a}, Optional[info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@1462180a], [info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@1462180a], Tuple2{_1=1, _2=info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@1462180a}, 0]
	 Encoded bound values : [1039110886820070400, [{id:1039110886820070400,value:'val'}], {{id:1039110886820070400,value:'val'}={id:1039110886820070400,value:'val'}}, {id:1039110886820070400,value:'val'}, [{id:1039110886820070400,value:'val'}], (1,{id:1039110886820070400,value:'val'}), 0]
13:06:53.352 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:06:53.414 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:53.415 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:53.416 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:53.416 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:06:53.417 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:06:53.420 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:06:53.421 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:06:53.422 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:06:53.501 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO new_ks.entity_with_udts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(5864032134253178880, [{id: 5864032134253178880, value: 'val'}], {{id: 5864032134253178880, value: 'val'}: {id: 5864032134253178880, value: 'val'}}, {id: 5864032134253178880, value: 'val'}, {{id: 5864032134253178880, value: 'val'}}, (1, {id: 5864032134253178880, value: 'val'}));

13:06:53.505 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID e41c63c0-6f7a-498c-816d-256a6963ce7f : [UPDATE new_ks.entity_with_udts SET optionaludt=:optionaludt WHERE id=:id;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [Optional[info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@1db64e9b], 5864032134253178880]
	 Encoded bound values : [{id:5864032134253178880,value:'new_val'}, 5864032134253178880]
13:06:53.508 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:06:53.582 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:53.584 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:53.584 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:53.585 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:06:53.585 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:06:53.589 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:06:53.590 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:06:53.592 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:06:53.654 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO overriden_schema_name.entitywithudts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(8335543804797784064, [{id: 8335543804797784064, value: 'val'}], {{id: 8335543804797784064, value: 'val'}: {id: 8335543804797784064, value: 'val'}}, {id: 8335543804797784064, value: 'val'}, {{id: 8335543804797784064, value: 'val'}}, (1, {id: 8335543804797784064, value: 'val'}));

13:06:53.657 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID eae49b33-e62b-4af8-b4ca-7331a10f5e64 : [DELETE FROM overriden_schema_name.entitywithudts WHERE id=:id;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [8335543804797784064]
	 Encoded bound values : [8335543804797784064]
13:06:53.662 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:06:53.748 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:53.750 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:53.750 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:53.751 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:06:53.751 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:06:53.755 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:06:53.756 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:06:53.758 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:06:53.828 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO overriden_schema_name.entitywithudts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(622639496102984704, [{id: 622639496102984704, value: 'val'}], {{id: 622639496102984704, value: 'val'}: {id: 622639496102984704, value: 'val'}}, {id: 622639496102984704, value: 'val'}, {{id: 622639496102984704, value: 'val'}}, (1, {id: 622639496102984704, value: 'val'}));

13:06:53.831 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 8e9202de-14fa-4327-80db-806b90b553c7 : [SELECT id,listudt,mapudt,optionaludt,setudt,tupleudt FROM overriden_schema_name.entitywithudts WHERE id=:id;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [622639496102984704]
	 Encoded bound values : [622639496102984704]
13:06:53.832 [achilles-default-executor-161] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), listudt(list<overriden_schema_name.udt_no_ks>), mapudt(map<overriden_schema_name.udt_no_ks, overriden_schema_name.udt_no_ks>), optionaludt(overriden_schema_name.udt_no_ks), setudt(set<overriden_schema_name.udt_no_ks>), tupleudt(frozen<tuple<int, udt_no_ks>>)]]
13:06:53.832 [achilles-default-executor-161] DEBUG ACHILLES_DML_STATEMENT - Query ID 8e9202de-14fa-4327-80db-806b90b553c7 results : 
	id: 622639496102984704, listudt: [{id:622639496102984704,value:'val'}], mapudt: {{id:622639496102984704,value:'val'}={id:622639496102984704,value:'val'}}, optionaludt: {id:622639496102984704,value:'val'}, setudt: [{id:622639496102984704,value:'val'}], tupleudt: (1,{id:622639496102984704,value:'val'})

13:06:53.834 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:06:53.894 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:53.895 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:53.896 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:06:53.896 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:06:53.897 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:06:53.901 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:06:53.902 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:06:53.903 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:06:53.982 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO new_ks.entity_with_udts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(8483772819787073536, [{id: 8483772819787073536, value: 'val'}], {{id: 8483772819787073536, value: 'val'}: {id: 8483772819787073536, value: 'val'}}, {id: 8483772819787073536, value: 'val'}, {{id: 8483772819787073536, value: 'val'}}, (1, {id: 8483772819787073536, value: 'val'}));

13:06:53.983 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 1800d6a4-0c14-44d5-bde2-eb1d5108d943 : [SELECT id,listudt,mapudt,optionaludt,setudt,tupleudt FROM new_ks.entity_with_udts WHERE id=:id;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [8483772819787073536]
	 Encoded bound values : [8483772819787073536]
13:06:53.986 [achilles-default-executor-162] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), listudt(list<new_ks.udt_no_ks>), mapudt(map<new_ks.udt_no_ks, new_ks.udt_no_ks>), optionaludt(new_ks.udt_no_ks), setudt(set<new_ks.udt_no_ks>), tupleudt(frozen<tuple<int, udt_no_ks>>)]]
13:06:53.986 [achilles-default-executor-162] DEBUG ACHILLES_DML_STATEMENT - Query ID 1800d6a4-0c14-44d5-bde2-eb1d5108d943 results : 
	id: 8483772819787073536, listudt: [{id:8483772819787073536,value:'val'}], mapudt: {{id:8483772819787073536,value:'val'}={id:8483772819787073536,value:'val'}}, optionaludt: {id:8483772819787073536,value:'val'}, setudt: [{id:8483772819787073536,value:'val'}], tupleudt: (1,{id:8483772819787073536,value:'val'})

13:06:53.987 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:06:54.052 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:54.056 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_composite_pk(
		id bigint,
		uuid uuid,
		value text,
		PRIMARY KEY((id, uuid)));

13:06:54.291 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_composite_pk
13:06:54.363 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID a2551f03-6fa3-487b-b048-6423a93fd250 : [INSERT INTO achilles_embedded.entity_composite_pk (id,uuid,value) VALUES (:id,:uuid,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [5071393242257855488, 00000000-0000-0001-0000-000000000001, val, 0]
	 Encoded bound values : [5071393242257855488, 00000000-0000-0001-0000-000000000001, val, 0]
13:06:54.365 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_composite_pk
13:06:54.432 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:54.436 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_composite_pk(
		id bigint,
		uuid uuid,
		value text,
		PRIMARY KEY((id, uuid)));

13:06:54.437 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_composite_pk
13:06:54.503 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_composite_pk(id, uuid, value) VALUES(7368760684365552640, 00000000-0000-0001-0000-000000000001, 'val1');

13:06:54.505 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_composite_pk(id, uuid, value) VALUES(1129652438982472704, 00000000-0000-0002-0000-000000000002, 'val2');

13:06:54.507 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_composite_pk(id, uuid, value) VALUES(8377703856343963648, 00000000-0000-0003-0000-000000000003, 'val3');

13:06:54.507 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_composite_pk(id, uuid, value) VALUES(7052845454709117952, 00000000-0000-0004-0000-000000000004, 'val4');

13:06:54.508 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_composite_pk(id, uuid, value) VALUES(5569549613516593152, 00000000-0000-0005-0000-000000000005, 'val5');

13:06:54.531 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID e1b1ae7c-96d1-407d-857c-5f1dd0662ccb : [SELECT uuid FROM achilles_embedded.entity_composite_pk WHERE token(id,uuid)<=:tokenValue;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [-8226900107707255907]
	 Encoded bound values : [-8226900107707255907]
13:06:54.532 [achilles-default-executor-164] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[uuid(uuid)]]
13:06:54.532 [achilles-default-executor-164] DEBUG ACHILLES_DML_STATEMENT - Query ID e1b1ae7c-96d1-407d-857c-5f1dd0662ccb results : 
	uuid: 00000000-0000-0002-0000-000000000002
	uuid: 00000000-0000-0001-0000-000000000001

13:06:54.533 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_composite_pk
13:06:54.594 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:54.598 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_composite_pk(
		id bigint,
		uuid uuid,
		value text,
		PRIMARY KEY((id, uuid)));

13:06:54.602 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_composite_pk
13:06:54.682 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 5ee89872-15e1-4a2f-9bcf-470472043b24 : [INSERT INTO achilles_embedded.entity_composite_pk (id,uuid,value) VALUES (:id,:uuid,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [2355572921311788032, 00000000-0000-0001-0000-000000000001, val, 0]
	 Encoded bound values : [2355572921311788032, 00000000-0000-0001-0000-000000000001, val, 0]
13:06:54.962 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 324f6c26-d7d4-478c-9a26-79d44a4f8951 : [SELECT id,uuid,token(id,uuid) AS tokens FROM achilles_embedded.entity_composite_pk WHERE id=:id AND uuid=:uuid;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [2355572921311788032, 00000000-0000-0001-0000-000000000001]
	 Encoded bound values : [2355572921311788032, 00000000-0000-0001-0000-000000000001]
13:06:54.977 [main] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), uuid(uuid), tokens(bigint)]]
13:06:54.977 [main] DEBUG ACHILLES_DML_STATEMENT - Query ID 324f6c26-d7d4-478c-9a26-79d44a4f8951 results : 
	id: 2355572921311788032, uuid: 00000000-0000-0001-0000-000000000001, tokens: -4303300455800174543

13:06:54.978 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_composite_pk
13:06:55.041 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:55.045 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_composite_pk(
		id bigint,
		uuid uuid,
		value text,
		PRIMARY KEY((id, uuid)));

13:06:55.046 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_composite_pk
13:06:55.109 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_composite_pk(id, uuid, value) VALUES(6585881171288418304, 00000000-0000-0001-0000-000000000001, 'val1-1');

13:06:55.111 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_composite_pk(id, uuid, value) VALUES(6585881171288418304, 00000000-0000-0002-0000-000000000002, 'val1-2');

13:06:55.112 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_composite_pk(id, uuid, value) VALUES(3178801643081287680, 00000000-0000-0001-0000-000000000001, 'val2-1');

13:06:55.112 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_composite_pk(id, uuid, value) VALUES(3178801643081287680, 00000000-0000-0002-0000-000000000002, 'val2-2');

13:06:55.113 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_composite_pk(id, uuid, value) VALUES(3178801643081287680, 00000000-0000-0003-0000-000000000003, 'val2-3');

13:06:55.119 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 37ce259d-dd4b-4a5e-a03c-5e53bd08d406 : [SELECT value FROM achilles_embedded.entity_composite_pk WHERE id IN :id AND uuid IN :uuid;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [[6585881171288418304, 3178801643081287680], [00000000-0000-0001-0000-000000000001, 00000000-0000-0003-0000-000000000003]]
	 Encoded bound values : [[6585881171288418304, 3178801643081287680], [00000000-0000-0001-0000-000000000001, 00000000-0000-0003-0000-000000000003]]
13:06:55.120 [achilles-default-executor-167] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[value(varchar)]]
13:06:55.120 [achilles-default-executor-167] DEBUG ACHILLES_DML_STATEMENT - Query ID 37ce259d-dd4b-4a5e-a03c-5e53bd08d406 results : 
	value: val2-1
	value: val2-3
	value: val1-1

13:06:55.121 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_composite_pk
13:06:55.205 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:55.209 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_composite_pk(
		id bigint,
		uuid uuid,
		value text,
		PRIMARY KEY((id, uuid)));

13:06:55.210 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_composite_pk
13:06:55.276 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_composite_pk(id, uuid, value) VALUES(8436845877891875840, 00000000-0000-0001-0000-000000000001, 'val');

13:06:55.277 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID e11e6ecb-6a17-4ea1-bc51-e9ee4d0147f3 : [SELECT id,uuid,value FROM achilles_embedded.entity_composite_pk WHERE id=:id AND uuid=:uuid;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [8436845877891875840, 00000000-0000-0001-0000-000000000001]
	 Encoded bound values : [8436845877891875840, 00000000-0000-0001-0000-000000000001]
13:06:55.278 [achilles-default-executor-168] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), uuid(uuid), value(varchar)]]
13:06:55.278 [achilles-default-executor-168] DEBUG ACHILLES_DML_STATEMENT - Query ID e11e6ecb-6a17-4ea1-bc51-e9ee4d0147f3 results : 
	id: 8436845877891875840, uuid: 00000000-0000-0001-0000-000000000001, value: val

13:06:55.278 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_composite_pk
13:06:55.343 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:06:55.347 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:06:55.352 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
