13:09:34,096 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback-test.xml]
13:09:34,097 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Could NOT find resource [logback.groovy]
13:09:34,097 |-INFO in ch.qos.logback.classic.LoggerContext[default] - Found resource [logback.xml] at [file:/home/ch61/Achilles/integration-test-2_1/target/classes/logback.xml]
13:09:34,097 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs multiple times on the classpath.
13:09:34,097 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs at [file:/home/ch61/Achilles/integration-test-2_1/target/classes/logback.xml]
13:09:34,097 |-WARN in ch.qos.logback.classic.LoggerContext[default] - Resource [logback.xml] occurs at [file:/home/ch61/Achilles/achilles-schema-generator/target/classes/logback.xml]
13:09:34,149 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - debug attribute not set
13:09:34,157 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - Will scan for changes in [file:/home/ch61/Achilles/integration-test-2_1/target/classes/logback.xml] 
13:09:34,157 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - Setting ReconfigureOnChangeTask scanning period to 30 seconds
13:09:34,159 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - About to instantiate appender of type [ch.qos.logback.core.ConsoleAppender]
13:09:34,161 |-INFO in ch.qos.logback.core.joran.action.AppenderAction - Naming appender as [STDOUT]
13:09:34,169 |-INFO in ch.qos.logback.core.joran.action.NestedComplexPropertyIA - Assuming default type [ch.qos.logback.classic.encoder.PatternLayoutEncoder] for [encoder] property
13:09:34,203 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [ACHILLES_DDL_SCRIPT] to DEBUG
13:09:34,203 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [ACHILLES_DDL_SCRIPT] to false
13:09:34,203 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ACHILLES_DDL_SCRIPT]
13:09:34,204 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [ACHILLES_DML_STATEMENT] to DEBUG
13:09:34,204 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [ACHILLES_DML_STATEMENT] to false
13:09:34,204 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ACHILLES_DML_STATEMENT]
13:09:34,204 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [info.archinnov.achilles.embedded] to INFO
13:09:34,204 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [info.archinnov.achilles.embedded] to false
13:09:34,204 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[info.archinnov.achilles.embedded]
13:09:34,204 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [info.archinnov.achilles] to WARN
13:09:34,204 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [info.archinnov.achilles] to false
13:09:34,204 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[info.archinnov.achilles]
13:09:34,204 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [info.archinnov.achilles.internals.cache.StatementsCache] to WARN
13:09:34,204 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [info.archinnov.achilles.internals.cache.StatementsCache] to false
13:09:34,204 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[info.archinnov.achilles.internals.cache.StatementsCache]
13:09:34,204 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [info.archinnov.achilles.internals.entities.SimpleEntity] to TRACE
13:09:34,204 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [info.archinnov.achilles.internals.entities.SimpleEntity] to false
13:09:34,204 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[info.archinnov.achilles.internals.entities.SimpleEntity]
13:09:34,204 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.apache.cassandra.cql3.QueryProcessor] to OFF
13:09:34,204 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [org.apache.cassandra.cql3.QueryProcessor] to false
13:09:34,204 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[org.apache.cassandra.cql3.QueryProcessor]
13:09:34,204 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.apache.cassandra.db.Memtable] to OFF
13:09:34,204 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [org.apache.cassandra.db.Memtable] to false
13:09:34,204 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[org.apache.cassandra.db.Memtable]
13:09:34,204 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.apache.cassandra.utils.CLibrary] to OFF
13:09:34,204 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [org.apache.cassandra.utils.CLibrary] to false
13:09:34,204 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[org.apache.cassandra.utils.CLibrary]
13:09:34,204 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting level of logger [org.apache.cassandra.utils.SigarLibrary] to OFF
13:09:34,204 |-INFO in ch.qos.logback.classic.joran.action.LoggerAction - Setting additivity of logger [org.apache.cassandra.utils.SigarLibrary] to false
13:09:34,204 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[org.apache.cassandra.utils.SigarLibrary]
13:09:34,205 |-INFO in ch.qos.logback.classic.joran.action.LevelAction - ROOT level set to WARN
13:09:34,205 |-INFO in ch.qos.logback.core.joran.action.AppenderRefAction - Attaching appender named [STDOUT] to Logger[ROOT]
13:09:34,205 |-INFO in ch.qos.logback.classic.joran.action.ConfigurationAction - End of configuration.
13:09:34,205 |-INFO in ch.qos.logback.classic.joran.JoranConfigurator@61d47554 - Registering current configuration as safe fallback point

13:09:34.268 [main] INFO  i.a.achilles.embedded.ServerStarter - Using existing data folder for unit tests : /home/ch61/Achilles/target/cassandra_embedded/data
13:09:34.270 [main] INFO  i.a.achilles.embedded.ServerStarter - Using existing data folder for unit tests : /home/ch61/Achilles/target/cassandra_embedded/commitlog
13:09:34.270 [main] INFO  i.a.achilles.embedded.ServerStarter - Using existing data folder for unit tests : /home/ch61/Achilles/target/cassandra_embedded/saved_caches
13:09:34.270 [main] INFO  i.a.achilles.embedded.ServerStarter - Using existing data folder for unit tests : /home/ch61/Achilles/target/cassandra_embedded/hints
13:09:34.270 [main] INFO  i.a.achilles.embedded.ServerStarter - Using existing data folder for unit tests : /home/ch61/Achilles/target/cassandra_embedded/cdc_raw
13:09:34.278 [main] INFO  i.a.achilles.embedded.ServerStarter - Cleaning up embedded Cassandra data directory '/home/ch61/Achilles/target/cassandra_embedded/data'
13:09:34.303 [main] INFO  i.a.achilles.embedded.ServerStarter - Cleaning up embedded Cassandra data directory '/home/ch61/Achilles/target/cassandra_embedded/commitlog'
13:09:34.303 [main] INFO  i.a.achilles.embedded.ServerStarter - Cleaning up embedded Cassandra data directory '/home/ch61/Achilles/target/cassandra_embedded/saved_caches'
13:09:34.357 [main] INFO  i.a.achilles.embedded.ServerStarter -  Cassandra listen address = localhost
13:09:34.358 [main] INFO  i.a.achilles.embedded.ServerStarter -  Cassandra RPC address = localhost
13:09:34.358 [main] INFO  i.a.achilles.embedded.ServerStarter -  Cassandra broadcast address = 
13:09:34.358 [main] INFO  i.a.achilles.embedded.ServerStarter -  Cassandra RPC broadcast address = 
13:09:34.358 [main] INFO  i.a.achilles.embedded.ServerStarter -  Random embedded Cassandra RPC port/Thrift port = 9160
13:09:34.358 [main] INFO  i.a.achilles.embedded.ServerStarter -  Random embedded Cassandra Native port/CQL port = 9042
13:09:34.358 [main] INFO  i.a.achilles.embedded.ServerStarter -  Random embedded Cassandra Storage port = 7079
13:09:34.358 [main] INFO  i.a.achilles.embedded.ServerStarter -  Random embedded Cassandra Storage SSL port = 7828
13:09:34.358 [main] INFO  i.a.achilles.embedded.ServerStarter -  Random embedded Cassandra Remote JMX port = null
13:09:34.358 [main] INFO  i.a.achilles.embedded.ServerStarter -  Embedded Cassandra triggers directory = /home/ch61/Achilles/target/cassandra_embedded/cassandra_triggers
13:09:34.358 [main] INFO  i.a.achilles.embedded.ServerStarter - Starting Cassandra...
13:09:34.668 [pool-2-thread-1] WARN  o.a.c.config.DatabaseDescriptor - Only 40.222GiB free across all data volumes. Consider adding more capacity to your cluster or removing obsolete snapshots
13:09:34.861 [pool-2-thread-1] WARN  o.a.cassandra.utils.NativeLibrary - Unable to lock JVM memory (ENOMEM). This can result in part of the JVM being swapped out, especially with mmapped I/O enabled. Increase RLIMIT_MEMLOCK or run Cassandra as root.
13:09:34.861 [pool-2-thread-1] WARN  o.a.cassandra.service.StartupChecks - jemalloc shared library could not be preloaded to speed up memory allocations
13:09:34.861 [pool-2-thread-1] WARN  o.a.cassandra.service.StartupChecks - JMX is not enabled to receive remote connections. Please see cassandra-env.sh for more info.
13:09:34.862 [pool-2-thread-1] WARN  o.a.cassandra.service.StartupChecks - The JVM is not configured to stop on OutOfMemoryError which can cause data corruption. Use one of the following JVM options to configure the behavior on OutOfMemoryError:  -XX:+ExitOnOutOfMemoryError, -XX:+CrashOnOutOfMemoryError, or -XX:OnOutOfMemoryError="<cmd args>;<cmd args>"
no libsigar-amd64-linux.so in java.library.path
org.hyperic.sigar.SigarException: no libsigar-amd64-linux.so in java.library.path
	at org.hyperic.sigar.Sigar.loadLibrary(Sigar.java:172)
	at org.hyperic.sigar.Sigar.<clinit>(Sigar.java:100)
	at org.apache.cassandra.utils.SigarLibrary.<init>(SigarLibrary.java:47)
	at org.apache.cassandra.utils.SigarLibrary.<clinit>(SigarLibrary.java:28)
	at org.apache.cassandra.service.StartupChecks$7.execute(StartupChecks.java:266)
	at org.apache.cassandra.service.StartupChecks.verify(StartupChecks.java:125)
	at org.apache.cassandra.service.CassandraDaemon.setup(CassandraDaemon.java:216)
	at org.apache.cassandra.service.CassandraDaemon.activate(CassandraDaemon.java:633)
	at info.archinnov.achilles.embedded.ServerStarter.lambda$start$0(ServerStarter.java:163)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
13:09:34.892 [pool-2-thread-1] WARN  o.a.cassandra.service.StartupChecks - Maximum number of memory map areas per process (vm.max_map_count) 65530 is too low, recommended value: 1048575, you can change it with sysctl.
13:09:37.879 [pool-2-thread-1] WARN  o.apache.cassandra.db.SystemKeyspace - No host ID found, created aab0912c-d938-463d-8d3d-40cbeb750321 (Note: This should happen exactly once per node).
13:09:40.456 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:40.980 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.complex_tuple(
		id bigint,
		tuple frozen<tuple<int, map<int, list<text>>>>,
		PRIMARY KEY(id));

13:09:41.560 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:41.569 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:41.676 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_native_collections(
		id bigint,
		doublelist list<double>,
		longlist list<bigint>,
		mapintlong map<int, bigint>,
		tuple2 frozen<tuple<list<int>, list<double>>>,
		PRIMARY KEY(id));

13:09:41.938 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_native_collections
13:09:42.073 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 4cf9db82-51d4-4b6b-88fd-0d94531300e8 : [INSERT INTO achilles_embedded.entity_with_native_collections (id,doublelist,longlist,mapintlong,tuple2) VALUES (:id,:doublelist,:longlist,:mapintlong,:tuple2) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [2909793831564681216, [1.0, 2.0], [1, 2], {1=1, 2=2}, Tuple2{_1=[1, 2], _2=[1.0, 2.0]}, 0]
	 Encoded bound values : [2909793831564681216, [1.0, 2.0], [1, 2], {1=1, 2=2}, ([1,2],[1.0,2.0]), 0]
13:09:42.145 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_native_collections
13:09:42.213 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:42.221 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:42.315 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:42.414 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:09:42.587 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:09:42.835 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:09:42.993 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:09:43.264 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:09:43.333 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO new_ks.entity_with_udts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(8061987383011376128, [{id: 8061987383011376128, value: 'val'}], {{id: 8061987383011376128, value: 'val'}: {id: 8061987383011376128, value: 'val'}}, {id: 8061987383011376128, value: 'val'}, {{id: 8061987383011376128, value: 'val'}}, (1, {id: 8061987383011376128, value: 'val'}));

13:09:43.343 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID cc07821d-e05a-4f68-977d-63fa230b1295 : [SELECT id,listudt,mapudt,optionaludt,setudt,tupleudt FROM new_ks.entity_with_udts WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [8061987383011376128]
	 Encoded bound values : [8061987383011376128]
13:09:43.349 [achilles-default-executor-2] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), listudt(list<new_ks.udt_no_ks>), mapudt(map<new_ks.udt_no_ks, new_ks.udt_no_ks>), optionaludt(new_ks.udt_no_ks), setudt(set<new_ks.udt_no_ks>), tupleudt(frozen<tuple<int, udt_no_ks>>)]]
13:09:43.355 [achilles-default-executor-2] DEBUG ACHILLES_DML_STATEMENT - Query ID cc07821d-e05a-4f68-977d-63fa230b1295 results : 
	id: 8061987383011376128, listudt: [{id:8061987383011376128,value:'val'}], mapudt: {{id:8061987383011376128,value:'val'}={id:8061987383011376128,value:'val'}}, optionaludt: {id:8061987383011376128,value:'val'}, setudt: [{id:8061987383011376128,value:'val'}], tupleudt: (1,{id:8061987383011376128,value:'val'})

13:09:43.362 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:09:43.426 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:43.428 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:43.430 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:43.431 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:09:43.432 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:09:43.442 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:09:43.444 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:09:43.452 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:09:43.523 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO overriden_schema_name.entitywithudts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(6781994241288020992, [{id: 6781994241288020992, value: 'val'}], {{id: 6781994241288020992, value: 'val'}: {id: 6781994241288020992, value: 'val'}}, {id: 6781994241288020992, value: 'val'}, {{id: 6781994241288020992, value: 'val'}}, (1, {id: 6781994241288020992, value: 'val'}));

13:09:43.538 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID e14bfb9e-e91e-42de-b4dc-ebb83d7eb56d : [DELETE FROM overriden_schema_name.entitywithudts WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [6781994241288020992]
	 Encoded bound values : [6781994241288020992]
13:09:43.546 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:09:43.614 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:43.617 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:43.618 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:43.619 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:09:43.620 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:09:43.629 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:09:43.631 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:09:43.633 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:09:43.711 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 1869ef98-dc05-43f6-97dc-b21ed622d4e9 : [INSERT INTO new_ks.entity_with_udts (id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES (:id,:listudt,:mapudt,:optionaludt,:setudt,:tupleudt) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [344846127464116224, [info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@d7186e49], {info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@d7186e49=info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@d7186e49}, Optional[info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@d7186e49], [info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@d7186e49], Tuple2{_1=1, _2=info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@d7186e49}, 0]
	 Encoded bound values : [344846127464116224, [{id:344846127464116224,value:'val'}], {{id:344846127464116224,value:'val'}={id:344846127464116224,value:'val'}}, {id:344846127464116224,value:'val'}, [{id:344846127464116224,value:'val'}], (1,{id:344846127464116224,value:'val'}), 0]
13:09:43.722 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:09:43.789 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:43.791 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:43.793 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:43.794 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:09:43.794 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:09:43.802 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:09:43.805 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:09:43.807 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:09:43.872 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO new_ks.entity_with_udts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(4500063342212823040, [{id: 4500063342212823040, value: 'val'}], {{id: 4500063342212823040, value: 'val'}: {id: 4500063342212823040, value: 'val'}}, {id: 4500063342212823040, value: 'val'}, {{id: 4500063342212823040, value: 'val'}}, (1, {id: 4500063342212823040, value: 'val'}));

13:09:43.879 [Achilles Embedded Cassandra Cluster-worker-1] WARN  com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='DELETE FROM new_ks.entity_with_udts WHERE id=:id;'
13:09:43.880 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 2f0f72b3-136e-4ff7-b09d-a422a1fe4576 : [DELETE FROM new_ks.entity_with_udts WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [4500063342212823040]
	 Encoded bound values : [4500063342212823040]
13:09:43.884 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:09:43.957 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:43.959 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:43.960 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:43.961 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:09:43.962 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:09:43.970 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:09:43.972 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:09:43.974 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:09:44.050 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO overriden_schema_name.entitywithudts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(3494894885681605632, [{id: 3494894885681605632, value: 'val'}], {{id: 3494894885681605632, value: 'val'}: {id: 3494894885681605632, value: 'val'}}, {id: 3494894885681605632, value: 'val'}, {{id: 3494894885681605632, value: 'val'}}, (1, {id: 3494894885681605632, value: 'val'}));

13:09:44.058 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID dafd8a28-75f4-4962-8fe7-ecdf936a4f71 : [SELECT * FROM overriden_schema_name.entitywithudts WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [3494894885681605632]
	 Encoded bound values : [3494894885681605632]
13:09:44.066 [achilles-default-executor-6] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), listudt(list<overriden_schema_name.udt_no_ks>), mapudt(map<overriden_schema_name.udt_no_ks, overriden_schema_name.udt_no_ks>), optionaludt(overriden_schema_name.udt_no_ks), setudt(set<overriden_schema_name.udt_no_ks>), tupleudt(frozen<tuple<int, udt_no_ks>>)]]
13:09:44.067 [achilles-default-executor-6] DEBUG ACHILLES_DML_STATEMENT - Query ID dafd8a28-75f4-4962-8fe7-ecdf936a4f71 results : 
	id: 3494894885681605632, listudt: [{id:3494894885681605632,value:'val'}], mapudt: {{id:3494894885681605632,value:'val'}={id:3494894885681605632,value:'val'}}, optionaludt: {id:3494894885681605632,value:'val'}, setudt: [{id:3494894885681605632,value:'val'}], tupleudt: (1,{id:3494894885681605632,value:'val'})

13:09:44.072 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:09:44.137 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:44.139 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:44.140 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:44.141 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:09:44.142 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:09:44.151 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:09:44.153 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:09:44.156 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:09:44.235 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO new_ks.entity_with_udts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(5788030004417150976, [{id: 5788030004417150976, value: 'val'}], {{id: 5788030004417150976, value: 'val'}: {id: 5788030004417150976, value: 'val'}}, {id: 5788030004417150976, value: 'val'}, {{id: 5788030004417150976, value: 'val'}}, (1, {id: 5788030004417150976, value: 'val'}));

13:09:44.257 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID b446df23-bb36-4f21-b480-e395f336ff21 : [DELETE FROM new_ks.entity_with_udts WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [5788030004417150976]
	 Encoded bound values : [5788030004417150976]
13:09:44.272 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:09:44.338 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:44.340 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:44.341 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:44.342 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:09:44.343 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:09:44.350 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:09:44.352 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:09:44.354 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:09:44.422 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID a11909e4-d84e-4882-a0c2-c768911686e2 : [INSERT INTO overriden_schema_name.entitywithudts (id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES (:id,:listudt,:mapudt,:optionaludt,:setudt,:tupleudt) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [761679070391409664, [info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@659f924e], {info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@659f924e=info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@659f924e}, Optional[info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@659f924e], [info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@659f924e], Tuple2{_1=1, _2=info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@659f924e}, 0]
	 Encoded bound values : [761679070391409664, [{id:761679070391409664,value:'val'}], {{id:761679070391409664,value:'val'}={id:761679070391409664,value:'val'}}, {id:761679070391409664,value:'val'}, [{id:761679070391409664,value:'val'}], (1,{id:761679070391409664,value:'val'}), 0]
13:09:44.427 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:09:44.503 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:44.505 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:44.506 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:44.507 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:09:44.508 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:09:44.516 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:09:44.519 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:09:44.523 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:09:44.594 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO overriden_schema_name.entitywithudts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(5340209863966047232, [{id: 5340209863966047232, value: 'val'}], {{id: 5340209863966047232, value: 'val'}: {id: 5340209863966047232, value: 'val'}}, {id: 5340209863966047232, value: 'val'}, {{id: 5340209863966047232, value: 'val'}}, (1, {id: 5340209863966047232, value: 'val'}));

13:09:44.606 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID dac62f7f-ed8d-4cff-9021-45284466b230 : [UPDATE overriden_schema_name.entitywithudts SET optionaludt=:optionaludt WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [Optional[info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@8d496590], 5340209863966047232]
	 Encoded bound values : [{id:5340209863966047232,value:'new_val'}, 5340209863966047232]
13:09:44.613 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:09:44.678 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:44.680 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:44.681 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:44.682 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:09:44.683 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:09:44.692 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:09:44.693 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:09:44.695 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:09:44.767 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO new_ks.entity_with_udts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(3467524797674877952, [{id: 3467524797674877952, value: 'val'}], {{id: 3467524797674877952, value: 'val'}: {id: 3467524797674877952, value: 'val'}}, {id: 3467524797674877952, value: 'val'}, {{id: 3467524797674877952, value: 'val'}}, (1, {id: 3467524797674877952, value: 'val'}));

13:09:44.772 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID baa700c4-09b4-439f-b217-47b8e8aa58c0 : [UPDATE new_ks.entity_with_udts SET optionaludt=:optionaludt WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [Optional[info.archinnov.achilles.internals.entities.SimpleUDTWithNoKeyspace@a2225615], 3467524797674877952]
	 Encoded bound values : [{id:3467524797674877952,value:'new_val'}, 3467524797674877952]
13:09:44.775 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:09:44.848 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:44.850 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:44.851 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:44.852 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:09:44.853 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:09:44.861 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:09:44.863 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:09:44.865 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:09:44.931 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO overriden_schema_name.entitywithudts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(3486980491744068608, [{id: 3486980491744068608, value: 'val'}], {{id: 3486980491744068608, value: 'val'}: {id: 3486980491744068608, value: 'val'}}, {id: 3486980491744068608, value: 'val'}, {{id: 3486980491744068608, value: 'val'}}, (1, {id: 3486980491744068608, value: 'val'}));

13:09:44.940 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID cbd0bda7-7ba8-4c3d-97c9-b8b5b11bcff4 : [SELECT id,listudt,mapudt,optionaludt,setudt,tupleudt FROM overriden_schema_name.entitywithudts WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [3486980491744068608]
	 Encoded bound values : [3486980491744068608]
13:09:44.945 [achilles-default-executor-11] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), listudt(list<overriden_schema_name.udt_no_ks>), mapudt(map<overriden_schema_name.udt_no_ks, overriden_schema_name.udt_no_ks>), optionaludt(overriden_schema_name.udt_no_ks), setudt(set<overriden_schema_name.udt_no_ks>), tupleudt(frozen<tuple<int, udt_no_ks>>)]]
13:09:44.945 [achilles-default-executor-11] DEBUG ACHILLES_DML_STATEMENT - Query ID cbd0bda7-7ba8-4c3d-97c9-b8b5b11bcff4 results : 
	id: 3486980491744068608, listudt: [{id:3486980491744068608,value:'val'}], mapudt: {{id:3486980491744068608,value:'val'}={id:3486980491744068608,value:'val'}}, optionaludt: {id:3486980491744068608,value:'val'}, setudt: [{id:3486980491744068608,value:'val'}], tupleudt: (1,{id:3486980491744068608,value:'val'})

13:09:44.953 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:09:45.025 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:45.027 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:45.027 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:45.028 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:09:45.029 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:09:45.036 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:09:45.038 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:09:45.040 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:09:45.116 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO new_ks.entity_with_udts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(2153583594955868160, [{id: 2153583594955868160, value: 'val'}], {{id: 2153583594955868160, value: 'val'}: {id: 2153583594955868160, value: 'val'}}, {id: 2153583594955868160, value: 'val'}, {{id: 2153583594955868160, value: 'val'}}, (1, {id: 2153583594955868160, value: 'val'}));

13:09:45.122 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 302aa0a1-bdfe-4240-a929-347a58ecba05 : [SELECT * FROM new_ks.entity_with_udts WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [2153583594955868160]
	 Encoded bound values : [2153583594955868160]
13:09:45.127 [achilles-default-executor-12] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), listudt(list<new_ks.udt_no_ks>), mapudt(map<new_ks.udt_no_ks, new_ks.udt_no_ks>), optionaludt(new_ks.udt_no_ks), setudt(set<new_ks.udt_no_ks>), tupleudt(frozen<tuple<int, udt_no_ks>>)]]
13:09:45.128 [achilles-default-executor-12] DEBUG ACHILLES_DML_STATEMENT - Query ID 302aa0a1-bdfe-4240-a929-347a58ecba05 results : 
	id: 2153583594955868160, listudt: [{id:2153583594955868160,value:'val'}], mapudt: {{id:2153583594955868160,value:'val'}={id:2153583594955868160,value:'val'}}, optionaludt: {id:2153583594955868160,value:'val'}, setudt: [{id:2153583594955868160,value:'val'}], tupleudt: (1,{id:2153583594955868160,value:'val'})

13:09:45.129 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:09:45.194 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:45.196 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS new_ks WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:45.197 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS overriden_schema_name WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:45.198 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS overriden_schema_name.udt_no_ks( id bigint, value text);

13:09:45.199 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS overriden_schema_name.entitywithudts( id bigint, listudt list<frozen<udt_no_ks>>, mapudt map<frozen<udt_no_ks>, frozen<udt_no_ks>>, optionaludt udt_no_ks, setudt set<frozen<udt_no_ks>>, tupleudt frozen<tuple<int, udt_no_ks>>, PRIMARY KEY(id));

13:09:45.207 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS new_ks.udt_no_ks(
		id bigint,
		value text);

13:09:45.209 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS new_ks.entity_with_udts(
		id bigint,
		listudt list<frozen<new_ks.udt_no_ks>>,
		mapudt map<frozen<new_ks.udt_no_ks>, frozen<new_ks.udt_no_ks>>,
		optionaludt new_ks.udt_no_ks,
		setudt set<frozen<new_ks.udt_no_ks>>,
		tupleudt frozen<tuple<int, udt_no_ks>>,
		PRIMARY KEY(id));

13:09:45.211 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:09:45.281 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO overriden_schema_name.entitywithudts(id,listudt,mapudt,optionaludt,setudt,tupleudt) VALUES(1954056053121702912, [{id: 1954056053121702912, value: 'val'}], {{id: 1954056053121702912, value: 'val'}: {id: 1954056053121702912, value: 'val'}}, {id: 1954056053121702912, value: 'val'}, {{id: 1954056053121702912, value: 'val'}}, (1, {id: 1954056053121702912, value: 'val'}));

13:09:45.283 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID f652f1b3-7a60-484e-80a7-ccc190f6471e : [DELETE FROM overriden_schema_name.entitywithudts WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [1954056053121702912]
	 Encoded bound values : [1954056053121702912]
13:09:45.286 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE new_ks.entity_with_udts
13:09:45.361 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:45.373 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:45.523 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_case_sensitive_pk(
		"partitionKey" bigint,
		"clusteringColumn" bigint,
		priority int,
		"listString" list<text>,
		"mapIntString" map<int, text>,
		"setString" set<text>,
		"udtWithNoKeyspace" frozen<achilles_embedded.no_ks>,
		PRIMARY KEY("partitionKey", "clusteringColumn", priority))
	WITH CLUSTERING ORDER BY("clusteringColumn" ASC, priority ASC);

13:09:45.771 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:09:45.850 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID c876895c-5882-4d3d-8434-192dacc2236f : [INSERT INTO achilles_embedded.entity_with_case_sensitive_pk ("partitionKey","clusteringColumn",priority,"listString","mapIntString","setString","udtWithNoKeyspace") VALUES (:"partitionKey",:"clusteringColumn",:priority,:"listString",:"mapIntString",:"setString",:"udtWithNoKeyspace") USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [6392574596367733760, 1365706049957258240, 1, null, null, null, null, 0]
	 Encoded bound values : [6392574596367733760, 1365706049957258240, 1, null, null, null, null, 0]
13:09:45.855 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 35b3dd04-8d02-4a1a-9f50-3a0accc39432 : [DELETE FROM achilles_embedded.entity_with_case_sensitive_pk WHERE "partitionKey"=:"partitionKey" AND "clusteringColumn"=:"clusteringColumn" AND priority=:priority;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [6392574596367733760, 1365706049957258240, 1]
	 Encoded bound values : [6392574596367733760, 1365706049957258240, 1]
13:09:45.861 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 10de2c66-d6e8-49b6-b59f-7c9723c1431a : [SELECT "partitionKey","clusteringColumn",priority,"listString","mapIntString","setString","udtWithNoKeyspace" FROM achilles_embedded.entity_with_case_sensitive_pk WHERE "partitionKey"=:"partitionKey" AND "clusteringColumn"=:"clusteringColumn" AND priority=:priority;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [6392574596367733760, 1365706049957258240, 1]
	 Encoded bound values : [6392574596367733760, 1365706049957258240, 1]
13:09:45.864 [achilles-default-executor-16] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: true, Columns[partitionKey(bigint), clusteringColumn(bigint), priority(int), listString(list<varchar>), mapIntString(map<int, varchar>), setString(set<varchar>), udtWithNoKeyspace(achilles_embedded.no_ks)]]
13:09:45.864 [achilles-default-executor-16] DEBUG ACHILLES_DML_STATEMENT - Query ID 10de2c66-d6e8-49b6-b59f-7c9723c1431a results : 

13:09:45.864 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:09:45.937 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:45.944 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:45.946 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_case_sensitive_pk(
		"partitionKey" bigint,
		"clusteringColumn" bigint,
		priority int,
		"listString" list<text>,
		"mapIntString" map<int, text>,
		"setString" set<text>,
		"udtWithNoKeyspace" frozen<achilles_embedded.no_ks>,
		PRIMARY KEY("partitionKey", "clusteringColumn", priority))
	WITH CLUSTERING ORDER BY("clusteringColumn" ASC, priority ASC);

13:09:45.947 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:09:46.017 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_case_sensitive_pk("partitionKey", "clusteringColumn", priority, "listString", "setString", "mapIntString", "udtWithNoKeyspace") VALUES (6093818740315898880, 10, 1, ['1', '2'], {'1', '2'}, {1: '1', 2: '2'}, {id: 1, "VALUE": 'test'});

13:09:46.030 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 7ad44f6c-633f-4fb7-8197-62370b9fa091 : [UPDATE achilles_embedded.entity_with_case_sensitive_pk SET "listString"="listString"+:"listString","mapIntString"[:map_key]=:map_value WHERE "partitionKey"=:"partitionKey" AND "clusteringColumn"=:"clusteringColumn" AND priority=:priority;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [[3], 3, 3, 6093818740315898880, 10, 1]
	 Encoded bound values : [[3], 3, 3, 6093818740315898880, 10, 1]
13:09:46.033 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 0a91c77b-09f9-4821-8aad-48e6be0d567d : [SELECT "partitionKey","clusteringColumn",priority,"listString","mapIntString","setString","udtWithNoKeyspace" FROM achilles_embedded.entity_with_case_sensitive_pk WHERE "partitionKey"=:"partitionKey" AND "clusteringColumn"=:"clusteringColumn" AND priority=:priority;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [6093818740315898880, 10, 1]
	 Encoded bound values : [6093818740315898880, 10, 1]
13:09:46.039 [achilles-default-executor-18] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[partitionKey(bigint), clusteringColumn(bigint), priority(int), listString(list<varchar>), mapIntString(map<int, varchar>), setString(set<varchar>), udtWithNoKeyspace(achilles_embedded.no_ks)]]
13:09:46.042 [achilles-default-executor-18] DEBUG ACHILLES_DML_STATEMENT - Query ID 0a91c77b-09f9-4821-8aad-48e6be0d567d results : 
	partitionKey: 6093818740315898880, clusteringColumn: 10, priority: 1, listString: [1, 2, 3], mapIntString: {1=1, 2=2, 3=3}, setString: [1, 2], udtWithNoKeyspace: {id:1,"VALUE":'test'}

13:09:46.053 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:09:46.118 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:46.128 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:46.130 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_case_sensitive_pk(
		"partitionKey" bigint,
		"clusteringColumn" bigint,
		priority int,
		"listString" list<text>,
		"mapIntString" map<int, text>,
		"setString" set<text>,
		"udtWithNoKeyspace" frozen<achilles_embedded.no_ks>,
		PRIMARY KEY("partitionKey", "clusteringColumn", priority))
	WITH CLUSTERING ORDER BY("clusteringColumn" ASC, priority ASC);

13:09:46.132 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:09:46.215 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 2ff9552b-6263-424d-8e19-ce2cbbb90c12 : [INSERT INTO achilles_embedded.entity_with_case_sensitive_pk ("partitionKey","clusteringColumn",priority,"listString","mapIntString","setString","udtWithNoKeyspace") VALUES (:"partitionKey",:"clusteringColumn",:priority,:"listString",:"mapIntString",:"setString",:"udtWithNoKeyspace") USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [1846796429527725056, 1684893231121132544, 1, [1, 2], {1=1, 2=2}, [1, 2], info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@fef4a2e2, 0]
	 Encoded bound values : [1846796429527725056, 1684893231121132544, 1, [1, 2], {1=1, 2=2}, [1, 2], {id:1846796429527725056,"VALUE":'test'}, 0]
13:09:46.219 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 9c4ed7f6-61cc-4a38-9c59-8970968ed19d : [SELECT "partitionKey","clusteringColumn",priority,"listString","mapIntString","setString","udtWithNoKeyspace" FROM achilles_embedded.entity_with_case_sensitive_pk WHERE "partitionKey"=:"partitionKey" AND "clusteringColumn"=:"clusteringColumn" AND priority=:priority;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [1846796429527725056, 1684893231121132544, 1]
	 Encoded bound values : [1846796429527725056, 1684893231121132544, 1]
13:09:46.228 [achilles-default-executor-20] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[partitionKey(bigint), clusteringColumn(bigint), priority(int), listString(list<varchar>), mapIntString(map<int, varchar>), setString(set<varchar>), udtWithNoKeyspace(achilles_embedded.no_ks)]]
13:09:46.229 [achilles-default-executor-20] DEBUG ACHILLES_DML_STATEMENT - Query ID 9c4ed7f6-61cc-4a38-9c59-8970968ed19d results : 
	partitionKey: 1846796429527725056, clusteringColumn: 1684893231121132544, priority: 1, listString: [1, 2], mapIntString: {1=1, 2=2}, setString: [1, 2], udtWithNoKeyspace: {id:1846796429527725056,"VALUE":'test'}

13:09:46.232 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:09:46.298 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:46.306 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:46.308 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_case_sensitive_pk(
		"partitionKey" bigint,
		"clusteringColumn" bigint,
		priority int,
		"listString" list<text>,
		"mapIntString" map<int, text>,
		"setString" set<text>,
		"udtWithNoKeyspace" frozen<achilles_embedded.no_ks>,
		PRIMARY KEY("partitionKey", "clusteringColumn", priority))
	WITH CLUSTERING ORDER BY("clusteringColumn" ASC, priority ASC);

13:09:46.310 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:09:46.385 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_case_sensitive_pk("partitionKey", "clusteringColumn", priority, "listString", "setString", "mapIntString", "udtWithNoKeyspace") VALUES (4049540741614877696, 10, 1, ['1', '2'], {'1', '2'}, {1: '1', 2: '2'}, {id: 1, "VALUE": 'test'});

13:09:46.400 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 00cd7443-1507-45a5-b72b-7430f344402d : [SELECT "listString","setString","mapIntString","udtWithNoKeyspace" FROM achilles_embedded.entity_with_case_sensitive_pk WHERE "partitionKey"=:"partitionKey";] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [4049540741614877696]
	 Encoded bound values : [4049540741614877696]
13:09:46.401 [achilles-default-executor-21] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[listString(list<varchar>), setString(set<varchar>), mapIntString(map<int, varchar>), udtWithNoKeyspace(achilles_embedded.no_ks)]]
13:09:46.402 [achilles-default-executor-21] DEBUG ACHILLES_DML_STATEMENT - Query ID 00cd7443-1507-45a5-b72b-7430f344402d results : 
	listString: [1, 2], setString: [1, 2], mapIntString: {1=1, 2=2}, udtWithNoKeyspace: {id:1,"VALUE":'test'}

13:09:46.403 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:09:46.478 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:46.486 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:46.487 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_case_sensitive_pk(
		"partitionKey" bigint,
		"clusteringColumn" bigint,
		priority int,
		"listString" list<text>,
		"mapIntString" map<int, text>,
		"setString" set<text>,
		"udtWithNoKeyspace" frozen<achilles_embedded.no_ks>,
		PRIMARY KEY("partitionKey", "clusteringColumn", priority))
	WITH CLUSTERING ORDER BY("clusteringColumn" ASC, priority ASC);

13:09:46.489 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:09:46.561 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_case_sensitive_pk("partitionKey", "clusteringColumn", priority, "listString", "setString", "mapIntString", "udtWithNoKeyspace") VALUES (249551039165212672, 10, 1, ['1', '2'], {'1', '2'}, {1: '1', 2: '2'}, {id: 1, "VALUE": 'test'});

13:09:46.568 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 3dd6e6d7-c4d8-4d6c-9d8d-e582429d6f26 : [SELECT "listString","setString","mapIntString","udtWithNoKeyspace" FROM achilles_embedded.entity_with_case_sensitive_pk WHERE token("partitionKey")>:tokenValue;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [-9223372036854775808]
	 Encoded bound values : [-9223372036854775808]
13:09:46.578 [achilles-default-executor-22] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[listString(list<varchar>), setString(set<varchar>), mapIntString(map<int, varchar>), udtWithNoKeyspace(achilles_embedded.no_ks)]]
13:09:46.578 [achilles-default-executor-22] DEBUG ACHILLES_DML_STATEMENT - Query ID 3dd6e6d7-c4d8-4d6c-9d8d-e582429d6f26 results : 
	listString: [1, 2], setString: [1, 2], mapIntString: {1=1, 2=2}, udtWithNoKeyspace: {id:1,"VALUE":'test'}

13:09:46.581 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:09:46.644 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:46.653 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:46.655 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_case_sensitive_pk(
		"partitionKey" bigint,
		"clusteringColumn" bigint,
		priority int,
		"listString" list<text>,
		"mapIntString" map<int, text>,
		"setString" set<text>,
		"udtWithNoKeyspace" frozen<achilles_embedded.no_ks>,
		PRIMARY KEY("partitionKey", "clusteringColumn", priority))
	WITH CLUSTERING ORDER BY("clusteringColumn" ASC, priority ASC);

13:09:46.657 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:09:46.732 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_case_sensitive_pk("partitionKey", "clusteringColumn", priority, "listString", "setString", "mapIntString", "udtWithNoKeyspace") VALUES (7883590474683555840, 10, 1, ['1', '2'], {'1', '2'}, {1: '1', 2: '2'}, {id: 1, "VALUE": 'test'});

13:09:46.741 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 2e5ae984-73f6-4660-9433-77fdb7ad9ef6 : [DELETE "listString","mapIntString","setString","udtWithNoKeyspace" FROM achilles_embedded.entity_with_case_sensitive_pk WHERE "partitionKey"=:"partitionKey" AND "clusteringColumn"=:"clusteringColumn" AND priority=:priority;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [7883590474683555840, 10, 1]
	 Encoded bound values : [7883590474683555840, 10, 1]
13:09:46.743 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 6246f439-5b8c-43f5-95af-d80252d73840 : [SELECT "partitionKey","clusteringColumn",priority,"listString","mapIntString","setString","udtWithNoKeyspace" FROM achilles_embedded.entity_with_case_sensitive_pk WHERE "partitionKey"=:"partitionKey" AND "clusteringColumn"=:"clusteringColumn" AND priority=:priority;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [7883590474683555840, 10, 1]
	 Encoded bound values : [7883590474683555840, 10, 1]
13:09:46.746 [achilles-default-executor-24] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[partitionKey(bigint), clusteringColumn(bigint), priority(int), listString(list<varchar>), mapIntString(map<int, varchar>), setString(set<varchar>), udtWithNoKeyspace(achilles_embedded.no_ks)]]
13:09:46.746 [achilles-default-executor-24] DEBUG ACHILLES_DML_STATEMENT - Query ID 6246f439-5b8c-43f5-95af-d80252d73840 results : 
	partitionKey: 7883590474683555840, clusteringColumn: 10, priority: 1, listString: [], mapIntString: {}, setString: [], udtWithNoKeyspace: null

13:09:46.747 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:09:46.812 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:46.818 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:46.820 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_case_sensitive_pk(
		"partitionKey" bigint,
		"clusteringColumn" bigint,
		priority int,
		"listString" list<text>,
		"mapIntString" map<int, text>,
		"setString" set<text>,
		"udtWithNoKeyspace" frozen<achilles_embedded.no_ks>,
		PRIMARY KEY("partitionKey", "clusteringColumn", priority))
	WITH CLUSTERING ORDER BY("clusteringColumn" ASC, priority ASC);

13:09:46.821 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:09:46.885 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_case_sensitive_pk("partitionKey", "clusteringColumn", priority, "listString", "setString", "mapIntString", "udtWithNoKeyspace") VALUES (7027755720886500352, 10, 1, ['1', '2'], {'1', '2'}, {1: '1', 2: '2'}, {id: 1, "VALUE": 'test'});

13:09:46.896 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID ade48b53-fa5d-4257-b927-bde2c15ffcfa : [SELECT "listString","setString","mapIntString","udtWithNoKeyspace" FROM achilles_embedded.entity_with_case_sensitive_pk WHERE "partitionKey"=:"partitionKey" AND ("clusteringColumn",priority)>=(:"clusteringColumn",:priority) AND ("clusteringColumn",priority)<=(:"clusteringColumn",:priority);] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [7027755720886500352, 9, 1, 11, 1]
	 Encoded bound values : [7027755720886500352, 9, 1, 11, 1]
13:09:46.899 [achilles-default-executor-25] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[listString(list<varchar>), setString(set<varchar>), mapIntString(map<int, varchar>), udtWithNoKeyspace(achilles_embedded.no_ks)]]
13:09:46.901 [achilles-default-executor-25] DEBUG ACHILLES_DML_STATEMENT - Query ID ade48b53-fa5d-4257-b927-bde2c15ffcfa results : 
	listString: [1, 2], setString: [1, 2], mapIntString: {1=1, 2=2}, udtWithNoKeyspace: {id:1,"VALUE":'test'}

13:09:46.901 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_case_sensitive_pk
13:09:46.982 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:46.989 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_counter(
		id bigint,
		count counter,
		PRIMARY KEY(id));

13:09:47.231 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_counter
13:09:47.310 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 3ce8607d-f084-46c5-95f5-a55d1e18affd : [UPDATE achilles_embedded.entity_counter SET count=count+:count WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [4328330927033131008, 9162791821188108288]
	 Encoded bound values : [4328330927033131008, 9162791821188108288]
13:09:47.347 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_counter
13:09:47.410 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:47.417 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_counter(
		id bigint,
		count counter,
		PRIMARY KEY(id));

13:09:47.419 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_counter
13:09:47.497 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID d730dbe0-fb3c-432a-b4ad-3a4bee4cf367 : [DELETE FROM achilles_embedded.entity_counter WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [8666258043309368320]
	 Encoded bound values : [8666258043309368320]
13:09:47.502 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_counter
13:09:47.579 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:47.586 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_counter(
		id bigint,
		count counter,
		PRIMARY KEY(id));

13:09:47.588 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_counter
13:09:47.651 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : UPDATE achilles_embedded.entity_counter SET count = count + 3223269064094807040 WHERE id = 1552673856012132352;

13:09:47.656 [Achilles Embedded Cassandra Cluster-worker-0] WARN  com.datastax.driver.core.Cluster - Re-preparing already prepared query is generally an anti-pattern and will likely affect performance. Consider preparing the statement only once. Query='DELETE FROM achilles_embedded.entity_counter WHERE id=:id;'
13:09:47.656 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID dae5bdc5-a4f7-4a61-8845-c54dd174dcd9 : [DELETE FROM achilles_embedded.entity_counter WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [1552673856012132352]
	 Encoded bound values : [1552673856012132352]
13:09:47.659 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_counter
13:09:47.738 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:47.744 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_counter(
		id bigint,
		count counter,
		PRIMARY KEY(id));

13:09:47.746 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_counter
13:09:47.819 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : UPDATE achilles_embedded.entity_counter SET count = count + 5844133186406749184 WHERE id = 7705817801442596864;

13:09:47.822 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 132510c3-e2b5-4bc4-8aa3-2659f24578eb : [DELETE FROM achilles_embedded.entity_counter WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [7705817801442596864]
	 Encoded bound values : [7705817801442596864]
13:09:47.826 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_counter
13:09:47.889 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:47.895 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_counter(
		id bigint,
		count counter,
		PRIMARY KEY(id));

13:09:47.897 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_counter
13:09:47.977 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : UPDATE achilles_embedded.entity_counter SET count = count + 6435284918332531712 WHERE id = 6116059486751423488;

13:09:47.979 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID d1914a3b-861c-44dd-8c3f-cf932e44c125 : [SELECT id,count FROM achilles_embedded.entity_counter WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [6116059486751423488]
	 Encoded bound values : [6116059486751423488]
13:09:47.980 [achilles-default-executor-30] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), count(counter)]]
13:09:47.980 [achilles-default-executor-30] DEBUG ACHILLES_DML_STATEMENT - Query ID d1914a3b-861c-44dd-8c3f-cf932e44c125 results : 
	id: 6116059486751423488, count: 6435284918332531712

13:09:47.981 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_counter
13:09:48.048 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:48.057 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:09:48.299 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:09:48.362 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS achilles_embedded.simple_delete_with_schema_name( id bigint, date timestamp, consistencylist list<text>, simplemap map<int, text>, simpleset set<double>, value text, PRIMARY KEY(id, date)) WITH CLUSTERING ORDER BY(date ASC);

13:09:48.592 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple_delete_with_schema_name(id, date, consistencylist, simpleset, simplemap, value) VALUES(1699715940462859264, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:09:48.603 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 49619203-3777-4772-a981-3df03ca6ca75 : [DELETE FROM achilles_embedded.simple_delete_with_schema_name WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [1699715940462859264, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [1699715940462859264, Wed Sep 30 19:00:00 CDT 2015]
13:09:48.624 [achilles-default-executor-31] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 49619203-3777-4772-a981-3df03ca6ca75 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 4536                     | Native-Transport-Requests-2
Adding to simple_delete_with_schema_name memtable                                | /127.0.0.1       | 5262                     | MutationStage-4     
****************************


13:09:48.626 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:48.633 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:09:48.635 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:09:48.709 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 5116094c-649d-4a1d-9f02-55581b7e3f37 : [INSERT INTO achilles_embedded.simple (id,date,consistencylist,simplemap,simpleset,value) VALUES (:id,:date,:consistencylist,:simplemap,:simpleset,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [2243849743262944256, Wed Sep 30 19:00:00 CDT 2015, null, null, null, value, 1]
	 Encoded bound values : [2243849743262944256, Wed Sep 30 19:00:00 CDT 2015, null, null, null, value, 1]
13:09:48.715 [achilles-default-executor-32] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 5116094c-649d-4a1d-9f02-55581b7e3f37 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 400                      | Native-Transport-Requests-2
Adding to simple memtable                                                        | /127.0.0.1       | 669                      | MutationStage-3     
****************************


13:09:49.719 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:49.725 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:09:49.727 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:09:49.790 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(4302278298699585536, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:09:49.794 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 54018c88-0f21-4295-a2df-28c5f828c29f : [SELECT id,date,consistencylist,simplemap,simpleset,value FROM achilles_embedded.simple WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [TWO]
	 Java bound values : [4302278298699585536, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [4302278298699585536, Wed Sep 30 19:00:00 CDT 2015]
13:09:49.799 [achilles-default-executor-33] DEBUG i.a.a.i.entities.SimpleEntity - ResultSet[ exhausted: false, Columns[id(bigint), date(timestamp), consistencylist(list<varchar>), simplemap(map<int, varchar>), simpleset(set<double>), value(varchar)]]
13:09:49.800 [achilles-default-executor-33] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 54018c88-0f21-4295-a2df-28c5f828c29f results : 
	id: 4302278298699585536, date: Wed Sep 30 19:00:00 CDT 2015, consistencylist: [QUORUM, LOCAL_ONE], simplemap: {10=ten, 20=twenty}, simpleset: [1.0, 2.0], value: 0 AM

13:09:49.802 [achilles-default-executor-33] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 54018c88-0f21-4295-a2df-28c5f828c29f at host localhost/127.0.0.1:9042 with achieved consistency level ONE 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Executing single-partition query on simple                                       | /127.0.0.1       | 721                      | ReadStage-2         
Acquiring sstable references                                                     | /127.0.0.1       | 816                      | ReadStage-2         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 917                      | ReadStage-2         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 1119                     | ReadStage-2         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 1202                     | ReadStage-2         
****************************


13:09:49.804 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:49.810 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:09:49.812 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:09:49.874 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(2107543707009100800, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:09:49.891 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID c1ebc03b-c71b-4739-a506-9824b8415cc2 : [DELETE FROM achilles_embedded.simple WHERE id=:id AND date=:date IF value<:value;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [2107543707009100800, Wed Sep 30 19:00:00 CDT 2015, _]
	 Encoded bound values : [2107543707009100800, Wed Sep 30 19:00:00 CDT 2015, _]
13:09:49.937 [achilles-default-executor-34] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID c1ebc03b-c71b-4739-a506-9824b8415cc2 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Preparing 426081b0-29f5-11ec-9979-72968082daa7                                   | /127.0.0.1       | 8012                     | Native-Transport-Requests-1
Sending PAXOS_PREPARE message to localhost/127.0.0.1                             | /127.0.0.1       | 9579                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
PAXOS_PREPARE message received from /127.0.0.1                                   | /127.0.0.1       | 10004                    | MessagingService-Incoming-/127.0.0.1
Parsing SELECT * FROM system.paxos WHERE row_key = ? AND cf_id = ?               | /127.0.0.1       | 11655                    | MutationStage-3     
Preparing statement                                                              | /127.0.0.1       | 11840                    | MutationStage-3     
Executing single-partition query on paxos                                        | /127.0.0.1       | 12140                    | MutationStage-3     
Acquiring sstable references                                                     | /127.0.0.1       | 12213                    | MutationStage-3     
Merging memtable contents                                                        | /127.0.0.1       | 12257                    | MutationStage-3     
Read 0 live rows and 0 tombstone cells                                           | /127.0.0.1       | 12418                    | MutationStage-3     
Promising ballot 426081b0-29f5-11ec-9979-72968082daa7                            | /127.0.0.1       | 12515                    | MutationStage-3     
Parsing UPDATE system.paxos USING TIMESTAMP ? AND TTL ? SET in_progress_ballot = ? WHERE row_key = ? AND cf_id = ? | /127.0.0.1       | 12607                    | MutationStage-3     
Preparing statement                                                              | /127.0.0.1       | 12805                    | MutationStage-3     
Appending to commitlog                                                           | /127.0.0.1       | 13059                    | MutationStage-3     
Adding to paxos memtable                                                         | /127.0.0.1       | 13197                    | MutationStage-3     
Sending REQUEST_RESPONSE message to localhost/127.0.0.1                          | /127.0.0.1       | 13620                    | MessagingService-Outgoing-localhost/127.0.0.1-Small
REQUEST_RESPONSE message received from /127.0.0.1                                | /127.0.0.1       | 13904                    | MessagingService-Incoming-/127.0.0.1
Processing response from /127.0.0.1                                              | /127.0.0.1       | 14009                    | RequestResponseStage-4
Reading existing values for CAS precondition                                     | /127.0.0.1       | 14175                    | Native-Transport-Requests-1
Executing single-partition query on simple                                       | /127.0.0.1       | 14436                    | ReadStage-4         
Acquiring sstable references                                                     | /127.0.0.1       | 14499                    | ReadStage-4         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 14567                    | ReadStage-4         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 14719                    | ReadStage-4         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 14784                    | ReadStage-4         
CAS precondition is met; proposing client-requested updates for 426081b0-29f5-11ec-9979-72968082daa7 | /127.0.0.1       | 21567                    | Native-Transport-Requests-1
Sending PAXOS_PROPOSE message to localhost/127.0.0.1                             | /127.0.0.1       | 23796                    | MessagingService-Outgoing-localhost/127.0.0.1-Small
PAXOS_PROPOSE message received from /127.0.0.1                                   | /127.0.0.1       | 24320                    | MessagingService-Incoming-/127.0.0.1
Executing single-partition query on paxos                                        | /127.0.0.1       | 24551                    | MutationStage-3     
Acquiring sstable references                                                     | /127.0.0.1       | 24627                    | MutationStage-3     
Merging memtable contents                                                        | /127.0.0.1       | 24673                    | MutationStage-3     
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 24893                    | MutationStage-3     
Accepting proposal Commit(426081b0-29f5-11ec-9979-72968082daa7, [achilles_embedded.simple] key=2107543707009100800 partition_deletion=deletedAt=-9223372036854775808, localDeletion=2147483647 columns=[[] | []]
    Row[info=[ts=-9223372036854775808] del=deletedAt=1633889389898999, localDeletion=1633889389 ]: date=2015-09-30 19:00-0500 | ) | /127.0.0.1       | 25409                    | MutationStage-3     
Parsing UPDATE system.paxos USING TIMESTAMP ? AND TTL ? SET proposal_ballot = ?, proposal = ?, proposal_version = ? WHERE row_key = ? AND cf_id = ? | /127.0.0.1       | 25566                    | MutationStage-3     
Preparing statement                                                              | /127.0.0.1       | 25713                    | MutationStage-3     
Appending to commitlog                                                           | /127.0.0.1       | 25958                    | MutationStage-3     
Adding to paxos memtable                                                         | /127.0.0.1       | 26070                    | MutationStage-3     
Sending REQUEST_RESPONSE message to localhost/127.0.0.1                          | /127.0.0.1       | 26297                    | MessagingService-Outgoing-localhost/127.0.0.1-Small
REQUEST_RESPONSE message received from /127.0.0.1                                | /127.0.0.1       | 26513                    | MessagingService-Incoming-/127.0.0.1
Processing response from /127.0.0.1                                              | /127.0.0.1       | 26654                    | RequestResponseStage-3
Parsing SELECT truncated_at FROM system.local WHERE key = 'local'                | /127.0.0.1       | 28732                    | MutationStage-4     
Preparing statement                                                              | /127.0.0.1       | 28874                    | MutationStage-4     
Executing single-partition query on local                                        | /127.0.0.1       | 29063                    | MutationStage-4     
Acquiring sstable references                                                     | /127.0.0.1       | 29115                    | MutationStage-4     
Skipped 0/1 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 29180                    | MutationStage-4     
Key cache hit for sstable 85                                                     | /127.0.0.1       | 29259                    | MutationStage-4     
Merged data from memtables and 1 sstables                                        | /127.0.0.1       | 29718                    | MutationStage-4     
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 29811                    | MutationStage-4     
Committing proposal Commit(426081b0-29f5-11ec-9979-72968082daa7, [achilles_embedded.simple] key=2107543707009100800 partition_deletion=deletedAt=-9223372036854775808, localDeletion=2147483647 columns=[[] | []]
    Row[info=[ts=-9223372036854775808] del=deletedAt=1633889389898999, localDeletion=1633889389 ]: date=2015-09-30 19:00-0500 | ) | /127.0.0.1       | 30175                    | MutationStage-4     
Appending to commitlog                                                           | /127.0.0.1       | 30265                    | MutationStage-4     
Adding to simple memtable                                                        | /127.0.0.1       | 30345                    | MutationStage-4     
Parsing UPDATE system.paxos USING TIMESTAMP ? AND TTL ? SET proposal_ballot = null, proposal = null, most_recent_commit_at = ?, most_recent_commit = ?, most_recent_commit_version = ? WHERE row_key = ? AND cf_id = ? | /127.0.0.1       | 30510                    | MutationStage-4     
Preparing statement                                                              | /127.0.0.1       | 30691                    | MutationStage-4     
Appending to commitlog                                                           | /127.0.0.1       | 30979                    | MutationStage-4     
Adding to paxos memtable                                                         | /127.0.0.1       | 31087                    | MutationStage-4     
CAS applied successfully                                                         | /127.0.0.1       | 32868                    | Native-Transport-Requests-1
****************************


13:09:49.939 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:49.945 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:09:49.947 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:09:50.023 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:50.032 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:09:50.034 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:09:50.096 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(100, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:09:50.100 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID e655031c-f57f-4df9-b2a2-30a83c2a7c76 : [INSERT INTO achilles_embedded.simple (id,date,consistencylist,simplemap,simpleset,value) VALUES (:id,:date,:consistencylist,:simplemap,:simpleset,:value) IF NOT EXISTS USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [100, Wed Sep 30 19:00:00 CDT 2015, null, null, null, value, 0]
	 Encoded bound values : [100, Wed Sep 30 19:00:00 CDT 2015, null, null, null, value, 0]
13:09:50.117 [achilles-default-executor-35] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID e655031c-f57f-4df9-b2a2-30a83c2a7c76 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Preparing 427f5450-29f5-11ec-c511-cee2c0b80d93                                   | /127.0.0.1       | 481                      | Native-Transport-Requests-4
Sending PAXOS_PREPARE message to localhost/127.0.0.1                             | /127.0.0.1       | 703                      | MessagingService-Outgoing-localhost/127.0.0.1-Small
PAXOS_PREPARE message received from /127.0.0.1                                   | /127.0.0.1       | 966                      | MessagingService-Incoming-/127.0.0.1
Executing single-partition query on paxos                                        | /127.0.0.1       | 1235                     | MutationStage-1     
Acquiring sstable references                                                     | /127.0.0.1       | 1306                     | MutationStage-1     
Merging memtable contents                                                        | /127.0.0.1       | 1353                     | MutationStage-1     
Read 0 live rows and 0 tombstone cells                                           | /127.0.0.1       | 1480                     | MutationStage-1     
Promising ballot 427f5450-29f5-11ec-c511-cee2c0b80d93                            | /127.0.0.1       | 1537                     | MutationStage-1     
Appending to commitlog                                                           | /127.0.0.1       | 1665                     | MutationStage-1     
Adding to paxos memtable                                                         | /127.0.0.1       | 1789                     | MutationStage-1     
Sending REQUEST_RESPONSE message to localhost/127.0.0.1                          | /127.0.0.1       | 2249                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
REQUEST_RESPONSE message received from /127.0.0.1                                | /127.0.0.1       | 2501                     | MessagingService-Incoming-/127.0.0.1
Processing response from /127.0.0.1                                              | /127.0.0.1       | 2611                     | RequestResponseStage-1
Reading existing values for CAS precondition                                     | /127.0.0.1       | 2684                     | Native-Transport-Requests-4
Executing single-partition query on simple                                       | /127.0.0.1       | 2845                     | ReadStage-1         
Acquiring sstable references                                                     | /127.0.0.1       | 2899                     | ReadStage-1         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 2969                     | ReadStage-1         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 3111                     | ReadStage-1         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 3186                     | ReadStage-1         
CAS precondition does not match current values [achilles_embedded.simple] key=100 partition_deletion=deletedAt=-9223372036854775808, localDeletion=2147483647 columns=[[] | [value consistencylist simplemap simpleset]]
    Row[info=[ts=1633889390096528] ]: date=2015-09-30 19:00-0500 | [value=0 AM ts=1633889390096528], , [consistencylist[427eb810-29f5-11ec-bdd4-71521eae9d0a]=QUORUM ts=1633889390096528], [consistencylist[427eb811-29f5-11ec-bdd4-71521eae9d0a]=LOCAL_ONE ts=1633889390096528], , [simplemap[10]=ten ts=1633889390096528], [simplemap[20]=twenty ts=1633889390096528], , [simpleset[1.0]= ts=1633889390096528], [simpleset[2.0]= ts=1633889390096528] | /127.0.0.1       | 3736                     | Native-Transport-Requests-4
CAS precondition is met; proposing client-requested updates for 427f5450-29f5-11ec-c511-cee2c0b80d93 | /127.0.0.1       | 4405                     | Native-Transport-Requests-4
Sending PAXOS_PROPOSE message to localhost/127.0.0.1                             | /127.0.0.1       | 4566                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
PAXOS_PROPOSE message received from /127.0.0.1                                   | /127.0.0.1       | 4788                     | MessagingService-Incoming-/127.0.0.1
Executing single-partition query on paxos                                        | /127.0.0.1       | 4948                     | MutationStage-1     
Acquiring sstable references                                                     | /127.0.0.1       | 5008                     | MutationStage-1     
Merging memtable contents                                                        | /127.0.0.1       | 5044                     | MutationStage-1     
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 5215                     | MutationStage-1     
Accepting proposal Commit(427f5450-29f5-11ec-c511-cee2c0b80d93, [achilles_embedded.simple] key=100 partition_deletion=deletedAt=-9223372036854775808, localDeletion=2147483647 columns=[[] | []]) | /127.0.0.1       | 5344                     | MutationStage-1     
Appending to commitlog                                                           | /127.0.0.1       | 5492                     | MutationStage-1     
Adding to paxos memtable                                                         | /127.0.0.1       | 5586                     | MutationStage-1     
Sending REQUEST_RESPONSE message to localhost/127.0.0.1                          | /127.0.0.1       | 5929                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
REQUEST_RESPONSE message received from /127.0.0.1                                | /127.0.0.1       | 6154                     | MessagingService-Incoming-/127.0.0.1
Processing response from /127.0.0.1                                              | /127.0.0.1       | 6245                     | RequestResponseStage-1
CAS did not apply                                                                | /127.0.0.1       | 6308                     | Native-Transport-Requests-4
****************************


13:09:50.120 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:50.126 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:09:50.128 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:09:50.192 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 5acd1039-4a93-4d09-bd35-05db5775fc2f : [INSERT INTO achilles_embedded.simple (id,date,consistencylist,simplemap,simpleset,value) VALUES (:id,:date,:consistencylist,:simplemap,:simpleset,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [8001454999649532928, Sun Oct 10 13:09:50 CDT 2021, [EACH_QUORUM, LOCAL_QUORUM], {1=one, 2=two}, [10.0, 11.0], value, 0]
	 Encoded bound values : [8001454999649532928, Sun Oct 10 13:09:50 CDT 2021, [EACH_QUORUM, LOCAL_QUORUM], {1=one, 2=two}, [10.0, 11.0], value, 0]
13:09:50.201 [achilles-default-executor-36] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 5acd1039-4a93-4d09-bd35-05db5775fc2f at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 491                      | Native-Transport-Requests-1
Adding to simple memtable                                                        | /127.0.0.1       | 662                      | MutationStage-3     
****************************


13:09:50.207 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:50.216 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:09:50.218 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:09:50.289 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:50.295 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:09:50.297 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:09:50.367 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(2830948796676400128, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:09:50.372 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 84d12a3e-a6ea-4ed5-bf8a-3a149c59291a : [DELETE FROM achilles_embedded.simple WHERE id=:id AND date=:date IF simpleset=:simpleset;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [2830948796676400128, Wed Sep 30 19:00:00 CDT 2015, [1.0, 2.0]]
	 Encoded bound values : [2830948796676400128, Wed Sep 30 19:00:00 CDT 2015, [1.0, 2.0]]
13:09:50.396 [achilles-default-executor-37] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 84d12a3e-a6ea-4ed5-bf8a-3a149c59291a at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Preparing 42a8d550-29f5-11ec-ba18-cc5a033d12a9                                   | /127.0.0.1       | 635                      | Native-Transport-Requests-1
Sending PAXOS_PREPARE message to localhost/127.0.0.1                             | /127.0.0.1       | 969                      | MessagingService-Outgoing-localhost/127.0.0.1-Small
PAXOS_PREPARE message received from /127.0.0.1                                   | /127.0.0.1       | 1319                     | MessagingService-Incoming-/127.0.0.1
Executing single-partition query on paxos                                        | /127.0.0.1       | 1676                     | MutationStage-3     
Acquiring sstable references                                                     | /127.0.0.1       | 1746                     | MutationStage-3     
Merging memtable contents                                                        | /127.0.0.1       | 1785                     | MutationStage-3     
Read 0 live rows and 0 tombstone cells                                           | /127.0.0.1       | 1918                     | MutationStage-3     
Promising ballot 42a8d550-29f5-11ec-ba18-cc5a033d12a9                            | /127.0.0.1       | 1981                     | MutationStage-3     
Appending to commitlog                                                           | /127.0.0.1       | 2083                     | MutationStage-3     
Adding to paxos memtable                                                         | /127.0.0.1       | 2169                     | MutationStage-3     
Sending REQUEST_RESPONSE message to localhost/127.0.0.1                          | /127.0.0.1       | 2367                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
REQUEST_RESPONSE message received from /127.0.0.1                                | /127.0.0.1       | 2645                     | MessagingService-Incoming-/127.0.0.1
Processing response from /127.0.0.1                                              | /127.0.0.1       | 2869                     | RequestResponseStage-3
Reading existing values for CAS precondition                                     | /127.0.0.1       | 2947                     | Native-Transport-Requests-1
Executing single-partition query on simple                                       | /127.0.0.1       | 3144                     | ReadStage-3         
Acquiring sstable references                                                     | /127.0.0.1       | 3370                     | ReadStage-3         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 3451                     | ReadStage-3         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 3598                     | ReadStage-3         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 3666                     | ReadStage-3         
CAS precondition is met; proposing client-requested updates for 42a8d550-29f5-11ec-ba18-cc5a033d12a9 | /127.0.0.1       | 4523                     | Native-Transport-Requests-1
Sending PAXOS_PROPOSE message to localhost/127.0.0.1                             | /127.0.0.1       | 4743                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
PAXOS_PROPOSE message received from /127.0.0.1                                   | /127.0.0.1       | 5050                     | MessagingService-Incoming-/127.0.0.1
Executing single-partition query on paxos                                        | /127.0.0.1       | 5322                     | MutationStage-3     
Acquiring sstable references                                                     | /127.0.0.1       | 5388                     | MutationStage-3     
Merging memtable contents                                                        | /127.0.0.1       | 5427                     | MutationStage-3     
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 5588                     | MutationStage-3     
Accepting proposal Commit(42a8d550-29f5-11ec-ba18-cc5a033d12a9, [achilles_embedded.simple] key=2830948796676400128 partition_deletion=deletedAt=-9223372036854775808, localDeletion=2147483647 columns=[[] | []]
    Row[info=[ts=-9223372036854775808] del=deletedAt=1633889390372999, localDeletion=1633889390 ]: date=2015-09-30 19:00-0500 | ) | /127.0.0.1       | 5755                     | MutationStage-3     
Appending to commitlog                                                           | /127.0.0.1       | 5890                     | MutationStage-3     
Adding to paxos memtable                                                         | /127.0.0.1       | 6015                     | MutationStage-3     
Sending REQUEST_RESPONSE message to localhost/127.0.0.1                          | /127.0.0.1       | 6198                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
REQUEST_RESPONSE message received from /127.0.0.1                                | /127.0.0.1       | 6387                     | MessagingService-Incoming-/127.0.0.1
Processing response from /127.0.0.1                                              | /127.0.0.1       | 6615                     | RequestResponseStage-2
Executing single-partition query on local                                        | /127.0.0.1       | 6839                     | MutationStage-2     
Acquiring sstable references                                                     | /127.0.0.1       | 6895                     | MutationStage-2     
Skipped 0/3 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 6952                     | MutationStage-2     
Key cache hit for sstable 89                                                     | /127.0.0.1       | 7060                     | MutationStage-2     
Key cache hit for sstable 90                                                     | /127.0.0.1       | 7269                     | MutationStage-2     
Partition index with 0 entries found for sstable 91                              | /127.0.0.1       | 7432                     | MutationStage-2     
Merged data from memtables and 3 sstables                                        | /127.0.0.1       | 7772                     | MutationStage-2     
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 7885                     | MutationStage-2     
Committing proposal Commit(42a8d550-29f5-11ec-ba18-cc5a033d12a9, [achilles_embedded.simple] key=2830948796676400128 partition_deletion=deletedAt=-9223372036854775808, localDeletion=2147483647 columns=[[] | []]
    Row[info=[ts=-9223372036854775808] del=deletedAt=1633889390372999, localDeletion=1633889390 ]: date=2015-09-30 19:00-0500 | ) | /127.0.0.1       | 8135                     | MutationStage-2     
Appending to commitlog                                                           | /127.0.0.1       | 8191                     | MutationStage-2     
Adding to simple memtable                                                        | /127.0.0.1       | 8254                     | MutationStage-2     
Appending to commitlog                                                           | /127.0.0.1       | 8462                     | MutationStage-2     
Adding to paxos memtable                                                         | /127.0.0.1       | 8561                     | MutationStage-2     
CAS applied successfully                                                         | /127.0.0.1       | 8700                     | Native-Transport-Requests-1
****************************


13:09:50.398 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:50.403 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:09:50.405 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:09:50.469 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(300, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:09:50.472 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 5aa07c96-532a-40a4-8eb6-970b3fa5c30e : [DELETE FROM achilles_embedded.simple WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [THREE]
	 Java bound values : [300, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [300, Wed Sep 30 19:00:00 CDT 2015]
13:09:50.480 [achilles-default-executor-38] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 5aa07c96-532a-40a4-8eb6-970b3fa5c30e at host localhost/127.0.0.1:9042 with achieved consistency level ONE 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 208                      | Native-Transport-Requests-3
Adding to simple memtable                                                        | /127.0.0.1       | 332                      | MutationStage-2     
****************************


13:09:50.480 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:50.486 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:09:50.488 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:09:50.565 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(7863238064010099712, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:09:50.568 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 0280a3c8-1171-4e29-af9a-b4efe5a42796 : [INSERT INTO achilles_embedded.simple (id,date,consistencylist,simplemap,simpleset,value) VALUES (:id,:date,:consistencylist,:simplemap,:simpleset,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [7863238064010099712, Wed Sep 30 19:00:00 CDT 2015, null, null, null, null, 0]
	 Encoded bound values : [7863238064010099712, Wed Sep 30 19:00:00 CDT 2015, null, null, null, null, 0]
13:09:50.572 [Native-Transport-Requests-1] ERROR o.a.c.t.messages.ErrorMessage - Unexpected exception during request
java.nio.BufferUnderflowException: null
	at java.nio.Buffer.nextGetIndex(Buffer.java:510)
	at java.nio.HeapByteBuffer.getInt(HeapByteBuffer.java:375)
	at org.apache.cassandra.serializers.CollectionSerializer.readCollectionSize(CollectionSerializer.java:79)
	at org.apache.cassandra.cql3.CQL3Type$Collection.toCQLLiteral(CQL3Type.java:194)
	at org.apache.cassandra.transport.messages.ExecuteMessage.execute(ExecuteMessage.java:129)
	at org.apache.cassandra.transport.Message$Dispatcher.processRequest(Message.java:685)
	at org.apache.cassandra.transport.Message$Dispatcher.lambda$channelRead0$0(Message.java:591)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at org.apache.cassandra.concurrent.AbstractLocalAwareExecutorService$FutureTask.run(AbstractLocalAwareExecutorService.java:162)
	at org.apache.cassandra.concurrent.SEPWorker.run(SEPWorker.java:113)
	at java.lang.Thread.run(Thread.java:748)
13:09:50.573 [Achilles Embedded Cassandra Cluster-nio-worker-2] WARN  c.d.driver.core.RequestHandler - localhost/127.0.0.1:9042 replied with server error (java.nio.BufferUnderflowException), defuncting connection.
com.datastax.driver.core.exceptions.NoHostAvailableException: All host(s) tried for query failed (tried: localhost/127.0.0.1:9042 (com.datastax.driver.core.exceptions.ServerError: An unexpected error occurred server side on localhost/127.0.0.1:9042: java.nio.BufferUnderflowException))
	at com.datastax.driver.core.exceptions.NoHostAvailableException.copy(NoHostAvailableException.java:83)
	at com.datastax.driver.core.exceptions.NoHostAvailableException.copy(NoHostAvailableException.java:37)
	at info.archinnov.achilles.internals.dsl.AsyncAware.extractCauseFromExecutionException(AsyncAware.java:34)
	at info.archinnov.achilles.internals.dsl.action.MutationAction.execute(MutationAction.java:37)
	at info.archinnov.achilles.it.TestCRUDSimpleEntity.should_insert_with_insert_strategy_non_null_fields(TestCRUDSimpleEntity.java:267)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:59)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:56)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.rules.ExternalResource$1.evaluate(ExternalResource.java:54)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.BlockJUnit4ClassRunner$1.evaluate(BlockJUnit4ClassRunner.java:100)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:366)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:103)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:63)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.junit.runners.Suite.runChild(Suite.java:128)
	at org.junit.runners.Suite.runChild(Suite.java:27)
	at org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)
	at org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)
	at org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:413)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)
	at edu.illinois.cs.testrunner.execution.JUnitTestExecutor.execute(JUnitTestExecutor.java:259)
	at edu.illinois.cs.testrunner.execution.JUnitTestExecutor.executeWithJUnit4Runner(JUnitTestExecutor.java:327)
	at edu.illinois.cs.testrunner.execution.JUnitTestExecutor.runOrder(JUnitTestExecutor.java:49)
	at edu.illinois.cs.testrunner.execution.Executor$.$anonfun$run$1(Executor.scala:30)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at scala.util.Try$.apply(Try.scala:209)
	at edu.illinois.cs.testrunner.execution.Executor$.run(Executor.scala:28)
	at edu.illinois.cs.testrunner.execution.Executor$.main(Executor.scala:18)
	at edu.illinois.cs.testrunner.execution.Executor.main(Executor.scala)
Caused by: com.datastax.driver.core.exceptions.NoHostAvailableException: All host(s) tried for query failed (tried: localhost/127.0.0.1:9042 (com.datastax.driver.core.exceptions.ServerError: An unexpected error occurred server side on localhost/127.0.0.1:9042: java.nio.BufferUnderflowException))
	at com.datastax.driver.core.RequestHandler.reportNoMoreHosts(RequestHandler.java:283)
	at com.datastax.driver.core.RequestHandler.access$1200(RequestHandler.java:61)
	at com.datastax.driver.core.RequestHandler$SpeculativeExecution.findNextHostAndQuery(RequestHandler.java:375)
	at com.datastax.driver.core.RequestHandler$SpeculativeExecution.retry(RequestHandler.java:563)
	at com.datastax.driver.core.RequestHandler$SpeculativeExecution.processRetryDecision(RequestHandler.java:545)
	at com.datastax.driver.core.RequestHandler$SpeculativeExecution.onSet(RequestHandler.java:816)
	at com.datastax.driver.core.Connection$Dispatcher.channelRead0(Connection.java:1290)
	at com.datastax.driver.core.Connection$Dispatcher.channelRead0(Connection.java:1208)
	at com.datastax.shaded.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:105)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)
13:09:50.585 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:335)
	at com.datastax.shaded.netty.handler.timeout.IdleStateHandler.channelRead(IdleStateHandler.java:286)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:335)
	at com.datastax.shaded.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:102)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:335)
	at com.datastax.shaded.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:312)
	at com.datastax.shaded.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:286)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:335)
	at com.datastax.shaded.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)
	at com.datastax.driver.core.InboundTrafficMeter.channelRead(InboundTrafficMeter.java:38)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:335)
	at com.datastax.shaded.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1304)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:356)
	at com.datastax.shaded.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:342)
	at com.datastax.shaded.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:921)
	at com.datastax.shaded.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:135)
	at com.datastax.shaded.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:646)
	at com.datastax.shaded.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:581)
	at com.datastax.shaded.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:498)
	at com.datastax.shaded.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:460)
	at com.datastax.shaded.netty.util.concurrent.SingleThreadEventExecutor$2.run(SingleThreadEventExecutor.java:131)
	at com.datastax.shaded.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:748)
13:09:50.591 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:09:50.593 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:09:50.660 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:50.667 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:09:50.669 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:09:50.733 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(2129750036350978048, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:09:50.736 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 01357345-54f4-470b-bf15-dda00372a60b : [SELECT id,date,consistencylist,simplemap,simpleset,value FROM achilles_embedded.simple WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [2129750036350978048, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [2129750036350978048, Wed Sep 30 19:00:00 CDT 2015]
13:09:50.743 [achilles-default-executor-40] DEBUG i.a.a.i.entities.SimpleEntity - ResultSet[ exhausted: false, Columns[id(bigint), date(timestamp), consistencylist(list<varchar>), simplemap(map<int, varchar>), simpleset(set<double>), value(varchar)]]
13:09:50.744 [achilles-default-executor-40] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 01357345-54f4-470b-bf15-dda00372a60b results : 
	id: 2129750036350978048, date: Wed Sep 30 19:00:00 CDT 2015, consistencylist: [QUORUM, LOCAL_ONE], simplemap: {10=ten, 20=twenty}, simpleset: [1.0, 2.0], value: 0 AM

13:09:50.747 [achilles-default-executor-40] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 01357345-54f4-470b-bf15-dda00372a60b at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Read-repair DC_LOCAL                                                             | /127.0.0.1       | 302                      | Native-Transport-Requests-2
Executing single-partition query on simple                                       | /127.0.0.1       | 439                      | ReadStage-1         
Acquiring sstable references                                                     | /127.0.0.1       | 485                      | ReadStage-1         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 554                      | ReadStage-1         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 731                      | ReadStage-1         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 795                      | ReadStage-1         
****************************


13:09:50.748 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:50.754 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:09:50.755 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:09:50.819 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(2446480817948769280, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:09:50.821 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 66504b90-c73a-42bd-ab30-59514f20cdd1 : [DELETE FROM achilles_embedded.simple WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [2446480817948769280, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [2446480817948769280, Wed Sep 30 19:00:00 CDT 2015]
13:09:50.829 [achilles-default-executor-41] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 66504b90-c73a-42bd-ab30-59514f20cdd1 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 251                      | Native-Transport-Requests-1
Adding to simple memtable                                                        | /127.0.0.1       | 829                      | MutationStage-2     
****************************


13:09:50.831 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:50.837 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:09:50.841 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:09:50.908 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(5552925055200130048, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:09:50.911 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 704ca332-a2e4-4c89-9b4d-bd881e23f29c : [SELECT id,date,consistencylist,simplemap,simpleset,value FROM achilles_embedded.simple WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [5552925055200130048, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [5552925055200130048, Wed Sep 30 19:00:00 CDT 2015]
13:09:50.917 [achilles-default-executor-42] DEBUG i.a.a.i.entities.SimpleEntity - ResultSet[ exhausted: false, Columns[id(bigint), date(timestamp), consistencylist(list<varchar>), simplemap(map<int, varchar>), simpleset(set<double>), value(varchar)]]
13:09:50.918 [achilles-default-executor-42] DEBUG i.a.a.i.entities.SimpleEntity - Query ID 704ca332-a2e4-4c89-9b4d-bd881e23f29c results : 
	id: 5552925055200130048, date: Wed Sep 30 19:00:00 CDT 2015, consistencylist: [QUORUM, LOCAL_ONE], simplemap: {10=ten, 20=twenty}, simpleset: [1.0, 2.0], value: 0 AM

13:09:50.921 [achilles-default-executor-42] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 704ca332-a2e4-4c89-9b4d-bd881e23f29c at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Read-repair DC_LOCAL                                                             | /127.0.0.1       | 368                      | Native-Transport-Requests-2
Executing single-partition query on simple                                       | /127.0.0.1       | 808                      | ReadStage-3         
Acquiring sstable references                                                     | /127.0.0.1       | 886                      | ReadStage-3         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 949                      | ReadStage-3         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 1118                     | ReadStage-3         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 1182                     | ReadStage-3         
****************************


13:09:50.922 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:50.927 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:09:50.929 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:09:50.992 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID b3d1115d-a29b-4e96-b91b-9b9f656e3b64 : [INSERT INTO achilles_embedded.simple (id,date,consistencylist,simplemap,simpleset,value) VALUES (:id,:date,:consistencylist,:simplemap,:simpleset,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [2966483440993287168, Sun Oct 10 13:09:50 CDT 2021, [EACH_QUORUM, LOCAL_QUORUM], {1=one, 2=two}, [10.0, 11.0], value, 0]
	 Encoded bound values : [2966483440993287168, Sun Oct 10 13:09:50 CDT 2021, [EACH_QUORUM, LOCAL_QUORUM], {1=one, 2=two}, [10.0, 11.0], value, 0]
13:09:50.998 [achilles-default-executor-43] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID b3d1115d-a29b-4e96-b91b-9b9f656e3b64 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 597                      | Native-Transport-Requests-2
Adding to simple memtable                                                        | /127.0.0.1       | 749                      | MutationStage-3     
****************************


13:09:50.998 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:51.004 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:09:51.006 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:09:51.078 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(9092666499175719936, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:09:51.084 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID a8b563a6-3202-4dd6-aebd-d91b12716cbd : [DELETE FROM achilles_embedded.simple WHERE id=:id AND date=:date IF consistencylist!=:consistencylist;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [9092666499175719936, Wed Sep 30 19:00:00 CDT 2015, [ALL]]
	 Encoded bound values : [9092666499175719936, Wed Sep 30 19:00:00 CDT 2015, [ALL]]
13:09:51.133 [achilles-default-executor-44] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID a8b563a6-3202-4dd6-aebd-d91b12716cbd at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Preparing 431552c0-29f5-11ec-363c-123fc0bd8814                                   | /127.0.0.1       | 313                      | Native-Transport-Requests-1
Sending PAXOS_PREPARE message to localhost/127.0.0.1                             | /127.0.0.1       | 633                      | MessagingService-Outgoing-localhost/127.0.0.1-Small
PAXOS_PREPARE message received from /127.0.0.1                                   | /127.0.0.1       | 875                      | MessagingService-Incoming-/127.0.0.1
Executing single-partition query on paxos                                        | /127.0.0.1       | 1246                     | MutationStage-2     
Acquiring sstable references                                                     | /127.0.0.1       | 1311                     | MutationStage-2     
Merging memtable contents                                                        | /127.0.0.1       | 1347                     | MutationStage-2     
Read 0 live rows and 0 tombstone cells                                           | /127.0.0.1       | 1466                     | MutationStage-2     
Promising ballot 431552c0-29f5-11ec-363c-123fc0bd8814                            | /127.0.0.1       | 1525                     | MutationStage-2     
Appending to commitlog                                                           | /127.0.0.1       | 1630                     | MutationStage-2     
Adding to paxos memtable                                                         | /127.0.0.1       | 1727                     | MutationStage-2     
Sending REQUEST_RESPONSE message to localhost/127.0.0.1                          | /127.0.0.1       | 1972                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
REQUEST_RESPONSE message received from /127.0.0.1                                | /127.0.0.1       | 2222                     | MessagingService-Incoming-/127.0.0.1
Processing response from /127.0.0.1                                              | /127.0.0.1       | 2445                     | RequestResponseStage-2
Reading existing values for CAS precondition                                     | /127.0.0.1       | 3304                     | Native-Transport-Requests-1
Executing single-partition query on simple                                       | /127.0.0.1       | 3540                     | ReadStage-2         
Acquiring sstable references                                                     | /127.0.0.1       | 3592                     | ReadStage-2         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 3649                     | ReadStage-2         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 3803                     | ReadStage-2         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 3869                     | ReadStage-2         
CAS precondition is met; proposing client-requested updates for 431552c0-29f5-11ec-363c-123fc0bd8814 | /127.0.0.1       | 4539                     | Native-Transport-Requests-1
Sending PAXOS_PROPOSE message to localhost/127.0.0.1                             | /127.0.0.1       | 4685                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
PAXOS_PROPOSE message received from /127.0.0.1                                   | /127.0.0.1       | 4929                     | MessagingService-Incoming-/127.0.0.1
Executing single-partition query on paxos                                        | /127.0.0.1       | 5173                     | MutationStage-2     
Acquiring sstable references                                                     | /127.0.0.1       | 5230                     | MutationStage-2     
Merging memtable contents                                                        | /127.0.0.1       | 5269                     | MutationStage-2     
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 5422                     | MutationStage-2     
Accepting proposal Commit(431552c0-29f5-11ec-363c-123fc0bd8814, [achilles_embedded.simple] key=9092666499175719936 partition_deletion=deletedAt=-9223372036854775808, localDeletion=2147483647 columns=[[] | []]
    Row[info=[ts=-9223372036854775808] del=deletedAt=1633889391083999, localDeletion=1633889391 ]: date=2015-09-30 19:00-0500 | ) | /127.0.0.1       | 5579                     | MutationStage-2     
Appending to commitlog                                                           | /127.0.0.1       | 5717                     | MutationStage-2     
Adding to paxos memtable                                                         | /127.0.0.1       | 5798                     | MutationStage-2     
Sending REQUEST_RESPONSE message to localhost/127.0.0.1                          | /127.0.0.1       | 6182                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
REQUEST_RESPONSE message received from /127.0.0.1                                | /127.0.0.1       | 6339                     | MessagingService-Incoming-/127.0.0.1
Processing response from /127.0.0.1                                              | /127.0.0.1       | 6459                     | RequestResponseStage-4
Executing single-partition query on local                                        | /127.0.0.1       | 6659                     | Native-Transport-Requests-1
Acquiring sstable references                                                     | /127.0.0.1       | 6717                     | Native-Transport-Requests-1
Skipped 0/2 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 6774                     | Native-Transport-Requests-1
Key cache hit for sstable 101                                                    | /127.0.0.1       | 6881                     | Native-Transport-Requests-1
Partition index with 0 entries found for sstable 102                             | /127.0.0.1       | 7256                     | Native-Transport-Requests-1
Merged data from memtables and 2 sstables                                        | /127.0.0.1       | 7559                     | Native-Transport-Requests-1
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 7633                     | Native-Transport-Requests-1
Committing proposal Commit(431552c0-29f5-11ec-363c-123fc0bd8814, [achilles_embedded.simple] key=9092666499175719936 partition_deletion=deletedAt=-9223372036854775808, localDeletion=2147483647 columns=[[] | []]
    Row[info=[ts=-9223372036854775808] del=deletedAt=1633889391083999, localDeletion=1633889391 ]: date=2015-09-30 19:00-0500 | ) | /127.0.0.1       | 8647                     | Native-Transport-Requests-1
Appending to commitlog                                                           | /127.0.0.1       | 8711                     | Native-Transport-Requests-1
Adding to simple memtable                                                        | /127.0.0.1       | 10501                    | Native-Transport-Requests-1
Appending to commitlog                                                           | /127.0.0.1       | 10720                    | Native-Transport-Requests-1
Adding to paxos memtable                                                         | /127.0.0.1       | 10808                    | Native-Transport-Requests-1
CAS applied successfully                                                         | /127.0.0.1       | 10924                    | Native-Transport-Requests-1
****************************


13:09:51.135 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:51.140 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:09:51.142 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:09:51.204 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID a643082a-d1ee-4349-aa42-7de0f826e5b5 : [INSERT INTO achilles_embedded.simple (id,date,consistencylist,simplemap,simpleset,value) VALUES (:id,:date,:consistencylist,:simplemap,:simpleset,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [236665562762944512, Wed Sep 30 19:00:00 CDT 2015, null, null, null, value, 0]
	 Encoded bound values : [236665562762944512, Wed Sep 30 19:00:00 CDT 2015, null, null, null, value, 0]
13:09:51.208 [achilles-default-executor-45] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID a643082a-d1ee-4349-aa42-7de0f826e5b5 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 357                      | Native-Transport-Requests-3
Adding to simple memtable                                                        | /127.0.0.1       | 563                      | MutationStage-1     
****************************


13:09:51.214 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:51.219 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:09:51.221 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:09:51.285 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS achilles_embedded.simple_find_with_schema_name( id bigint, date timestamp, consistencylist list<text>, simplemap map<int, text>, simpleset set<double>, value text, PRIMARY KEY(id, date)) WITH CLUSTERING ORDER BY(date ASC);

13:09:51.554 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple_find_with_schema_name(id, date, consistencylist, simpleset, simplemap, value) VALUES(3621818851778146304, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:09:51.559 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID bf44d000-538b-4997-85d6-dd2931439dce : [SELECT id,date,consistencylist,simplemap,simpleset,value FROM achilles_embedded.simple_find_with_schema_name WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [3621818851778146304, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [3621818851778146304, Wed Sep 30 19:00:00 CDT 2015]
13:09:51.562 [achilles-default-executor-46] DEBUG i.a.a.i.entities.SimpleEntity - ResultSet[ exhausted: false, Columns[id(bigint), date(timestamp), consistencylist(list<varchar>), simplemap(map<int, varchar>), simpleset(set<double>), value(varchar)]]
13:09:51.562 [achilles-default-executor-46] DEBUG i.a.a.i.entities.SimpleEntity - Query ID bf44d000-538b-4997-85d6-dd2931439dce results : 
	id: 3621818851778146304, date: Wed Sep 30 19:00:00 CDT 2015, consistencylist: [QUORUM, LOCAL_ONE], simplemap: {10=ten, 20=twenty}, simpleset: [1.0, 2.0], value: 0 AM

13:09:51.564 [achilles-default-executor-46] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID bf44d000-538b-4997-85d6-dd2931439dce at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Executing single-partition query on simple_find_with_schema_name                 | /127.0.0.1       | 296                      | ReadStage-3         
Acquiring sstable references                                                     | /127.0.0.1       | 363                      | ReadStage-3         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 423                      | ReadStage-3         
Merged data from memtables and 0 sstables                                        | /127.0.0.1       | 613                      | ReadStage-3         
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 679                      | ReadStage-3         
****************************


13:09:51.564 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:51.572 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:09:51.575 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:09:51.647 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 5806354b-462e-4c3f-81eb-89a91d7650fc : [DELETE FROM achilles_embedded.simple WHERE id=:id AND date=:date IF EXISTS;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [8747627347159272448, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [8747627347159272448, Wed Sep 30 19:00:00 CDT 2015]
13:09:51.663 [achilles-default-executor-47] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 5806354b-462e-4c3f-81eb-89a91d7650fc at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Preparing 436b6200-29f5-11ec-9eeb-35005d9babbb                                   | /127.0.0.1       | 398                      | Native-Transport-Requests-3
Sending PAXOS_PREPARE message to localhost/127.0.0.1                             | /127.0.0.1       | 600                      | MessagingService-Outgoing-localhost/127.0.0.1-Small
PAXOS_PREPARE message received from /127.0.0.1                                   | /127.0.0.1       | 825                      | MessagingService-Incoming-/127.0.0.1
Executing single-partition query on paxos                                        | /127.0.0.1       | 1244                     | MutationStage-1     
Acquiring sstable references                                                     | /127.0.0.1       | 1305                     | MutationStage-1     
Merging memtable contents                                                        | /127.0.0.1       | 1364                     | MutationStage-1     
Read 0 live rows and 0 tombstone cells                                           | /127.0.0.1       | 1492                     | MutationStage-1     
Promising ballot 436b6200-29f5-11ec-9eeb-35005d9babbb                            | /127.0.0.1       | 1543                     | MutationStage-1     
Appending to commitlog                                                           | /127.0.0.1       | 1655                     | MutationStage-1     
Adding to paxos memtable                                                         | /127.0.0.1       | 1739                     | MutationStage-1     
Sending REQUEST_RESPONSE message to localhost/127.0.0.1                          | /127.0.0.1       | 1980                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
REQUEST_RESPONSE message received from /127.0.0.1                                | /127.0.0.1       | 2209                     | MessagingService-Incoming-/127.0.0.1
Processing response from /127.0.0.1                                              | /127.0.0.1       | 2438                     | RequestResponseStage-4
Reading existing values for CAS precondition                                     | /127.0.0.1       | 2613                     | Native-Transport-Requests-3
Executing single-partition query on simple                                       | /127.0.0.1       | 2880                     | ReadStage-4         
Acquiring sstable references                                                     | /127.0.0.1       | 2936                     | ReadStage-4         
Skipped 0/0 non-slice-intersecting sstables, included 0 due to tombstones        | /127.0.0.1       | 2978                     | ReadStage-4         
Read 0 live rows and 0 tombstone cells                                           | /127.0.0.1       | 3062                     | ReadStage-4         
CAS precondition does not match current values [achilles_embedded.simple] key=8747627347159272448 partition_deletion=deletedAt=-9223372036854775808, localDeletion=2147483647 columns=[[] | []] | /127.0.0.1       | 3840                     | Native-Transport-Requests-3
CAS precondition is met; proposing client-requested updates for 436b6200-29f5-11ec-9eeb-35005d9babbb | /127.0.0.1       | 3918                     | Native-Transport-Requests-3
Sending PAXOS_PROPOSE message to localhost/127.0.0.1                             | /127.0.0.1       | 4023                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
PAXOS_PROPOSE message received from /127.0.0.1                                   | /127.0.0.1       | 4194                     | MessagingService-Incoming-/127.0.0.1
Executing single-partition query on paxos                                        | /127.0.0.1       | 4430                     | MutationStage-1     
Acquiring sstable references                                                     | /127.0.0.1       | 4488                     | MutationStage-1     
Merging memtable contents                                                        | /127.0.0.1       | 4517                     | MutationStage-1     
Read 1 live rows and 0 tombstone cells                                           | /127.0.0.1       | 4693                     | MutationStage-1     
Accepting proposal Commit(436b6200-29f5-11ec-9eeb-35005d9babbb, [achilles_embedded.simple] key=8747627347159272448 partition_deletion=deletedAt=-9223372036854775808, localDeletion=2147483647 columns=[[] | []]) | /127.0.0.1       | 4812                     | MutationStage-1     
Appending to commitlog                                                           | /127.0.0.1       | 4918                     | MutationStage-1     
Adding to paxos memtable                                                         | /127.0.0.1       | 5005                     | MutationStage-1     
Sending REQUEST_RESPONSE message to localhost/127.0.0.1                          | /127.0.0.1       | 5320                     | MessagingService-Outgoing-localhost/127.0.0.1-Small
REQUEST_RESPONSE message received from /127.0.0.1                                | /127.0.0.1       | 5484                     | MessagingService-Incoming-/127.0.0.1
Processing response from /127.0.0.1                                              | /127.0.0.1       | 5663                     | RequestResponseStage-4
CAS did not apply                                                                | /127.0.0.1       | 5816                     | Native-Transport-Requests-3
****************************


13:09:51.664 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:51.669 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:09:51.671 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:09:51.734 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(200, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:09:51.737 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(200, '2015-10-01 01:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '1 AM');

13:09:51.739 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 37b0bff7-fb01-427a-b642-8d49aa56c9ff : [DELETE FROM achilles_embedded.simple WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [200]
	 Encoded bound values : [200]
13:09:51.747 [achilles-default-executor-48] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 37b0bff7-fb01-427a-b642-8d49aa56c9ff at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 213                      | Native-Transport-Requests-1
Adding to simple memtable                                                        | /127.0.0.1       | 322                      | MutationStage-3     
****************************


13:09:51.749 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:51.754 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:09:51.756 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:09:51.820 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:51.826 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:09:51.829 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:09:51.907 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID e9b6da0c-37da-4faf-a3f8-c715fc49d458 : [INSERT INTO achilles_embedded.simple (id,date,consistencylist,simplemap,simpleset,value) VALUES (:id,:date,:consistencylist,:simplemap,:simpleset,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [TWO]
	 Java bound values : [669049841205001216, Wed Sep 30 19:00:00 CDT 2015, null, null, null, value, 0]
	 Encoded bound values : [669049841205001216, Wed Sep 30 19:00:00 CDT 2015, null, null, null, value, 0]
13:09:51.919 [achilles-default-executor-49] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID e9b6da0c-37da-4faf-a3f8-c715fc49d458 at host localhost/127.0.0.1:9042 with achieved consistency level ONE 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 252                      | Native-Transport-Requests-2
Adding to simple memtable                                                        | /127.0.0.1       | 345                      | MutationStage-1     
****************************


13:09:51.924 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:51.929 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:09:51.931 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:09:52.003 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS achilles_embedded.simple_insert_with_schema_name( id bigint, date timestamp, consistencylist list<text>, simplemap map<int, text>, simpleset set<double>, value text, PRIMARY KEY(id, date)) WITH CLUSTERING ORDER BY(date ASC);

13:09:52.241 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 327843e1-811c-4801-8110-3afefb47a592 : [INSERT INTO achilles_embedded.simple_insert_with_schema_name (id,date,consistencylist,simplemap,simpleset,value) VALUES (:id,:date,:consistencylist,:simplemap,:simpleset,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [6979233055660215296, Wed Sep 30 19:00:00 CDT 2015, null, null, null, value_tenant3, 0]
	 Encoded bound values : [6979233055660215296, Wed Sep 30 19:00:00 CDT 2015, null, null, null, value_tenant3, 0]
13:09:52.248 [achilles-default-executor-50] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 327843e1-811c-4801-8110-3afefb47a592 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 394                      | Native-Transport-Requests-5
Adding to simple_insert_with_schema_name memtable                                | /127.0.0.1       | 538                      | MutationStage-4     
****************************


13:09:52.250 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:52.254 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:52.255 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:52.256 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:52.257 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.having_nested_type(
		value text,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		nestedudt frozen<achilles_embedded.no_ks>,
		tuplewithudt frozen<tuple<int, no_ks>>);

13:09:52.405 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:52.406 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_nested_udt(
		id bigint,
		complexudt frozen<achilles_embedded.having_nested_type>,
		optionaludt achilles_embedded.no_ks,
		udt frozen<achilles_embedded.no_ks>,
		PRIMARY KEY(id));

13:09:52.658 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_nested_udt
13:09:52.726 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 6f46f230-a502-43da-94ae-ff3d15365717 : [UPDATE achilles_embedded.table_with_nested_udt SET udt=:udt WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@9fca88c7, 5943447293216144384]
	 Encoded bound values : [{id:5943447293216144384,"VALUE":'new_udt_value'}, 5943447293216144384]
13:09:52.731 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID a9578a39-ea84-49d1-9238-31d6fa8b710f : [SELECT id,complexudt,optionaludt,udt FROM achilles_embedded.table_with_nested_udt WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [5943447293216144384]
	 Encoded bound values : [5943447293216144384]
13:09:52.736 [achilles-default-executor-52] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), complexudt(achilles_embedded.having_nested_type), optionaludt(achilles_embedded.no_ks), udt(achilles_embedded.no_ks)]]
13:09:52.737 [achilles-default-executor-52] DEBUG ACHILLES_DML_STATEMENT - Query ID a9578a39-ea84-49d1-9238-31d6fa8b710f results : 
	id: 5943447293216144384, complexudt: null, optionaludt: null, udt: {id:5943447293216144384,"VALUE":'new_udt_value'}

13:09:52.738 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_nested_udt
13:09:52.816 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:52.823 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:52.824 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:52.825 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:52.825 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.having_nested_type(
		value text,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		nestedudt frozen<achilles_embedded.no_ks>,
		tuplewithudt frozen<tuple<int, no_ks>>);

13:09:52.826 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:52.827 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_nested_udt(
		id bigint,
		complexudt frozen<achilles_embedded.having_nested_type>,
		optionaludt achilles_embedded.no_ks,
		udt frozen<achilles_embedded.no_ks>,
		PRIMARY KEY(id));

13:09:52.828 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_nested_udt
13:09:52.897 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 2245f3ab-8327-4cd2-bca7-9617d25f6e98 : [INSERT INTO achilles_embedded.table_with_nested_udt (id,complexudt,optionaludt,udt) VALUES (:id,:complexudt,:optionaludt,:udt) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [829953878974850048, info.archinnov.achilles.internals.entities.UDTWithNestedUDT@8c8e3caf, Optional[info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@b25e8000], info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@b25e8000, 0]
	 Encoded bound values : [829953878974850048, {value:'value',udtlist:[{id:829953878974850048,"VALUE":'udt_with_no_keyspace'}],nestedudt:{id:829953878974850048,"VALUE":'udt_with_no_keyspace'},tuplewithudt:(1,{id:829953878974850048,"VALUE":'udt_with_no_keyspace'})}, {id:829953878974850048,"VALUE":'udt_with_no_keyspace'}, {id:829953878974850048,"VALUE":'udt_with_no_keyspace'}, 0]
13:09:52.900 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID e7e60b73-8f73-4377-b3ff-cc39a8f46172 : [SELECT id,complexudt,optionaludt,udt FROM achilles_embedded.table_with_nested_udt WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [829953878974850048]
	 Encoded bound values : [829953878974850048]
13:09:52.902 [achilles-default-executor-54] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), complexudt(achilles_embedded.having_nested_type), optionaludt(achilles_embedded.no_ks), udt(achilles_embedded.no_ks)]]
13:09:52.902 [achilles-default-executor-54] DEBUG ACHILLES_DML_STATEMENT - Query ID e7e60b73-8f73-4377-b3ff-cc39a8f46172 results : 
	id: 829953878974850048, complexudt: {value:'value',udtlist:[{id:829953878974850048,"VALUE":'udt_with_no_keyspace'}],nestedudt:{id:829953878974850048,"VALUE":'udt_with_no_keyspace'},tuplewithudt:(1,{id:829953878974850048,"VALUE":'udt_with_no_keyspace'})}, optionaludt: {id:829953878974850048,"VALUE":'udt_with_no_keyspace'}, udt: {id:829953878974850048,"VALUE":'udt_with_no_keyspace'}

13:09:52.903 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_nested_udt
13:09:52.967 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:52.972 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:52.973 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:52.974 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:52.975 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.having_nested_type(
		value text,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		nestedudt frozen<achilles_embedded.no_ks>,
		tuplewithudt frozen<tuple<int, no_ks>>);

13:09:52.976 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:52.977 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_nested_udt(
		id bigint,
		complexudt frozen<achilles_embedded.having_nested_type>,
		optionaludt achilles_embedded.no_ks,
		udt frozen<achilles_embedded.no_ks>,
		PRIMARY KEY(id));

13:09:52.978 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_nested_udt
13:09:53.053 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 44185528-2794-4196-9b64-0d8187e2281a : [INSERT INTO achilles_embedded.table_with_nested_udt (id,complexudt,optionaludt,udt) VALUES (:id,:complexudt,:optionaludt,:udt) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [4013211105911522304, info.archinnov.achilles.internals.entities.UDTWithNestedUDT@71d3de5a, null, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@14d2d70b, 0]
	 Encoded bound values : [4013211105911522304, {value:'value',udtlist:[{id:4013211105911522304,"VALUE":'udt_with_no_keyspace'}],nestedudt:{id:4013211105911522304,"VALUE":'udt_with_no_keyspace'},tuplewithudt:(1,{id:4013211105911522304,"VALUE":'udt_with_no_keyspace'})}, null, {id:4013211105911522304,"VALUE":'udt_with_no_keyspace'}, 0]
13:09:53.061 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 7a82d6fc-288c-4e2c-bc4d-219288c6ec68 : [SELECT complexudt.value,complexudt.nestedudt."VALUE",udt."VALUE" FROM achilles_embedded.table_with_nested_udt WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [4013211105911522304]
	 Encoded bound values : [4013211105911522304]
13:09:53.063 [achilles-default-executor-56] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[complexudt.value(varchar), complexudt.nestedudt.VALUE(varchar), udt.VALUE(varchar)]]
13:09:53.063 [achilles-default-executor-56] DEBUG ACHILLES_DML_STATEMENT - Query ID 7a82d6fc-288c-4e2c-bc4d-219288c6ec68 results : 
	complexudt.value: value, complexudt.nestedudt.VALUE: udt_with_no_keyspace, udt.VALUE: udt_with_no_keyspace

13:09:53.063 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_nested_udt
13:09:53.135 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:53.138 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS missing_schema WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:53.229 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS missing_schema.missing_static( id bigint, staticcol text static, missing_static int static, clust uuid, value text, PRIMARY KEY((id), clust) );

13:09:53.487 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:53.489 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS missing_schema WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:53.490 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS missing_schema.missing_clustering( id bigint, clust uuid, missing_clust int, value text, PRIMARY KEY((id), clust, missing_clust) );

13:09:53.736 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:53.737 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS missing_schema WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:53.738 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS missing_schema.missing_partition( id bigint, bucket int, value text, PRIMARY KEY((id, bucket)) );

13:09:53.990 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:53.992 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:53.996 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.custom_constructor_udt(
		idx bigint,
		value text);

13:09:54.142 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_custom_constructor(
		id bigint,
		name text,
		udt frozen<achilles_embedded.custom_constructor_udt>,
		value double,
		PRIMARY KEY(id));

13:09:54.399 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_custom_constructor
13:09:54.469 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_custom_constructor(id, name, value, udt) VALUES(4377467472669503488, 'name', 2.0, {idx: 3, value: 'value_udt'});

13:09:54.474 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 2e9ca248-5b1e-49db-a272-2a77df807c0f : [SELECT id,value,udt FROM achilles_embedded.entity_custom_constructor WHERE id=?] with CONSISTENCY LEVEL [null]
13:09:54.484 [achilles-default-executor-57] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), value(double), udt(achilles_embedded.custom_constructor_udt)]]
13:09:54.484 [achilles-default-executor-57] DEBUG ACHILLES_DML_STATEMENT - Query ID 2e9ca248-5b1e-49db-a272-2a77df807c0f results : 
	id: 4377467472669503488, value: 2.0, udt: {idx:3,value:'value_udt'}

13:09:54.488 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_custom_constructor
13:09:54.554 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:54.556 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:54.560 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.custom_constructor_udt(
		idx bigint,
		value text);

13:09:54.561 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_custom_constructor(
		id bigint,
		name text,
		udt frozen<achilles_embedded.custom_constructor_udt>,
		value double,
		PRIMARY KEY(id));

13:09:54.563 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_custom_constructor
13:09:54.635 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_custom_constructor(id, name, value, udt) VALUES(2757101546813382656, 'name', 2.0, {idx: 3, value: 'value_udt'});

13:09:54.637 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID c58da44b-7f6a-438e-baff-4e2b2060c162 : [SELECT id,name,udt,value FROM achilles_embedded.entity_custom_constructor WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [2757101546813382656]
	 Encoded bound values : [2757101546813382656]
13:09:54.639 [achilles-default-executor-58] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), name(varchar), udt(achilles_embedded.custom_constructor_udt), value(double)]]
13:09:54.639 [achilles-default-executor-58] DEBUG ACHILLES_DML_STATEMENT - Query ID c58da44b-7f6a-438e-baff-4e2b2060c162 results : 
	id: 2757101546813382656, name: name, udt: {idx:3,value:'value_udt'}, value: 2.0

13:09:54.639 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_custom_constructor
13:09:54.702 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:54.709 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:54.715 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.custom_constructor_udt(
		idx bigint,
		value text);

13:09:54.716 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_custom_constructor(
		id bigint,
		name text,
		udt frozen<achilles_embedded.custom_constructor_udt>,
		value double,
		PRIMARY KEY(id));

13:09:54.718 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_custom_constructor
13:09:54.798 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_custom_constructor(id, name, value, udt) VALUES(8240999842479912960, 'name', 2.0, {idx: 3, value: 'value_udt'});

13:09:54.804 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 41c3abeb-64d0-4425-83a9-33caa83871be : [SELECT * FROM achilles_embedded.entity_custom_constructor WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [8240999842479912960]
	 Encoded bound values : [8240999842479912960]
13:09:54.806 [achilles-default-executor-59] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), name(varchar), udt(achilles_embedded.custom_constructor_udt), value(double)]]
13:09:54.806 [achilles-default-executor-59] DEBUG ACHILLES_DML_STATEMENT - Query ID 41c3abeb-64d0-4425-83a9-33caa83871be results : 
	id: 8240999842479912960, name: name, udt: {idx:3,value:'value_udt'}, value: 2.0

13:09:54.807 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_custom_constructor
13:09:54.878 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:54.880 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:54.886 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:09:54.888 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:09:54.950 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(4530930582535069696, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:09:54.957 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID 6f71f899-4e9a-438b-b084-bd00490699c0 : [UPDATE achilles_embedded.simple USING TTL :ttl SET value=:value,consistencylist=:consistencylist WHERE id=:id AND date=:date;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [1, new value, [ALL], 4530930582535069696, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [1, new value, [ALL], 4530930582535069696, Wed Sep 30 19:00:00 CDT 2015]
13:09:54.967 [achilles-default-executor-60] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID 6f71f899-4e9a-438b-b084-bd00490699c0 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 699                      | Native-Transport-Requests-1
Adding to simple memtable                                                        | /127.0.0.1       | 792                      | Native-Transport-Requests-1
****************************


13:09:56.971 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:09:57.033 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:57.035 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:57.036 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:09:57.116 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:09:57.257 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:09:57.492 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:57.493 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:09:57.734 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:57.795 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udt) VALUES(7670229283668080640,{id: 7670229283668080640, "VALUE": 'value'},{id: 7670229283668080640, "VALUE": 'value'});

13:09:57.804 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 10cfa071-e7c9-4e0d-9f0b-030d1d02c117 : [UPDATE dynamic_ks.dynamic_table SET udt=:udt WHERE id=:id AND clust=:clust IF udt>=:udt;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@9586d8e, 7670229283668080640, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@1ef818ed, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@1ef818ec]
	 Encoded bound values : [{id:7670229283668080640,"VALUE":'new_value'}, 7670229283668080640, {id:7670229283668080640,"VALUE":'value'}, {id:7670229283668080640,"VALUE":'valud'}]
13:09:57.811 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:57.874 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:57.876 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:57.877 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:09:57.878 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:09:57.879 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:09:57.884 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:57.886 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:09:57.887 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:57.961 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udt) VALUES(3229765132035790848,{id: 3229765132035790848, "VALUE": 'value'},{id: 3229765132035790848, "VALUE": 'value'});

13:09:57.970 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 1f4a114a-40a1-42f1-a6b2-2aae61325bc1 : [DELETE udt FROM dynamic_ks.dynamic_table WHERE id=:id AND clust=:clust IF udt>=:udt;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [3229765132035790848, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@282d67ac, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@282d67ab]
	 Encoded bound values : [3229765132035790848, {id:3229765132035790848,"VALUE":'value'}, {id:3229765132035790848,"VALUE":'valud'}]
13:09:57.983 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:58.052 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:58.053 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:58.054 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:09:58.055 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:09:58.055 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:09:58.060 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:58.062 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:09:58.063 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:58.127 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udtList) VALUES(8481857802768217088,{id: 8481857802768217088, "VALUE": 'value'},[{id: 8481857802768217088, "VALUE": 'value1'}, {id: 8481857802768217088, "VALUE": 'value2'}]);

13:09:58.133 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 8b39f6e8-dd9f-48b1-9105-a6fcd9582725 : [UPDATE dynamic_ks.dynamic_table SET udtlist=:udtlist+udtlist WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [[info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@a16f9878], 8481857802768217088, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@b70f43d7]
	 Encoded bound values : [[{id:8481857802768217088,"VALUE":'new_value'}], 8481857802768217088, {id:8481857802768217088,"VALUE":'value'}]
13:09:58.137 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:58.213 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:58.214 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:58.215 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:09:58.215 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:09:58.216 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:09:58.223 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:58.224 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:09:58.225 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:58.292 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udtmapkey) VALUES(770433684208245760,{id: 770433684208245760, "VALUE": 'value'},{{id: 770433684208245760, "VALUE": 'value1'}: '1', {id: 770433684208245760, "VALUE": 'value2'}: '2'});

13:09:58.296 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID c3b5e105-361d-4de9-82af-9780f2d72898 : [UPDATE dynamic_ks.dynamic_table SET udtmapkey=:udtmapkey WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [{info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@e5f117b9=new_value}, 770433684208245760, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@fb90c318]
	 Encoded bound values : [{{id:770433684208245760,"VALUE":'new_value'}=new_value}, 770433684208245760, {id:770433684208245760,"VALUE":'value'}]
13:09:58.299 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:58.361 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:58.362 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:58.364 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:09:58.364 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:09:58.365 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:09:58.370 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:58.372 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:09:58.373 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:58.447 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udtmapvalue) VALUES(2041513782663014400,{id: 2041513782663014400, "VALUE": 'value'},{1: {id: 2041513782663014400, "VALUE": 'value1'}, 2: {id: 2041513782663014400, "VALUE": 'value2'}});

13:09:58.452 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 02fcf36b-854b-4dfd-9afc-997d56ec722e : [UPDATE dynamic_ks.dynamic_table SET udtmapvalue=:udtmapvalue WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [{3=info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@d5d7a6db}, 2041513782663014400, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@eb77523a]
	 Encoded bound values : [{3={id:2041513782663014400,"VALUE":'new_value'}}, 2041513782663014400, {id:2041513782663014400,"VALUE":'value'}]
13:09:58.456 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:58.529 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:58.532 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:58.555 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:09:58.556 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:09:58.557 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:09:58.564 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:58.565 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:09:58.569 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:58.632 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udtset) VALUES(5637349394972416000,{id: 5637349394972416000, "VALUE": 'value'},{{id: 5637349394972416000, "VALUE": 'value1'}, {id: 5637349394972416000, "VALUE": 'value2'}});

13:09:58.638 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 07432b57-40f6-4b76-93f7-631577b0eb2c : [UPDATE dynamic_ks.dynamic_table SET udtset=udtset-:udtset WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [[info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@e7411239], 5637349394972416000, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@1f0806ca]
	 Encoded bound values : [[{id:5637349394972416000,"VALUE":'value1'}], 5637349394972416000, {id:5637349394972416000,"VALUE":'value'}]
13:09:58.641 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:58.717 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:58.719 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:58.720 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:09:58.720 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:09:58.721 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:09:58.726 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:58.728 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:09:58.729 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:58.800 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID c2fde45f-16fb-41a4-ac27-3e2fc020fd42 : [INSERT INTO dynamic_ks.dynamic_table (id,clust,udt,udtlist,udtmapkey,udtmapvalue,udtset) VALUES (:id,:clust,:udt,:udtlist,:udtmapkey,:udtmapvalue,:udtset) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [6843072155019801600, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@21fe78c4, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@21fe78c4, null, null, null, null, 0]
	 Encoded bound values : [6843072155019801600, {id:6843072155019801600,"VALUE":'val'}, {id:6843072155019801600,"VALUE":'val'}, null, null, null, null, 0]
13:09:58.804 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:58.866 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:58.867 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:58.868 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:09:58.869 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:09:58.870 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:09:58.877 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:58.878 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:09:58.880 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:58.953 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udtmapvalue) VALUES(6003415061860978688,{id: 6003415061860978688, "VALUE": 'value'},{1: {id: 6003415061860978688, "VALUE": 'value1'}, 2: {id: 6003415061860978688, "VALUE": 'value2'}});

13:09:58.956 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 35767912-e210-4fa4-a6d5-0340c8158b87 : [UPDATE dynamic_ks.dynamic_table SET udtmapvalue[:udtMapValue_key]=:udtMapValue_value WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [1, null, 6003415061860978688, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@a1176102]
	 Encoded bound values : [1, null, 6003415061860978688, {id:6003415061860978688,"VALUE":'value'}]
13:09:58.962 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:59.032 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:59.033 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:59.035 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:09:59.035 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:09:59.036 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:09:59.040 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:59.041 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:09:59.043 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:59.105 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udtset) VALUES(60619248633091072,{id: 60619248633091072, "VALUE": 'value'},{{id: 60619248633091072, "VALUE": 'value1'}, {id: 60619248633091072, "VALUE": 'value2'}});

13:09:59.108 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 98f0a565-ff3e-4a3e-b181-0f58945955ca : [UPDATE dynamic_ks.dynamic_table SET udtset=udtset+:udtset WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [[info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@f4213d31], 60619248633091072, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@9c0e890]
	 Encoded bound values : [[{id:60619248633091072,"VALUE":'new_value'}], 60619248633091072, {id:60619248633091072,"VALUE":'value'}]
13:09:59.113 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:59.190 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:59.191 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:59.192 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:09:59.193 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:09:59.193 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:09:59.198 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:59.199 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:09:59.200 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:59.271 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udt) VALUES(5600175485051815936,{id: 5600175485051815936, "VALUE": 'value'},{id: 5600175485051815936, "VALUE": 'value'});

13:09:59.274 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 2e8f4c3a-7b56-45d1-856a-bcd2f080712e : [SELECT id,clust,udt,udtlist,udtmapkey,udtmapvalue,udtset FROM dynamic_ks.dynamic_table WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [5600175485051815936, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@74153904]
	 Encoded bound values : [5600175485051815936, {id:5600175485051815936,"VALUE":'value'}]
13:09:59.278 [achilles-default-executor-70] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), clust(dynamic_ks.no_ks), udt(dynamic_ks.no_ks), udtlist(list<dynamic_ks.no_ks>), udtmapkey(map<dynamic_ks.no_ks, varchar>), udtmapvalue(map<int, dynamic_ks.no_ks>), udtset(set<dynamic_ks.no_ks>)]]
13:09:59.280 [achilles-default-executor-70] DEBUG ACHILLES_DML_STATEMENT - Query ID 2e8f4c3a-7b56-45d1-856a-bcd2f080712e results : 
	id: 5600175485051815936, clust: {id:5600175485051815936,"VALUE":'value'}, udt: {id:5600175485051815936,"VALUE":'value'}, udtlist: [], udtmapkey: {}, udtmapvalue: {}, udtset: []

13:09:59.281 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:59.344 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:59.345 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:59.347 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:09:59.348 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:09:59.348 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:09:59.356 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:59.357 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:09:59.359 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:59.438 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udt) VALUES(2245661294073287680,{id: 2245661294073287680, "VALUE": 'value'},{id: 2245661294073287680, "VALUE": 'value'});

13:09:59.441 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID ad48865d-276f-42af-8885-8b48af3fd1bb : [DELETE udt FROM dynamic_ks.dynamic_table WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [2245661294073287680, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@765211a6]
	 Encoded bound values : [2245661294073287680, {id:2245661294073287680,"VALUE":'value'}]
13:09:59.443 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:59.508 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:59.509 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:59.510 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:09:59.511 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:09:59.512 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:09:59.516 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:59.517 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:09:59.518 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:59.583 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udtList) VALUES(7581192818874261504,{id: 7581192818874261504, "VALUE": 'value'},[{id: 7581192818874261504, "VALUE": 'value1'}, {id: 7581192818874261504, "VALUE": 'value2'}]);

13:09:59.586 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID c6cb29b7-1a70-4c78-8ca3-e2217ba1f3ee : [UPDATE dynamic_ks.dynamic_table SET udtlist=udtlist+:udtlist WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [[info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@1afed180], 7581192818874261504, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@309e7cdf]
	 Encoded bound values : [[{id:7581192818874261504,"VALUE":'new_value'}], 7581192818874261504, {id:7581192818874261504,"VALUE":'value'}]
13:09:59.589 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:59.668 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:59.669 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:59.670 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:09:59.671 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:09:59.672 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:09:59.677 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:59.678 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:09:59.681 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:59.749 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udt) VALUES(722900720533840896,{id: 722900720533840896, "VALUE": 'value'},{id: 722900720533840896, "VALUE": 'value'});

13:09:59.752 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 9da80f4f-c3ff-4b57-b0d3-55114072ee5b : [DELETE FROM dynamic_ks.dynamic_table WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [722900720533840896, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@a9d5fad2]
	 Encoded bound values : [722900720533840896, {id:722900720533840896,"VALUE":'value'}]
13:09:59.755 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:59.819 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:59.824 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:59.826 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:09:59.827 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:09:59.827 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:09:59.832 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:09:59.833 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:09:59.835 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:59.916 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udt) VALUES(4639972814872019968,{id: 4639972814872019968, "VALUE": 'value'},{id: 4639972814872019968, "VALUE": 'value'});

13:09:59.920 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 06458fcf-8648-4535-924d-974878475c14 : [DELETE udt FROM dynamic_ks.dynamic_table WHERE id=:id AND clust=:clust IF udt<:udt;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [4639972814872019968, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@72fcf0a1, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@72fcf0a2]
	 Encoded bound values : [4639972814872019968, {id:4639972814872019968,"VALUE":'value'}, {id:4639972814872019968,"VALUE":'valuf'}]
13:09:59.926 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:09:59.996 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:09:59.997 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:09:59.998 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:09:59.999 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:09:59.999 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:10:00.004 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:10:00.005 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:10:00.007 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:10:00.070 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udt) VALUES(2417592438871613440,{id: 2417592438871613440, "VALUE": 'value'},{id: 2417592438871613440, "VALUE": 'value'});

13:10:00.077 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID feea85da-932b-45bf-b77e-f32cf9ee7f82 : [SELECT * FROM dynamic_ks.dynamic_table WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [2417592438871613440, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@e5d7220f]
	 Encoded bound values : [2417592438871613440, {id:2417592438871613440,"VALUE":'value'}]
13:10:00.078 [achilles-default-executor-75] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[id(bigint), clust(dynamic_ks.no_ks), udt(dynamic_ks.no_ks), udtlist(list<dynamic_ks.no_ks>), udtmapkey(map<dynamic_ks.no_ks, varchar>), udtmapvalue(map<int, dynamic_ks.no_ks>), udtset(set<dynamic_ks.no_ks>)]]
13:10:00.079 [achilles-default-executor-75] DEBUG ACHILLES_DML_STATEMENT - Query ID feea85da-932b-45bf-b77e-f32cf9ee7f82 results : 
	id: 2417592438871613440, clust: {id:2417592438871613440,"VALUE":'value'}, udt: {id:2417592438871613440,"VALUE":'value'}, udtlist: [], udtmapkey: {}, udtmapvalue: {}, udtset: []

13:10:00.079 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:10:00.159 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:00.160 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:10:00.162 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:10:00.163 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:10:00.163 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:10:00.168 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:10:00.170 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:10:00.171 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:10:00.238 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udt) VALUES(1761417308204914688,{id: 1761417308204914688, "VALUE": 'value'},{id: 1761417308204914688, "VALUE": 'value'});

13:10:00.240 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 2763fd87-d338-49be-a468-3bfce0990de8 : [DELETE FROM dynamic_ks.dynamic_table WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [1761417308204914688, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@18c8f41d]
	 Encoded bound values : [1761417308204914688, {id:1761417308204914688,"VALUE":'value'}]
13:10:00.245 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:10:00.308 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:00.309 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:10:00.310 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:10:00.311 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:10:00.311 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:10:00.316 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:10:00.317 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:10:00.318 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:10:00.393 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udtmapvalue) VALUES(8015312599596181504,{id: 8015312599596181504, "VALUE": 'value'},{1: {id: 8015312599596181504, "VALUE": 'value1'}, 2: {id: 8015312599596181504, "VALUE": 'value2'}});

13:10:00.394 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 1df62982-4a53-4684-9750-146dbdd2ec11 : [UPDATE dynamic_ks.dynamic_table SET udtmapvalue[:udtMapValue_key]=:udtMapValue_value WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [3, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@5a8ac05c, 8015312599596181504, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@702a6bbb]
	 Encoded bound values : [3, {id:8015312599596181504,"VALUE":'new_value'}, 8015312599596181504, {id:8015312599596181504,"VALUE":'value'}]
13:10:00.397 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:10:00.465 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:00.466 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:10:00.467 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:10:00.468 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:10:00.468 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:10:00.473 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:10:00.474 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:10:00.475 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:10:00.539 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udtmapkey) VALUES(1076511875437786112,{id: 1076511875437786112, "VALUE": 'value'},{{id: 1076511875437786112, "VALUE": 'value1'}: '1', {id: 1076511875437786112, "VALUE": 'value2'}: '2'});

13:10:00.542 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID a27c54de-c3d9-47f8-a1e0-dabe18272229 : [UPDATE dynamic_ks.dynamic_table SET udtmapkey[:udtMapKey_key]=:udtMapKey_value WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@bcc6a6fb, new_value, 1076511875437786112, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@d266525a]
	 Encoded bound values : [{id:1076511875437786112,"VALUE":'new_value'}, new_value, 1076511875437786112, {id:1076511875437786112,"VALUE":'value'}]
13:10:00.545 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:10:00.623 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:00.624 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:10:00.625 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:10:00.625 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:10:00.626 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:10:00.632 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:10:00.633 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:10:00.636 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:10:00.704 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udt) VALUES(4172713558838114304,{id: 4172713558838114304, "VALUE": 'value'},{id: 4172713558838114304, "VALUE": 'value'});

13:10:00.707 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID a918507a-26ef-4b8d-87a4-a09aa81348f0 : [DELETE udt FROM dynamic_ks.dynamic_table WHERE id=:id AND clust=:clust IF udt=:udt;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [4172713558838114304, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@b9c62433, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@b9c62433]
	 Encoded bound values : [4172713558838114304, {id:4172713558838114304,"VALUE":'value'}, {id:4172713558838114304,"VALUE":'value'}]
13:10:00.717 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:10:00.779 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:00.780 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:10:00.782 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:10:00.782 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:10:00.783 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:10:00.789 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:10:00.790 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:10:00.791 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:10:00.868 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udtList) VALUES(7403408608011153408,{id: 7403408608011153408, "VALUE": 'value'},[{id: 7403408608011153408, "VALUE": 'value1'}, {id: 7403408608011153408, "VALUE": 'value2'}]);

13:10:00.871 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID cb7c0c9c-0ad5-495a-bfcd-f4e6c7ca248a : [UPDATE dynamic_ks.dynamic_table SET udtlist=:udtlist WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [[info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@d7845cc], 7403408608011153408, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@2317f12b]
	 Encoded bound values : [[{id:7403408608011153408,"VALUE":'new_value'}], 7403408608011153408, {id:7403408608011153408,"VALUE":'value'}]
13:10:00.874 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:10:00.947 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:00.948 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:10:00.950 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:10:00.950 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:10:00.952 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:10:00.957 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:10:00.958 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:10:00.959 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:10:01.023 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udtmapkey) VALUES(6165070312712478720,{id: 6165070312712478720, "VALUE": 'value'},{{id: 6165070312712478720, "VALUE": 'value1'}: '1', {id: 6165070312712478720, "VALUE": 'value2'}: '2'});

13:10:01.024 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 0ed176df-1e5a-4cb3-aba7-f315657f662f : [UPDATE dynamic_ks.dynamic_table SET udtmapkey[:udtMapKey_key]=:udtMapKey_value WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@aea2def8, null, 6165070312712478720, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@e669d389]
	 Encoded bound values : [{id:6165070312712478720,"VALUE":'value1'}, null, 6165070312712478720, {id:6165070312712478720,"VALUE":'value'}]
13:10:01.027 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:10:01.109 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:01.110 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:10:01.111 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:10:01.112 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:10:01.112 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:10:01.118 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:10:01.119 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:10:01.120 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:10:01.191 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udt) VALUES(8836079381723799552,{id: 8836079381723799552, "VALUE": 'value'},{id: 8836079381723799552, "VALUE": 'value'});

13:10:01.194 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 7567a122-eb13-44a9-869b-ec8a501e3954 : [DELETE FROM dynamic_ks.dynamic_table WHERE id=:id;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [8836079381723799552]
	 Encoded bound values : [8836079381723799552]
13:10:01.199 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:10:01.263 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:01.264 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:10:01.265 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:10:01.266 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:10:01.266 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:10:01.292 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:10:01.294 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:10:01.296 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:10:01.369 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udt) VALUES(9145410038744701952,{id: 9145410038744701952, "VALUE": 'value'},{id: 9145410038744701952, "VALUE": 'value'});

13:10:01.372 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID cdf755fe-3335-4453-8704-dc0c6c69c360 : [UPDATE dynamic_ks.dynamic_table SET udt=:udt WHERE id=:id AND clust=:clust;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@86d7cefa, 9145410038744701952, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@9c777a59]
	 Encoded bound values : [{id:9145410038744701952,"VALUE":'new_value'}, 9145410038744701952, {id:9145410038744701952,"VALUE":'value'}]
13:10:01.377 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:10:01.448 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:01.449 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:10:01.450 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:10:01.451 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:10:01.451 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:10:01.455 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:10:01.456 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:10:01.458 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:10:01.520 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udt) VALUES(1931161133706930176,{id: 1931161133706930176, "VALUE": 'value'},{id: 1931161133706930176, "VALUE": 'value'});

13:10:01.523 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 47aa78c5-8ede-4734-a994-9eb27cf5bbc9 : [UPDATE dynamic_ks.dynamic_table SET udt=:udt WHERE id=:id AND clust=:clust IF udt=:udt;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@25bacf22, 1931161133706930176, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@3b5a7a81, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@3b5a7a81]
	 Encoded bound values : [{id:1931161133706930176,"VALUE":'new_value'}, 1931161133706930176, {id:1931161133706930176,"VALUE":'value'}, {id:1931161133706930176,"VALUE":'value'}]
13:10:01.530 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:10:01.606 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:01.607 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:10:01.609 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS dynamic_ks WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1} AND DURABLE_WRITES = false;

13:10:01.610 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TYPE IF NOT EXISTS dynamic_ks.no_ks (id bigint, "VALUE" text);

13:10:01.610 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE TABLE IF NOT EXISTS dynamic_ks.dynamic_table( id bigint, clust frozen<no_ks>, udt frozen<no_ks>, udtlist list<frozen<no_ks>>, udtset set<frozen<no_ks>>, udtmapkey map<frozen<no_ks>, text>, udtmapvalue map<int, frozen<no_ks>>, PRIMARY KEY((id), clust) );

13:10:01.615 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.no_ks(
		id bigint,
		"VALUE" text);

13:10:01.621 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.table_with_with_dynamic_keyspace(
		id bigint,
		clust frozen<achilles_embedded.no_ks>,
		udt frozen<achilles_embedded.no_ks>,
		udtlist list<frozen<achilles_embedded.no_ks>>,
		udtmapkey map<frozen<achilles_embedded.no_ks>, text>,
		udtmapvalue map<int, frozen<achilles_embedded.no_ks>>,
		udtset set<frozen<achilles_embedded.no_ks>>,
		PRIMARY KEY(id, clust))
	WITH CLUSTERING ORDER BY(clust ASC);

13:10:01.622 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:10:01.687 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO dynamic_ks.dynamic_table(id, clust, udt) VALUES(8946783269019704320,{id: 8946783269019704320, "VALUE": 'value'},{id: 8946783269019704320, "VALUE": 'value'});

13:10:01.690 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID b7e11186-6e19-4028-a439-f59508edac87 : [UPDATE dynamic_ks.dynamic_table SET udt=:udt WHERE id=:id AND clust=:clust IF udt<:udt;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@2be36138, 8946783269019704320, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@41830c97, info.archinnov.achilles.internals.entities.UDTWithNoKeyspace@41830c98]
	 Encoded bound values : [{id:8946783269019704320,"VALUE":'new_value'}, 8946783269019704320, {id:8946783269019704320,"VALUE":'value'}, {id:8946783269019704320,"VALUE":'valuf'}]
13:10:01.696 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.table_with_with_dynamic_keyspace
13:10:01.758 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:01.759 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:10:01.765 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:10:01.766 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS my_static_keyspace.entity_static_annotations(
		partition_key bigint,
		"overRiden" text,
		value text,
		PRIMARY KEY(partition_key))
	WITH default_time_to_live = 1;

13:10:02.010 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_child(
		id bigint,
		child_value text,
		value text,
		PRIMARY KEY(id));

13:10:02.266 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:10:02.327 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:10:02.395 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE my_static_keyspace.entity_static_annotations
13:10:02.463 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID f4573b56-67d0-4102-bb0a-98a64af077d9 : [INSERT INTO achilles_embedded.simple (id,date,consistencylist,simplemap,simpleset,value) VALUES (:id,:date,:consistencylist,:simplemap,:simpleset,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [6574569171306245120, Sun Oct 10 13:10:02 CDT 2021, null, null, null, value, 0]
	 Encoded bound values : [6574569171306245120, Sun Oct 10 13:10:02 CDT 2021, null, null, null, value, 0]
13:10:02.474 [achilles-default-executor-86] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID f4573b56-67d0-4102-bb0a-98a64af077d9 at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
Determining replicas for mutation                                                | /127.0.0.1       | 622                      | Native-Transport-Requests-5
Adding to simple memtable                                                        | /127.0.0.1       | 744                      | Native-Transport-Requests-5
****************************


13:10:02.475 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:10:02.572 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:10:02.642 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE my_static_keyspace.entity_static_annotations
13:10:02.708 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:02.710 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:10:02.714 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:10:02.715 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS my_static_keyspace.entity_static_annotations(
		partition_key bigint,
		"overRiden" text,
		value text,
		PRIMARY KEY(partition_key))
	WITH default_time_to_live = 1;

13:10:02.716 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_child(
		id bigint,
		child_value text,
		value text,
		PRIMARY KEY(id));

13:10:02.717 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:10:02.797 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:10:02.868 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE my_static_keyspace.entity_static_annotations
13:10:02.937 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 9bacd9e7-3c40-439e-8199-59d1efc46183 : [INSERT INTO my_static_keyspace.entity_static_annotations (partition_key,"overRiden",value) VALUES (:partition_key,:"overRiden",:value) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_ONE]
	 Java bound values : [3678023814784694272, overriden_val, new_val, 1]
	 Encoded bound values : [3678023814784694272, overriden_val, new_val, 1]
13:10:02.939 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:10:03.002 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:10:03.077 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE my_static_keyspace.entity_static_annotations
13:10:03.139 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:03.141 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:10:03.146 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:10:03.148 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS my_static_keyspace.entity_static_annotations(
		partition_key bigint,
		"overRiden" text,
		value text,
		PRIMARY KEY(partition_key))
	WITH default_time_to_live = 1;

13:10:03.149 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_child(
		id bigint,
		child_value text,
		value text,
		PRIMARY KEY(id));

13:10:03.150 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:10:03.234 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:10:03.306 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE my_static_keyspace.entity_static_annotations
13:10:03.375 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID a62e81dd-1e9a-45c9-b174-e73905a6d8b4 : [INSERT INTO achilles_embedded.entity_child (id,child_value,value) VALUES (:id,:child_value,:value) USING TTL :ttl;] with CONSISTENCY LEVEL [LOCAL_QUORUM]
	 Java bound values : [7671619503378486272, another_val, val, 0]
	 Encoded bound values : [7671619503378486272, another_val, val, 0]
13:10:03.378 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:10:03.450 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:10:03.522 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE my_static_keyspace.entity_static_annotations
13:10:03.592 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:03.593 [main] DEBUG ACHILLES_DDL_SCRIPT - 	SCRIPT : CREATE KEYSPACE IF NOT EXISTS my_static_keyspace WITH REPLICATION = { 'class' : 'SimpleStrategy', 'replication_factor' : 1 } AND DURABLE_WRITES=false;

13:10:03.598 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:10:03.601 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS my_static_keyspace.entity_static_annotations(
		partition_key bigint,
		"overRiden" text,
		value text,
		PRIMARY KEY(partition_key))
	WITH default_time_to_live = 1;

13:10:03.602 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_child(
		id bigint,
		child_value text,
		value text,
		PRIMARY KEY(id));

13:10:03.603 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:10:03.679 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:10:03.749 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE my_static_keyspace.entity_static_annotations
13:10:03.817 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 3d110df4-a425-4014-805f-aff504a6bc0b : [INSERT INTO my_static_keyspace.entity_static_annotations (partition_key,"overRiden",value) VALUES (:partition_key,:"overRiden",:value) USING TTL :ttl;] with CONSISTENCY LEVEL [EACH_QUORUM]
	 Java bound values : [2113966048807599104, overriden_val, new_val, 1]
	 Encoded bound values : [2113966048807599104, overriden_val, new_val, 1]
13:10:03.819 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:10:03.892 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_child
13:10:03.963 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE my_static_keyspace.entity_static_annotations
13:10:04.040 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:04.045 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:10:04.278 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:10:04.340 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(911872678568691712, 00000000-0000-0000-0000-000000000000, '2015-10-01 00:00:00+0000', 'val1');

13:10:04.342 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(911872678568691712, 00000000-0000-0000-0000-000000000000, '2015-10-02 00:00:00+0000', 'val2');

13:10:04.343 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(911872678568691712, 00000000-0000-0000-0000-000000000000, '2015-10-03 00:00:00+0000', 'val3');

13:10:04.344 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(6090575847257225216, 00000000-0000-0000-0000-000000000000, '2015-10-01 00:00:00+0000', 'val4');

13:10:04.345 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(6090575847257225216, 00000000-0000-0000-0000-000000000000, '2015-10-02 00:00:00+0000', 'val5');

13:10:04.351 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 14df02d0-11d3-44c5-97fc-095a14cf3be2 : [UPDATE achilles_embedded.entity_with_clusterings SET value=:value WHERE id IN :id AND uuid=:uuid AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [new_value, [911872678568691712, 6090575847257225216], 00000000-0000-0000-0000-000000000000, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [new_value, [911872678568691712, 6090575847257225216], 00000000-0000-0000-0000-000000000000, Wed Sep 30 19:00:00 CDT 2015]
13:10:04.358 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:10:04.418 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:04.423 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:10:04.424 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:10:04.495 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(6957449588463968256, 00000000-0000-0000-0000-000000000000, '2015-10-01 00:00:00+0000', 'val1');

13:10:04.497 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(6957449588463968256, 00000000-0000-0000-0000-000000000000, '2015-10-02 00:00:00+0000', 'val2');

13:10:04.498 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(6957449588463968256, 00000000-0000-0000-0000-000000000000, '2015-10-03 00:00:00+0000', 'val3');

13:10:04.498 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(7893452146991991808, 00000000-0000-0000-0000-000000000000, '2015-10-01 00:00:00+0000', 'val4');

13:10:04.499 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(7893452146991991808, 00000000-0000-0000-0000-000000000000, '2015-10-02 00:00:00+0000', 'val5');

13:10:04.509 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:10:04.582 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:04.587 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:10:04.588 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:10:04.662 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(5173614544336528384, 00000000-0000-0000-0000-000000000000, '2015-10-01 00:00:00+0000', 'val1');

13:10:04.663 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(5173614544336528384, 00000000-0000-0000-0000-000000000000, '2015-10-02 00:00:00+0000', 'val2');

13:10:04.664 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(5173614544336528384, 00000000-0000-0000-0000-000000000000, '2015-10-03 00:00:00+0000', 'val3');

13:10:04.665 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(5173614544336528384, 00000000-0000-0000-0000-000000000001, '2015-10-04 00:00:00+0000', 'val4');

13:10:04.666 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(5173614544336528384, 00000000-0000-0000-0000-000000000001, '2015-10-05 00:00:00+0000', 'val5');

13:10:04.672 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 03c98312-e2d5-454d-8c06-77de2a3b0dc4 : [SELECT uuid,date,value FROM achilles_embedded.entity_with_clusterings WHERE id=:id AND uuid IN :uuid AND date IN :date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [5173614544336528384, [00000000-0000-0000-0000-000000000000, 00000000-0000-0000-0000-000000000001], [Fri Oct 02 19:00:00 CDT 2015, Sun Oct 04 19:00:00 CDT 2015]]
	 Encoded bound values : [5173614544336528384, [00000000-0000-0000-0000-000000000000, 00000000-0000-0000-0000-000000000001], [Fri Oct 02 19:00:00 CDT 2015, Sun Oct 04 19:00:00 CDT 2015]]
13:10:04.677 [achilles-default-executor-92] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[uuid(uuid), date(timestamp), value(varchar)]]
13:10:04.677 [achilles-default-executor-92] DEBUG ACHILLES_DML_STATEMENT - Query ID 03c98312-e2d5-454d-8c06-77de2a3b0dc4 results : 
	uuid: 00000000-0000-0000-0000-000000000000, date: Fri Oct 02 19:00:00 CDT 2015, value: val3
	uuid: 00000000-0000-0000-0000-000000000001, date: Sun Oct 04 19:00:00 CDT 2015, value: val5

13:10:04.678 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:10:04.740 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:04.745 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:10:04.746 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:10:04.816 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(520303712494768128, 00000000-0000-0000-0000-000000000000, '2015-10-01 00:00:00+0000', 'val1');

13:10:04.817 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(520303712494768128, 00000000-0000-0000-0000-000000000000, '2015-10-02 00:00:00+0000', 'val2');

13:10:04.818 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(520303712494768128, 00000000-0000-0000-0000-000000000000, '2015-10-03 00:00:00+0000', 'val3');

13:10:04.819 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(520303712494768128, 00000000-0000-0000-0000-000000000000, '2015-10-04 00:00:00+0000', 'val4');

13:10:04.820 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(520303712494768128, 00000000-0000-0000-0000-000000000000, '2015-10-05 00:00:00+0000', 'val5');

13:10:04.826 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 9ac5817e-1771-48b1-a532-2edf2d971b0b : [DELETE value FROM achilles_embedded.entity_with_clusterings WHERE id=:id AND uuid=:uuid AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [520303712494768128, 00000000-0000-0000-0000-000000000000, Thu Oct 01 19:00:00 CDT 2015]
	 Encoded bound values : [520303712494768128, 00000000-0000-0000-0000-000000000000, Thu Oct 01 19:00:00 CDT 2015]
13:10:04.828 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:10:04.894 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:04.899 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:10:04.900 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:10:04.962 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(156689856277444608, 00000000-0000-0000-0000-000000000000, '2015-10-01 00:00:00+0000', 'val1');

13:10:04.963 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(156689856277444608, 00000000-0000-0000-0000-000000000000, '2015-10-02 00:00:00+0000', 'val2');

13:10:04.964 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(156689856277444608, 00000000-0000-0000-0000-000000000000, '2015-10-03 00:00:00+0000', 'val3');

13:10:04.965 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(4445751028409156608, 00000000-0000-0000-0000-000000000000, '2015-10-04 00:00:00+0000', 'val4');

13:10:04.965 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(4445751028409156608, 00000000-0000-0000-0000-000000000000, '2015-10-05 00:00:00+0000', 'val5');

13:10:04.969 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 41881321-58a5-423a-b978-f83ef4fb0423 : [SELECT uuid,date,value FROM achilles_embedded.entity_with_clusterings WHERE id IN :id AND uuid=:uuid AND date IN :date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [[156689856277444608, 4445751028409156608], 00000000-0000-0000-0000-000000000000, [Fri Oct 02 19:00:00 CDT 2015, Sun Oct 04 19:00:00 CDT 2015]]
	 Encoded bound values : [[156689856277444608, 4445751028409156608], 00000000-0000-0000-0000-000000000000, [Fri Oct 02 19:00:00 CDT 2015, Sun Oct 04 19:00:00 CDT 2015]]
13:10:04.973 [achilles-default-executor-94] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[uuid(uuid), date(timestamp), value(varchar)]]
13:10:04.973 [achilles-default-executor-94] DEBUG ACHILLES_DML_STATEMENT - Query ID 41881321-58a5-423a-b978-f83ef4fb0423 results : 
	uuid: 00000000-0000-0000-0000-000000000000, date: Fri Oct 02 19:00:00 CDT 2015, value: val3
	uuid: 00000000-0000-0000-0000-000000000000, date: Sun Oct 04 19:00:00 CDT 2015, value: val5

13:10:04.974 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:10:05.057 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:05.061 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:10:05.062 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:10:05.128 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(7783272375239478272, 00000000-0000-0000-0000-000000000000, '2015-10-01 00:00:00+0000', 'val1');

13:10:05.129 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(7783272375239478272, 00000000-0000-0000-0000-000000000000, '2015-10-02 00:00:00+0000', 'val2');

13:10:05.130 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(7783272375239478272, 00000000-0000-0000-0000-000000000000, '2015-10-03 00:00:00+0000', 'val3');

13:10:05.131 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(7783272375239478272, 00000000-0000-0000-0000-000000000001, '2015-10-04 00:00:00+0000', 'val4');

13:10:05.132 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(7783272375239478272, 00000000-0000-0000-0000-000000000001, '2015-10-05 00:00:00+0000', 'val5');

13:10:05.137 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 0bceae7c-f66c-47c8-a945-fdd652dec244 : [SELECT uuid,date,value FROM achilles_embedded.entity_with_clusterings WHERE id=:id AND (uuid,date)>=(:uuid,:date) AND (uuid,date)<(:uuid,:date);] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [7783272375239478272, 00000000-0000-0000-0000-000000000000, Thu Oct 01 19:00:00 CDT 2015, 00000000-0000-0000-0000-000000000001, Sat Oct 03 19:00:00 CDT 2015]
	 Encoded bound values : [7783272375239478272, 00000000-0000-0000-0000-000000000000, Thu Oct 01 19:00:00 CDT 2015, 00000000-0000-0000-0000-000000000001, Sat Oct 03 19:00:00 CDT 2015]
13:10:05.140 [achilles-default-executor-95] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[uuid(uuid), date(timestamp), value(varchar)]]
13:10:05.140 [achilles-default-executor-95] DEBUG ACHILLES_DML_STATEMENT - Query ID 0bceae7c-f66c-47c8-a945-fdd652dec244 results : 
	uuid: 00000000-0000-0000-0000-000000000000, date: Fri Oct 02 19:00:00 CDT 2015, value: val3
	uuid: 00000000-0000-0000-0000-000000000000, date: Thu Oct 01 19:00:00 CDT 2015, value: val2

13:10:05.142 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID c45e19f7-6745-4d95-8250-93c60e5798e5 : [SELECT value FROM achilles_embedded.entity_with_clusterings WHERE id=:id AND (uuid,date)>=(:uuid,:date);] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [7783272375239478272, 00000000-0000-0000-0000-000000000001, Sat Oct 03 19:00:00 CDT 2015]
	 Encoded bound values : [7783272375239478272, 00000000-0000-0000-0000-000000000001, Sat Oct 03 19:00:00 CDT 2015]
13:10:05.145 [achilles-default-executor-96] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[value(varchar)]]
13:10:05.146 [achilles-default-executor-96] DEBUG ACHILLES_DML_STATEMENT - Query ID c45e19f7-6745-4d95-8250-93c60e5798e5 results : 
	value: val5
	value: val4

13:10:05.146 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:10:05.209 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:05.212 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:10:05.214 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:10:05.294 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(5270219113973783552, 00000000-0000-0000-0000-000000000000, '2015-10-01 00:00:00+0000', 'val1');

13:10:05.296 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(5270219113973783552, 00000000-0000-0000-0000-000000000000, '2015-10-02 00:00:00+0000', 'val2');

13:10:05.297 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(5270219113973783552, 00000000-0000-0000-0000-000000000000, '2015-10-03 00:00:00+0000', 'val3');

13:10:05.297 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(5270219113973783552, 00000000-0000-0000-0000-000000000001, '2015-10-04 00:00:00+0000', 'val4');

13:10:05.298 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(5270219113973783552, 00000000-0000-0000-0000-000000000001, '2015-10-05 00:00:00+0000', 'val5');

13:10:05.302 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID ea168288-3760-4336-836d-2f969ae65794 : [SELECT uuid,date,value FROM achilles_embedded.entity_with_clusterings WHERE id=:id AND uuid IN :uuid AND date>=:date_Lte AND date<=:date_Lte;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [5270219113973783552, [00000000-0000-0000-0000-000000000000, 00000000-0000-0000-0000-000000000001], Fri Oct 02 19:00:00 CDT 2015, Sun Oct 04 19:00:00 CDT 2015]
	 Encoded bound values : [5270219113973783552, [00000000-0000-0000-0000-000000000000, 00000000-0000-0000-0000-000000000001], Fri Oct 02 19:00:00 CDT 2015, Sun Oct 04 19:00:00 CDT 2015]
13:10:05.303 [achilles-default-executor-97] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[uuid(uuid), date(timestamp), value(varchar)]]
13:10:05.303 [achilles-default-executor-97] DEBUG ACHILLES_DML_STATEMENT - Query ID ea168288-3760-4336-836d-2f969ae65794 results : 
	uuid: 00000000-0000-0000-0000-000000000000, date: Fri Oct 02 19:00:00 CDT 2015, value: val3
	uuid: 00000000-0000-0000-0000-000000000001, date: Sun Oct 04 19:00:00 CDT 2015, value: val5
	uuid: 00000000-0000-0000-0000-000000000001, date: Sat Oct 03 19:00:00 CDT 2015, value: val4

13:10:05.304 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:10:05.374 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:05.379 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:10:05.381 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:10:05.611 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(8543237624512480256, 4bbdd0a0-29f5-11ec-94ed-f39e8f6d76fd, '2015-10-01 00:00:00+0000', 'val');

13:10:05.616 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID c8206978-9669-472f-84f5-672666518046 : [SELECT value FROM achilles_embedded.entity_with_clusterings WHERE id=:id AND uuid=:uuid AND date=:date;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [8543237624512480256, 4bbdd0a0-29f5-11ec-94ed-f39e8f6d76fd, Wed Sep 30 19:00:00 CDT 2015]
	 Encoded bound values : [8543237624512480256, 4bbdd0a0-29f5-11ec-94ed-f39e8f6d76fd, Wed Sep 30 19:00:00 CDT 2015]
13:10:05.621 [achilles-default-executor-98] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[value(varchar)]]
13:10:05.621 [achilles-default-executor-98] DEBUG ACHILLES_DML_STATEMENT - Query ID c8206978-9669-472f-84f5-672666518046 results : 
	value: val

13:10:05.621 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:10:05.684 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:05.689 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:10:05.690 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:10:05.752 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(5052471890758102016, 00000000-0000-0000-0000-000000000000, '2015-10-01 00:00:00+0000', 'val1');

13:10:05.753 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(5052471890758102016, 00000000-0000-0000-0000-000000000000, '2015-10-02 00:00:00+0000', 'val2');

13:10:05.754 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(5052471890758102016, 00000000-0000-0000-0000-000000000000, '2015-10-03 00:00:00+0000', 'val3');

13:10:05.755 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(5052471890758102016, 00000000-0000-0000-0000-000000000001, '2015-10-04 00:00:00+0000', 'val4');

13:10:05.756 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.entity_with_clusterings(id, uuid, date, value) VALUES(5052471890758102016, 00000000-0000-0000-0000-000000000001, '2015-10-05 00:00:00+0000', 'val5');

13:10:05.759 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 2533cd0f-50a5-4745-8d0e-7227a3bb9a79 : [SELECT uuid,date,value FROM achilles_embedded.entity_with_clusterings WHERE id=:id AND (uuid,date)>(:uuid,:date) AND (uuid)<(:uuid);] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [5052471890758102016, 00000000-0000-0000-0000-000000000000, Thu Oct 01 19:00:00 CDT 2015, 00000000-0000-0000-0000-000000000001]
	 Encoded bound values : [5052471890758102016, 00000000-0000-0000-0000-000000000000, Thu Oct 01 19:00:00 CDT 2015, 00000000-0000-0000-0000-000000000001]
13:10:05.762 [achilles-default-executor-99] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[uuid(uuid), date(timestamp), value(varchar)]]
13:10:05.762 [achilles-default-executor-99] DEBUG ACHILLES_DML_STATEMENT - Query ID 2533cd0f-50a5-4745-8d0e-7227a3bb9a79 results : 
	uuid: 00000000-0000-0000-0000-000000000000, date: Fri Oct 02 19:00:00 CDT 2015, value: val3

13:10:05.763 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.entity_with_clusterings
13:10:05.824 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:05.828 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.layer3(
		layer text);

13:10:06.016 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.layer3(
		layer text);

13:10:06.016 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.layer2(
		layer text,
		layer3 frozen<achilles_embedded.layer3>);

13:10:06.183 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.layer(
		layer text,
		layer2 frozen<achilles_embedded.layer2>,
		PRIMARY KEY(layer));

13:10:06.418 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.layer
13:10:06.491 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 9bae408d-fdf2-48bd-9183-01e516b08635 : [INSERT INTO achilles_embedded.layer (layer,layer2) VALUES (:layer,:layer2) USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [layer1_nested, info.archinnov.achilles.internals.entities.Layer2@bb5aa401, 0]
	 Encoded bound values : [layer1_nested, {layer:'layer2',layer3:{layer:'layer3'}}, 0]
13:10:06.499 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 7696d8cf-7d6f-483e-bcf9-43747cae9a45 : [SELECT layer,layer2.layer,layer2.layer3 FROM achilles_embedded.layer WHERE layer=:layer;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [layer1_nested]
	 Encoded bound values : [layer1_nested]
13:10:06.501 [achilles-default-executor-101] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[layer(varchar), layer2.layer(varchar), layer2.layer3(achilles_embedded.layer3)]]
13:10:06.501 [achilles-default-executor-101] DEBUG ACHILLES_DML_STATEMENT - Query ID 7696d8cf-7d6f-483e-bcf9-43747cae9a45 results : 
	layer: layer1_nested, layer2.layer: layer2, layer2.layer3: {layer:'layer3'}

13:10:06.502 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.layer
13:10:06.563 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:06.571 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.layer3(
		layer text);

13:10:06.571 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.layer3(
		layer text);

13:10:06.572 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TYPE IF NOT EXISTS achilles_embedded.layer2(
		layer text,
		layer3 frozen<achilles_embedded.layer3>);

13:10:06.573 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.layer(
		layer text,
		layer2 frozen<achilles_embedded.layer2>,
		PRIMARY KEY(layer));

13:10:06.574 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.layer
13:10:06.637 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 96324713-157c-4151-90c4-e0a87e3e9207 : [INSERT INTO achilles_embedded.layer (layer,layer2) VALUES (:layer,:layer2) USING TTL :ttl;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [layer1, info.archinnov.achilles.internals.entities.Layer2@bb5aa401, 0]
	 Encoded bound values : [layer1, {layer:'layer2',layer3:{layer:'layer3'}}, 0]
13:10:06.638 [main] DEBUG ACHILLES_DML_STATEMENT - 
Query ID 27b4d5e0-0930-4590-b4d9-ba8fbb3e0409 : [SELECT layer,layer2 FROM achilles_embedded.layer WHERE layer=:layer;] with CONSISTENCY LEVEL [ALL]
	 Java bound values : [layer1]
	 Encoded bound values : [layer1]
13:10:06.640 [achilles-default-executor-103] DEBUG ACHILLES_DML_STATEMENT - ResultSet[ exhausted: false, Columns[layer(varchar), layer2(achilles_embedded.layer2)]]
13:10:06.640 [achilles-default-executor-103] DEBUG ACHILLES_DML_STATEMENT - Query ID 27b4d5e0-0930-4590-b4d9-ba8fbb3e0409 results : 
	layer: layer1, layer2: {layer:'layer2',layer3:{layer:'layer3'}}

13:10:06.641 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.layer
13:10:06.714 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:06.718 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:10:06.719 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:10:06.721 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:10:06.794 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(781792206055617536, '2015-10-01 00:00:00+0000', ['QUORUM', 'LOCAL_ONE'], {1.0, 2.0}, {10: 'ten', 20: 'twenty'}, '0 AM');

13:10:06.798 [main] DEBUG i.a.a.i.entities.SimpleEntity - 
Query ID fa37a519-396b-4e41-8bdb-ad9d97bf060b : [SELECT * FROM simple WHERE id = 781792206055617536] with CONSISTENCY LEVEL [null]
13:10:06.799 [achilles-default-executor-104] DEBUG i.a.a.i.entities.SimpleEntity - ResultSet[ exhausted: false, Columns[id(bigint), date(timestamp), consistencylist(list<varchar>), simplemap(map<int, varchar>), simpleset(set<double>), value(varchar)]]
13:10:06.799 [achilles-default-executor-104] DEBUG i.a.a.i.entities.SimpleEntity - Query ID fa37a519-396b-4e41-8bdb-ad9d97bf060b results : 
	id: 781792206055617536, date: Wed Sep 30 19:00:00 CDT 2015, consistencylist: [QUORUM, LOCAL_ONE], simplemap: {10=ten, 20=twenty}, simpleset: [1.0, 2.0], value: 0 AM

13:10:06.799 [achilles-default-executor-104] TRACE i.a.a.i.entities.SimpleEntity - 

Tracing for Query ID fa37a519-396b-4e41-8bdb-ad9d97bf060b at host localhost/127.0.0.1:9042 with achieved consistency level null 
****************************
Description                                                                      | Source           | Source elapsed in micros | Thread name         
****************************


13:10:06.800 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:10:06.861 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:06.865 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:10:06.866 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:10:06.867 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:10:06.939 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:10:07.008 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:07.012 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:10:07.013 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:10:07.014 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:10:07.074 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:10:07.151 [main] INFO  i.a.a.embedded.AchillesInitializer - Creating keyspace : CREATE keyspace IF NOT EXISTS achilles_embedded WITH REPLICATION = {'class':'SimpleStrategy', 'replication_factor':1} AND DURABLE_WRITES=false
13:10:07.157 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.simple(
		id bigint,
		date timestamp,
		consistencylist list<text>,
		simplemap map<int, text>,
		simpleset set<double>,
		value text,
		PRIMARY KEY(id, date))
	WITH CLUSTERING ORDER BY(date ASC);

13:10:07.158 [main] DEBUG ACHILLES_DDL_SCRIPT - 
CREATE TABLE IF NOT EXISTS achilles_embedded.entity_with_clusterings(
		id bigint,
		uuid uuid,
		date timestamp,
		value text,
		PRIMARY KEY(id, uuid, date))
	WITH CLUSTERING ORDER BY(uuid ASC, date DESC);

13:10:07.160 [main] DEBUG ACHILLES_DML_STATEMENT - TRUNCATE achilles_embedded.simple
13:10:07.234 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(4944331311816615936, '2015-10-01 00:00:00+0000', ['ONE'], {1.0}, {1: 'one'}, 'id - date1');

13:10:07.236 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(4944331311816615936, '2015-10-02 00:00:00+0000', ['TWO'], {2.0}, {2: 'two'}, 'id - date2');

13:10:07.237 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(4944331311816615936, '2015-10-03 00:00:00+0000', ['THREE'], {3.0}, {3: 'three'}, 'id - date3');

13:10:07.238 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(4944331311816615936, '2015-10-04 00:00:00+0000', ['QUORUM'], {4.0}, {4: 'four'}, 'id - date4');

13:10:07.239 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(4944331311816615936, '2015-10-05 00:00:00+0000', ['ALL'], {5.0}, {5: 'five'}, 'id - date5');

13:10:07.241 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(4944331311816615936, '2015-10-06 00:00:00+0000', ['LOCAL_ONE'], {6.0}, {6: 'six'}, 'id - date6');

13:10:07.242 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(4944331311816615936, '2015-10-07 00:00:00+0000', ['LOCAL_QUORUM'], {7.0}, {7: 'seven'}, 'id - date7');

13:10:07.243 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(4944331311816615936, '2015-10-08 00:00:00+0000', ['EACH_QUORUM'], {8.0}, {8: 'eight'}, 'id - date8');

13:10:07.244 [main] DEBUG ACHILLES_DML_STATEMENT - 	SCRIPT : INSERT INTO achilles_embedded.simple(id, date, consistencylist, simpleset, simplemap, value) VALUES(4944331311816615936, '2015-10-09 00:00:00+0000', ['SERIAL'], {9.0}, {9: 'nine'}, 'id - date9');

